package ArrayList;

adt ArrayList {
    Arraylist  { }
    Add_object        { ArrayList self; Object e; }
    Addb_object       { ArrayList self; Object e; }
    Get_int        { ArrayList self; int i; }
    Setb_int_object       { ArrayList self; int i; Object e; }
    Set_int_object        { ArrayList self; int i; Object e; }
    Size       { ArrayList self; }
}

Object ArrayList_ArrayList() {
    return new Object(__cid=ArrayList(), _arraylist=new Arraylist());
}

Object add_Object_Object(Object self, Object e) {
    return new Object(__cid=ArrayList(), _arraylist=new Add_object(self=self._arraylist, e=e));
}

Object addb_Object_Object(Object self, Object e) {
    self._arraylist=new Addb_object(self=self._arraylist, e=e);
return self;
}

Object get_Object_int(Object self, int i) {
    return xform_get_ArrayList_int(self._arraylist, i);
}

Object setb_Object_int_Object(Object self, int i, Object e) {
    self._arraylist=new Setb_int_object(self=self._arraylist, i=i, e=e);
return self;
}

Object set_Object_int_Object(Object self, int i, Object e) {
    return new Object(__cid=ArrayList(), _arraylist=new Set_int_object(self=self._arraylist, i=i, e=e));
}

int size_Object(Object self) {
    return xform_size_ArrayList(self._arraylist);
}

Object xform_get_ArrayList_int(ArrayList selff, int i) {
  ArrayList self = selff;
  switch(self) {
  case Arraylist: { return null; }
  case Add_object: { assert false; }
  case Addb_object: {
    int sz = xform_size_ArrayList(self.self);
    int h1 = i+??;
    int h2 = i-??;
    int h3 = i*??;
    bit cond = {| true | (sz == ??) | (sz == h1) | (sz == h2) | (sz == h3) | sz == i |};
    Object ret1 = {| null | self.e | xform_get_ArrayList_int(self.self, i) | xform_get_ArrayList_int(self.self, ??) |};
    Object ret2 = {| null | self.e | xform_get_ArrayList_int(self.self, i) | xform_get_ArrayList_int(self.self, ??) |};
    return cond ? ret1 : ret2;
  }
  case Get_int: { assert false; }
  case Setb_int_object: {
    int sz = xform_size_ArrayList(self.self);
    int h1 = i+??;
    int h2 = i-??;
    int h3 = i*??;
    bit b1 = h1 == self.i;
    bit b2 = h2 == self.i;
    bit b3 = h3 == self.i;    
    bit cond = {| true | (sz == ??) | (sz == h1) | (sz == h2) | (sz == h3) | sz == i || b1 | b2 | b3 |};      
    Object ret1 = {| null | self.e | xform_get_ArrayList_int(self.self, i) | xform_get_ArrayList_int(self.self, ??) |};
    Object ret2 = {| null | self.e | xform_get_ArrayList_int(self.self, i) | xform_get_ArrayList_int(self.self, ??) |};
    return cond ? ret1 : ret2;
    /* return (i == self.i ? self.e : xform_get_ArrayList_int(self.self, i)); */
  }
  case Set_int_object: { assert false; }
  case Size: { assert false; }
  }

  return null;
}
int xform_size_ArrayList(ArrayList selff) {
  ArrayList self = selff;
  switch(self) {
  case Arraylist: {
    /* return 0; */
    return ??;
  }
  case Add_object: { assert false; }
  case Addb_object: {
    int sz = xform_size_ArrayList(self.self);
    return {| ?? | sz * ?? | sz + ?? | sz - ?? |};
    /* return xform_size_ArrayList(self.self) + 1; */
  }
  case Get_int: { assert false; }
  case Setb_int_object: {
    int sz = xform_size_ArrayList(self.self);
    return {| ?? | sz * ?? | sz + ?? | sz - ?? |};
    /* return xform_size_ArrayList(self.self); */
  }
  case Set_int_object: { assert false; }
  case Size: { assert false; }
  }

  return 0;
}
