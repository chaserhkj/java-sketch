package Cipher;

Object getInstance_String(Object type) {
  return Cipher_Object_String(type);
}

adt Cipher {
    Cipher_empty  { }
    Tostring_object      { Cipher self; Object str; }
    Readencoded_string   { Cipher self; Object pt; }
    Cipher_string        { Object t; }
    Init_int_secretkeyspec          { Cipher self; Object mode; Object s; }
    Initb_int_secretkeyspec         { Cipher self; Object mode; Object s; }
    Dofinalb_object      { Cipher self; Object text; }
    Dofinal_object       { Cipher self; Object text; }
}

Object Cipher_Cipher() {
    return new Object(__cid=Cipher(), _cipher=new Cipher_empty());
}

Object toString_Object_Object(Object self, Object str) {
    return new Object(__cid=Cipher(), _cipher=new Tostring_object(self=self._cipher, str=str));
}

Object readEncoded_Object_String(Object self, Object pt) {
    return new Object(__cid=Cipher(), _cipher=new Readencoded_string(self=self._cipher, pt=pt));
}

Object Cipher_Object_String(Object t) {
    return new Object(__cid=Cipher(), _cipher=new Cipher_string(t=t));
}

Object init_Object_int_SecretKeySpec(Object self, Object mode, Object s) {
    return new Object(__cid=Cipher(), _cipher=new Init_int_secretkeyspec(self=self._cipher, mode=mode, s=s));
}

Object initb_Object_int_SecretKeySpec(Object self, Object mode, Object s) {
    return new Object(__cid=Cipher(), _cipher=new Initb_int_secretkeyspec(self=self._cipher, mode=mode, s=s));
}

Object doFinalb_Object_Object(Object self, Object text) {
    return new Object(__cid=Cipher(), _cipher=new Dofinalb_object(self=self._cipher, text=text));
}

Object doFinal_Object_Object(Object self, Object text) {
    return new Object(__cid=Cipher(), _cipher=new Dofinal_object(self=self._cipher, text=text));
}

Object xform_Cipher(Cipher self) {
  switch(self) {
  case Cipher_empty: {
    return xform_cipher_Cipher(self);
  }
  case Tostring_object: { assert false; }
  case Readencoded_string: { assert false; }
  case Cipher_string: { assert false; }
  case Init_int_secretkeyspec: { assert false; }
  case Initb_int_secretkeyspec: { assert false; }
  case Dofinalb_object: { assert false; }
  case Dofinal_object: { assert false; }
  }

  return null;
}
Object xform_doFinal_Cipher_Object(Cipher self, Object text) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Tostring_object: { assert false; }
  case Readencoded_string: { assert false; }
  case Cipher_string: { assert false; }
  case Init_int_secretkeyspec: { assert false; }
  case Initb_int_secretkeyspec: {
    {
      Cipher text_text;
      text_text = text._cipher;
      switch(text_text) {
      case Cipher_empty: { assert false; }
      case Tostring_object: { assert false; }
      case Readencoded_string: {
        {
          Cipher text_text_text;
          text_text_text = text_text.pt._cipher;
          switch(text_text_text) {
          case Cipher_empty: { assert false; }
          case Tostring_object: {
            {
              Cipher text_text_text_text;
              text_text_text_text = text_text_text.str._cipher;
              switch(text_text_text_text) {
              case Cipher_empty: { assert false; }
              case Tostring_object: { assert false; }
              case Readencoded_string: { assert false; }
              case Cipher_string: { assert false; }
              case Init_int_secretkeyspec: { assert false; }
              case Initb_int_secretkeyspec: { assert false; }
              case Dofinalb_object: { assert false; }
              case Dofinal_object: {
                {
                  Cipher text_text_text_text_text;
                  text_text_text_text_text = text_text_text_text.self;
                  switch(text_text_text_text_text) {
                  case Cipher_empty: { assert false; }
                  case Tostring_object: { assert false; }
                  case Readencoded_string: { assert false; }
                  case Cipher_string: { assert false; }
                  case Init_int_secretkeyspec: { assert false; }
                  case Initb_int_secretkeyspec: {
		    Object cond = xform_equals_SecretKeySpec_Object(self.s._secretkeyspec, text_text_text_text_text.s);
		    if (cond._bit) {
		      if (self.mode._int == 2 && text_text_text_text_text.mode._int == 1) {
			return text_text_text_text.text;
		      } else {
			return null;
		      }
		    } else {
		      return null;
		    }
                    /* return ((self.s.__cid == (new Object(__cid=-2, _int=SecretKeySpec()))._int ? equals_Object_Object@SecretKeySpec(self.s, text_text_text_text_text.s) : null)._bit ? (((self.mode._int == (new Object(__cid=-2, _int=2))._int && text_text_text_text_text.mode._int == (new Object(__cid=-2, _int=1))._int) ? text_text_text_text.text : null)) : null); */
                  }
                  case Dofinalb_object: { assert false; }
                  case Dofinal_object: { assert false; }
                  }

                }
              }
              }

            }
          }
          case Readencoded_string: { assert false; }
          case Cipher_string: { assert false; }
          case Init_int_secretkeyspec: { assert false; }
          case Initb_int_secretkeyspec: { assert false; }
          case Dofinalb_object: { assert false; }
          case Dofinal_object: { assert false; }
          }

        }
      }
      case Cipher_string: { assert false; }
      case Init_int_secretkeyspec: { assert false; }
      case Initb_int_secretkeyspec: { assert false; }
      case Dofinalb_object: { assert false; }
      case Dofinal_object: { assert false; }
      }

    }
  }
  case Dofinalb_object: { assert false; }
  case Dofinal_object: { assert false; }
  }

  return null;
}
Object xform_doFinalb_Cipher_Object(Cipher self, Object text) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Tostring_object: { assert false; }
  case Readencoded_string: { assert false; }
  case Cipher_string: { assert false; }
  case Init_int_secretkeyspec: { assert false; }
  case Initb_int_secretkeyspec: { assert false; }
  case Dofinalb_object: { assert false; }
  case Dofinal_object: { assert false; }
  }

  return null;
}
Object xform_initb_Cipher_int_SecretKeySpec(Cipher self, Object mode, Object s) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Tostring_object: { assert false; }
  case Readencoded_string: { assert false; }
  case Cipher_string: { assert false; }
  case Init_int_secretkeyspec: { assert false; }
  case Initb_int_secretkeyspec: { assert false; }
  case Dofinalb_object: { assert false; }
  case Dofinal_object: { assert false; }
  }

  return null;
}
Object xform_init_Cipher_int_SecretKeySpec(Cipher self, Object mode, Object s) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Tostring_object: { assert false; }
  case Readencoded_string: { assert false; }
  case Cipher_string: { assert false; }
  case Init_int_secretkeyspec: { assert false; }
  case Initb_int_secretkeyspec: { assert false; }
  case Dofinalb_object: { assert false; }
  case Dofinal_object: { assert false; }
  }

  return null;
}
Object xform_toString_Cipher_Object(Cipher self, Object str) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Tostring_object: { assert false; }
  case Readencoded_string: { assert false; }
  case Cipher_string: { assert false; }
  case Init_int_secretkeyspec: { assert false; }
  case Initb_int_secretkeyspec: { assert false; }
  case Dofinalb_object: { assert false; }
  case Dofinal_object: { assert false; }
  }

  return null;
}
Object xform_readEncoded_Cipher_String(Cipher self, Object pt) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Tostring_object: { assert false; }
  case Readencoded_string: { assert false; }
  case Cipher_string: { assert false; }
  case Init_int_secretkeyspec: { assert false; }
  case Initb_int_secretkeyspec: { assert false; }
  case Dofinalb_object: { assert false; }
  case Dofinal_object: { assert false; }
  }

  return null;
}
Object xform_cipher_Cipher(Cipher self) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Tostring_object: { assert false; }
  case Readencoded_string: { assert false; }
  case Cipher_string: { assert false; }
  case Init_int_secretkeyspec: { assert false; }
  case Initb_int_secretkeyspec: { assert false; }
  case Dofinalb_object: { assert false; }
  case Dofinal_object: { assert false; }
  }

  return null;
}
Object xform_Cipher_Cipher_String(Cipher self, Object t) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Tostring_object: { assert false; }
  case Readencoded_string: { assert false; }
  case Cipher_string: { assert false; }
  case Init_int_secretkeyspec: { assert false; }
  case Initb_int_secretkeyspec: { assert false; }
  case Dofinalb_object: { assert false; }
  case Dofinal_object: { assert false; }
  }

  return null;
}
