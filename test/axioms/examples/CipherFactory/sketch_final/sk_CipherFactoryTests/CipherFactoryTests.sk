package CipherFactoryTests;

Object CipherFactoryTests_CipherFactoryTests(Object self) {
    return self;
}

harness void main() {
  Object self = Object_Object(new Object(__cid=Object()));
  Object cm = CryptoManager_CryptoManager(new Object(__cid=CryptoManager()));
  /* for (Object x = (new Object(__cid=-2, _int=0)); x._int < (new Object(__cid=-2, _int=1))._int; x = (new Object(__cid=-2, _int=x._int + (new Object(__cid=-2, _int=1))._int))) { */
  for (int i = 9; i < 5000000; i=i*9) {
    Object x = new Object(__cid=-2, _int=i);
    Object m = toString_int@Integer(x);
    Object d = (cm.__cid == (new Object(__cid=-2, _int=CryptoManager()))._int ? encrypt_String@CryptoManager(cm, m) : null);
    assert !(m.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(m, d) : null)._bit;
    Object p = (cm.__cid == (new Object(__cid=-2, _int=CryptoManager()))._int ? decrypt_String@CryptoManager(cm, d) : null);
    assert (p.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(p, m) : null)._bit;
  }
}

