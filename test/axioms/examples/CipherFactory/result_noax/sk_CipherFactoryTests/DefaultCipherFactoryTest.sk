package DefaultCipherFactoryTest;

Object DefaultCipherFactoryTest_DefaultCipherFactoryTest(Object self) {
  self.defaultCipherFactory_DefaultCipherFactoryTest = DefaultCipherFactory_DefaultCipherFactory(new Object(__cid=DefaultCipherFactory()));
  self.keyString_DefaultCipherFactoryTest = String_String_char_int_int(new Object(__cid=String()), new Array_char(length=16+1, A="StrongKey0123456"), 0, 16);
  return self;
}

void setUp(Object self) {
  if (self.defaultCipherFactory_DefaultCipherFactoryTest.__cid == DefaultCipherFactory()) { setKey_String@DefaultCipherFactory(self.defaultCipherFactory_DefaultCipherFactoryTest, self.keyString_DefaultCipherFactoryTest); }
  else { 0; };
}

void testEncryptionCipher(Object self) {
  assertEquals_Object_Object@Assert(self.cipher_DefaultCipherFactoryTest, (self.defaultCipherFactory_DefaultCipherFactoryTest.__cid == DefaultCipherFactory() ? encryptionCipher@DefaultCipherFactory(self.defaultCipherFactory_DefaultCipherFactoryTest) : null));
}

void testDecryptionCipher(Object self) {
  assertEquals_Object_Object@Assert(self.cipher_DefaultCipherFactoryTest, (self.defaultCipherFactory_DefaultCipherFactoryTest.__cid == DefaultCipherFactory() ? decryptionCipher@DefaultCipherFactory(self.defaultCipherFactory_DefaultCipherFactoryTest) : null));
}

void testInitCipher(Object self) {
  assertEquals_Object_Object@Assert(self.cipher_DefaultCipherFactoryTest, (self.defaultCipherFactory_DefaultCipherFactoryTest.__cid == DefaultCipherFactory() ? initCipher_int@DefaultCipherFactory(self.defaultCipherFactory_DefaultCipherFactoryTest, 1) : null));
}

void testObtainCipher(Object self) {
  assert (self.defaultCipherFactory_DefaultCipherFactoryTest.__cid == DefaultCipherFactory() ? obtainCipher_int@DefaultCipherFactory(self.defaultCipherFactory_DefaultCipherFactoryTest, 1) : null) != null;
}

void testKey(Object self) {
  assertArrayEquals_byte_byte@Assert((self.keyString_DefaultCipherFactoryTest.__cid == String() ? getBytes@String(self.keyString_DefaultCipherFactoryTest) : null), (self.defaultCipherFactory_DefaultCipherFactoryTest.__cid == DefaultCipherFactory() ? key@DefaultCipherFactory(self.defaultCipherFactory_DefaultCipherFactoryTest) : null));
}

void testKeyBase64(Object self) {
  if (self.defaultCipherFactory_DefaultCipherFactoryTest.__cid == DefaultCipherFactory()) { setKey_String@DefaultCipherFactory(self.defaultCipherFactory_DefaultCipherFactoryTest, String_String_byte(new Object(__cid=String()), (self.keyString_DefaultCipherFactoryTest.__cid == String() ? getBytes@String(self.keyString_DefaultCipherFactoryTest) : null))); }
  else { 0; };
  if (self.defaultCipherFactory_DefaultCipherFactoryTest.__cid == DefaultCipherFactory()) { setKeyBase64_boolean@DefaultCipherFactory(self.defaultCipherFactory_DefaultCipherFactoryTest, true); }
  else { 0; };
  assertArrayEquals_byte_byte@Assert((self.keyString_DefaultCipherFactoryTest.__cid == String() ? getBytes@String(self.keyString_DefaultCipherFactoryTest) : null), (self.defaultCipherFactory_DefaultCipherFactoryTest.__cid == DefaultCipherFactory() ? key@DefaultCipherFactory(self.defaultCipherFactory_DefaultCipherFactoryTest) : null));
}

