package Cipher;

Object getInstance_String(Object type) {
  return Cipher_Object_String(type);
}

adt Cipher {
    Cipher_empty  { }
    Cipher_object_string { Object t; }
    Init          { Cipher self; Object mode; Object s; }
    Initb         { Cipher self; Object mode; Object s; }
    Dofinalb      { Cipher self; Object text; }
    Dofinal       { Cipher self; Object text; }
}

Object Cipher_Cipher() {
    return new Object(__cid=Cipher(), _cipher=new Cipher_empty());
}

Object Cipher_Object_String(Object t) {
    return new Object(__cid=Cipher(), _cipher=new Cipher_object_string(t=t));
}

Object init_Object_int_SecretKeySpec(Object self, Object mode, Object s) {
    return new Object(__cid=Cipher(), _cipher=new Init(self=self._cipher, mode=mode, s=s));
}

Object initb_Object_int_SecretKeySpec(Object self, Object mode, Object s) {
    return new Object(__cid=Cipher(), _cipher=new Initb(self=self._cipher, mode=mode, s=s));
}

Object doFinalb_Object_Object(Object self, Object text) {
    return new Object(__cid=Cipher(), _cipher=new Dofinalb(self=self._cipher, text=text));
}

Object doFinal_Object_Object(Object self, Object text) {
    return new Object(__cid=Cipher(), _cipher=new Dofinal(self=self._cipher, text=text));
}

Object xform_Cipher(Cipher self) {
  switch(self) {
  case Cipher_empty: {
    return xform_cipher_Empty_Cipher(self);
  }
  case Cipher_object_string: {
    return xform_Cipher_Object_String_Cipher_String(self, self.t);
  }
  case Init: {
    return xform_init_Cipher_int_SecretKeySpec(self.self, self.mode, self.s);
  }
  case Initb: {
    return xform_initb_Cipher_int_SecretKeySpec(self.self, self.mode, self.s);
  }
  case Dofinalb: {
    return xform_doFinalb_Cipher_Object(self.self, self.text);
  }
  case Dofinal: {
    return xform_doFinal_Cipher_Object(self.self, self.text);
  }
  }

  return null;
}
Object xform_initb_Cipher_int_SecretKeySpec(Cipher self, Object mode, Object s) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Cipher_object_string: { assert false; }
  case Init: { assert false; }
  case Initb: { assert false; }
  case Dofinalb: { assert false; }
  case Dofinal: { assert false; }
  }

  return null;
}
Object xform_init_Cipher_int_SecretKeySpec(Cipher self, Object mode, Object s) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Cipher_object_string: { assert false; }
  case Init: { assert false; }
  case Initb: { assert false; }
  case Dofinalb: { assert false; }
  case Dofinal: { assert false; }
  }

  return null;
}
Object xform_doFinal_Cipher_Object(Cipher self, Object text) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Cipher_object_string: { assert false; }
  case Init: { assert false; }
  case Initb: {
    {
      Cipher text_text;
      text_text = text._cipher;
      switch(text_text) {
      case Cipher_empty: { assert false; }
      case Cipher_object_string: { assert false; }
      case Init: { assert false; }
      case Initb: { assert false; }
      case Dofinalb: { assert false; }
      case Dofinal: {
        {
          Cipher text_text_text;
          text_text_text = text_text.self;
          switch(text_text_text) {
          case Cipher_empty: { assert false; }
          case Cipher_object_string: { assert false; }
          case Init: { assert false; }
          case Initb: {
            return ((self.s.__cid == (new Object(__cid=-2, _int=SecretKeySpec()))._int ? equals_Object@Object(self.s, text_text_text.s) : null)._bit ? (((self.mode._int == (new Object(__cid=-2, _int=2))._int && text_text_text.mode._int == (new Object(__cid=-2, _int=1))._int) ? text_text.text : null)) : null);
          }
          case Dofinalb: { assert false; }
          case Dofinal: { assert false; }
          }

        }
      }
      }

    }
  }
  case Dofinalb: { assert false; }
  case Dofinal: { assert false; }
  }

  return null;
}
Object xform_Cipher_Object_String_Cipher_String(Cipher self, Object t) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Cipher_object_string: { assert false; }
  case Init: { assert false; }
  case Initb: { assert false; }
  case Dofinalb: { assert false; }
  case Dofinal: { assert false; }
  }

  return null;
}
Object xform_doFinalb_Cipher_Object(Cipher self, Object text) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Cipher_object_string: { assert false; }
  case Init: { assert false; }
  case Initb: { assert false; }
  case Dofinalb: { assert false; }
  case Dofinal: { assert false; }
  }

  return null;
}
Object xform_cipher_Empty_Cipher(Cipher self) {
  switch(self) {
  case Cipher_empty: { assert false; }
  case Cipher_object_string: { assert false; }
  case Init: { assert false; }
  case Initb: { assert false; }
  case Dofinalb: { assert false; }
  case Dofinal: { assert false; }
  }

  return null;
}
