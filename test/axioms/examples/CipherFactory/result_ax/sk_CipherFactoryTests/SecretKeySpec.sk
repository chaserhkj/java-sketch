package SecretKeySpec;

adt SecretKeySpec {
    Secretkeyspec  { }
    Getencoded     { SecretKeySpec self; }
    Equals_object         { SecretKeySpec self; Object o; }
}

Object SecretKeySpec_SecretKeySpec() {
    return new Object(__cid=SecretKeySpec(), _secretkeyspec=new Secretkeyspec());
}

Object getEncoded_Object(Object self) {
    return new Object(__cid=SecretKeySpec(), _secretkeyspec=new Getencoded(self=self._secretkeyspec));
}

Object equals_Object_Object(Object self, Object o) {
    return xform_equals_SecretKeySpec_Object(self._secretkeyspec, o);
}

Object xform_SecretKeySpec(SecretKeySpec self) {
  switch(self) {
  case Secretkeyspec: {
    return xform_secretkeyspec_SecretKeySpec(self);
  }
  case Getencoded: {
    return xform_getEncoded_SecretKeySpec(self.self);
  }
  case Equals_object: {
    return xform_equals_SecretKeySpec_Object(self.self, self.o);
  }
  }

  return null;
}
Object xform_equals_SecretKeySpec_Object(SecretKeySpec self, Object o) {
  switch(self) {
  case Secretkeyspec: {
    {
      SecretKeySpec o_o;
      o_o = o._secretkeyspec;
      switch(o_o) {
      case Secretkeyspec: {
        {
          SecretKeySpec o_o_o;
          o_o_o = o_o.self;
          switch(o_o_o) {
          case Secretkeyspec: {
            return (new Object(__cid=-4, _bit=true));
          }
          case Getencoded: { assert false; }
          case Equals_object: { assert false; }
          }

        }
      }
      case Getencoded: { assert false; }
      case Equals_object: { assert false; }
      }

    }
  }
  case Getencoded: { assert false; }
  case Equals_object: { assert false; }
  }

  return null;
}
Object xform_getEncoded_SecretKeySpec(SecretKeySpec self) {
  switch(self) {
  case Secretkeyspec: { assert false; }
  case Getencoded: { assert false; }
  case Equals_object: { assert false; }
  }

  return null;
}
Object xform_secretkeyspec_SecretKeySpec(SecretKeySpec self) {
  switch(self) {
  case Secretkeyspec: { assert false; }
  case Getencoded: { assert false; }
  case Equals_object: { assert false; }
  }

  return null;
}
