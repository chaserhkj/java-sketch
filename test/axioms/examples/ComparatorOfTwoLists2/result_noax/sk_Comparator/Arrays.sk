package Arrays;

Object Arrays_Arrays(Object self) {
    return self;
}

Object copyOf_byte_int(Object in, Object len) {
  Object n = Wrap_Array_char(new Array_char(length=len));
  for (Object i = (new Object(__cid=-2, _int=0)); i._int < len._int; i = new Object(__cid=-2, _int=i._int + 1)) {
    if (i._int >= in._array_char.length._int) {
      n._array_char.A[i._int] = (new Object(__cid=-2, _int=0))._int;
    }
    else {
      n._array_char.A[i._int] = in._array_char.A[i._int];
    }
  }
  return n;
}

Object arraysEquals_byte_byte(Object b1, Object b2) {
  if (b1._array_char.length._int == b2._array_char.length._int) {
    for (Object i = (new Object(__cid=-2, _int=0)); i._int < b1._array_char.length._int; i = new Object(__cid=-2, _int=i._int + 1)) {
      if (b1._array_char.A[i._int] != b2._array_char.A[i._int]) return (new Object(__cid=-4, _bit=false));
    }
  }
  else {
    return (new Object(__cid=-4, _bit=false));
  }
  return (new Object(__cid=-4, _bit=true));
}

