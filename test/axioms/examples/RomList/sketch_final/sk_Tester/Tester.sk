package Tester;

Object Tester_Tester(Object self) {
    return self;
}

harness void mn() {
  Object self = Object_Object(new Object(__cid=Object()));
  Object f = File_File_String(new Object(__cid=File()), String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=22+1), A="#A\na;b;c;d;e;f;g;h;i;j")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=22)));
  Object p = RomlistParser_RomlistParser(new Object(__cid=RomlistParser()));
  Object games = (p.__cid == (new Object(__cid=-2, _int=RomlistParser()))._int ? parse_File@RomlistParser(p, f) : null);
  /* Object g1 = (games.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? get_Object_int@ArrayList(games, (new Object(__cid=-2, _int=0))) : null); */
  Object g1 = xform_get_ArrayList_int(games._arraylist, (new Object(__cid=-2, _int=0)));
  Object name1 = (g1.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getName@RomlistGame(g1) : null);
  Object title1 = (g1.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getTitle@RomlistGame(g1) : null);
  Object emul1 = (g1.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getEmulator@RomlistGame(g1) : null);
  Object clone1 = (g1.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getCloneOf@RomlistGame(g1) : null);
  Object year1 = (g1.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getYear@RomlistGame(g1) : null);
  Object man1 = (g1.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getManufacturer@RomlistGame(g1) : null);
  Object cat1 = (g1.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getCategory@RomlistGame(g1) : null);
  Object plays1 = (g1.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getPlayers@RomlistGame(g1) : null);
  Object rot1 = (g1.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getRotation@RomlistGame(g1) : null);
  Object cont1 = (g1.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getControl@RomlistGame(g1) : null);
  assert (name1.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(name1, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="a")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit;
  assert (title1.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(title1, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="b")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit;
  assert (emul1.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(emul1, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="c")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit;
  assert (clone1.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(clone1, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="d")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit;
  assert (year1.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(year1, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="e")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit;
  assert (man1.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(man1, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="f")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit;
  assert (cat1.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(cat1, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="g")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit;
  assert (plays1.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(plays1, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="h")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit;
  assert (rot1.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(rot1, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="i")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit;
  assert (cont1.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(cont1, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="j")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit;

  /* Object f2 = File_File_String(new Object(__cid=File()), String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=39+1), A="0;1;2;3;4;5;6;7;8;9\nq;w;e;r;t;y;u;i;o;p")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=39))); */
  /* Object p2 = RomlistParser_RomlistParser(new Object(__cid=RomlistParser())); */
  /* Object games2 = (p2.__cid == (new Object(__cid=-2, _int=RomlistParser()))._int ? parse_File@RomlistParser(p2, f2) : null); */

  /* /\* Object g2 = (games2.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? get_Object_int@ArrayList(games2, (new Object(__cid=-2, _int=0))) : null); *\/ */
  /* Object g2 = xform_get_ArrayList_int(games2._arraylist, (new Object(__cid=-2, _int=0))); */
  /* Object name2 = (g2.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getName@RomlistGame(g2) : null); */
  /* Object title2 = (g2.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getTitle@RomlistGame(g2) : null); */
  /* Object emul2 = (g2.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getEmulator@RomlistGame(g2) : null); */
  /* Object clone2 = (g2.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getCloneOf@RomlistGame(g2) : null); */
  /* Object year2 = (g2.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getYear@RomlistGame(g2) : null); */
  /* Object man2 = (g2.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getManufacturer@RomlistGame(g2) : null); */
  /* Object cat2 = (g2.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getCategory@RomlistGame(g2) : null); */
  /* Object plays2 = (g2.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getPlayers@RomlistGame(g2) : null); */
  /* Object rot2 = (g2.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getRotation@RomlistGame(g2) : null); */
  /* Object cont2 = (g2.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getControl@RomlistGame(g2) : null); */
  /* assert (name2.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(name2, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="0")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (title2.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(title2, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="1")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (emul2.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(emul2, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="2")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (clone2.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(clone2, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="3")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (year2.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(year2, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="4")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (man2.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(man2, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="5")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (cat2.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(cat2, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="6")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (plays2.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(plays2, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="7")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (rot2.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(rot2, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="8")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (cont2.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(cont2, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="9")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* /\* Object g3 = (games2.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? get_Object_int@ArrayList(games2, (new Object(__cid=-2, _int=1))) : null); *\/ */
  /* Object g3 = xform_get_ArrayList_int(games2._arraylist, (new Object(__cid=-2, _int=1))); */
  /* Object name3 = (g3.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getName@RomlistGame(g3) : null); */
  /* Object title3 = (g3.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getTitle@RomlistGame(g3) : null); */
  /* Object emul3 = (g3.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getEmulator@RomlistGame(g3) : null); */
  /* Object clone3 = (g3.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getCloneOf@RomlistGame(g3) : null); */
  /* Object year3 = (g3.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getYear@RomlistGame(g3) : null); */
  /* Object man3 = (g3.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getManufacturer@RomlistGame(g3) : null); */
  /* Object cat3 = (g3.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getCategory@RomlistGame(g3) : null); */
  /* Object plays3 = (g3.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getPlayers@RomlistGame(g3) : null); */
  /* Object rot3 = (g3.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getRotation@RomlistGame(g3) : null); */
  /* Object cont3 = (g3.__cid == (new Object(__cid=-2, _int=RomlistGame()))._int ? getControl@RomlistGame(g3) : null); */
  /* assert (name3.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(name3, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="q")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (title3.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(title3, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="w")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (emul3.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(emul3, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="e")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (clone3.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(clone3, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="r")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (year3.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(year3, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="t")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (man3.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(man3, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="y")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (cat3.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(cat3, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="u")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (plays3.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(plays3, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="i")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (rot3.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(rot3, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="o")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
  /* assert (cont3.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(cont3, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A="p")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))) : null)._bit; */
}

