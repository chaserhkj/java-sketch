SKETCH version 1.7.5
Benchmark = /Users/grumpy/Research/java-sketch2/test/axioms/examples/RomList/RomList/../result_noax/sk_Tester/main.sk
/* BEGIN PACKAGE FileWriterr*/
package FileWriterr{
  /* END PACKAGE FileWriterr*/
}
/* BEGIN PACKAGE Comparable*/
package Comparable{
  /* END PACKAGE Comparable*/
}
/* BEGIN PACKAGE PrivateKey*/
package PrivateKey{
  /* END PACKAGE PrivateKey*/
}
/* BEGIN PACKAGE HashMap*/
package HashMap{
  /* END PACKAGE HashMap*/
}
/* BEGIN PACKAGE ArrayList*/
package ArrayList{
  /*ArrayList.sk:7*/
  
void glblInit_MAX_ARRAY_SIZE__ArrayList_s4969 (ref Object@Object MAX_ARRAY_SIZE__ArrayList_s4968)/*ArrayList.sk:7*/
  {
    MAX_ARRAY_SIZE__ArrayList_s4968 = new Object@Object(__cid=-2, _int=1000000);
  }
  /* END PACKAGE ArrayList*/
}
/* BEGIN PACKAGE RomlistGame*/
package RomlistGame{
  /* END PACKAGE RomlistGame*/
}
/* BEGIN PACKAGE String*/
package String{
  /* END PACKAGE String*/
}
/* BEGIN PACKAGE Assert*/
package Assert{
  /* END PACKAGE Assert*/
}
/* BEGIN PACKAGE SecretKeySpec*/
package SecretKeySpec{
  /* END PACKAGE SecretKeySpec*/
}
/* BEGIN PACKAGE TreeSet*/
package TreeSet{
  /* END PACKAGE TreeSet*/
}
/* BEGIN PACKAGE List*/
package List{
  /* END PACKAGE List*/
}
/* BEGIN PACKAGE Collections*/
package Collections{
  /* END PACKAGE Collections*/
}
/* BEGIN PACKAGE Boolean*/
package Boolean{
  /* END PACKAGE Boolean*/
}
/* BEGIN PACKAGE HashSet*/
package HashSet{
  /* END PACKAGE HashSet*/
}
/* BEGIN PACKAGE Character*/
package Character{
  /* END PACKAGE Character*/
}
/* BEGIN PACKAGE CharSequence*/
package CharSequence{
  /* END PACKAGE CharSequence*/
}
/* BEGIN PACKAGE SecureRandom*/
package SecureRandom{
  /* END PACKAGE SecureRandom*/
}
/* BEGIN PACKAGE CryptoCipherFactory*/
package CryptoCipherFactory{
  /* END PACKAGE CryptoCipherFactory*/
}
/* BEGIN PACKAGE HashMap_Node*/
package HashMap_Node{
  /* END PACKAGE HashMap_Node*/
}
/* BEGIN PACKAGE LinkedList*/
package LinkedList{
  /* END PACKAGE LinkedList*/
}
/* BEGIN PACKAGE Mac*/
package Mac{
  /* END PACKAGE Mac*/
}
/* BEGIN PACKAGE Stack*/
package Stack{
  /* END PACKAGE Stack*/
}
/* BEGIN PACKAGE FileReaderr*/
package FileReaderr{
  /* END PACKAGE FileReaderr*/
}
/* BEGIN PACKAGE Float*/
package Float{
  /* END PACKAGE Float*/
}
/* BEGIN PACKAGE SecretKey*/
package SecretKey{
  /* END PACKAGE SecretKey*/
}
/* BEGIN PACKAGE Map_Entry*/
package Map_Entry{
  /* END PACKAGE Map_Entry*/
}
/* BEGIN PACKAGE KerberosKey*/
package KerberosKey{
  /* END PACKAGE KerberosKey*/
}
/* BEGIN PACKAGE meta*/
package meta{
  /*meta.sk:43*/
  
void Object (ref int _out)/*meta.sk:43*/
  {
    _out = 1;
    return;
  }
  /* END PACKAGE meta*/
}
/* BEGIN PACKAGE FileOutputStream*/
package FileOutputStream{
  /* END PACKAGE FileOutputStream*/
}
/* BEGIN PACKAGE Object*/
package Object{
  struct Object {
      int __cid;
      Object _value_StringBuilder;
      Object _count_StringBuilder;
      Object elementData_AbstractQueue;
      Object size_AbstractQueue;
      Object capacity_AbstractQueue;
      Object out_PrintStream;
      Object file_Scanner;
      Object value_Integer;
      Object key_SecretKeySpec;
      Object fname_File;
      Object size_File;
      Object writer_BufferedWriter;
      Object value_Character;
      Object reader_BufferedReader;
      Object set_TreeSet;
      Object capacity_TreeSet;
      Object size_TreeSet;
      Object value_Float;
      Object mode_KeyGenerator;
      Object CLASSES_KEY_CryptoCipherFactory;
      Object path_FileReaderr;
      Object data_FileReaderr;
      Object position_FileReaderr;
      Object key_KerberosKey;
      Object KEYSIZE_KerberosKey;
      Object bool_Boolean;
      Object type_Cipher;
      Object key_Cipher;
      Object mode_Cipher;
      Object ENCRYPT_MODE_Cipher;
      Object DECRYPT_MODE_Cipher;
      Object map_Properties;
      Object _value_StringBuffer;
      Object _count_StringBuffer;
      Object path_FileOutputStream;
      Object elementData_ArrayList;
      Object DEFAULT_CAPACITY_ArrayList;
      Object capacity_ArrayList;
      Object size_ArrayList;
      Object instance_KeyStore;
      Object fname_FileWriterr;
      Object currentHead_ArrayDeque;
      Object currentTail_ArrayDeque;
      Object size_ArrayDeque;
      Object name_RomlistGame;
      Object title_RomlistGame;
      Object emulator_RomlistGame;
      Object cloneOf_RomlistGame;
      Object year_RomlistGame;
      Object manufacturer_RomlistGame;
      Object category_RomlistGame;
      Object players_RomlistGame;
      Object rotation_RomlistGame;
      Object control_RomlistGame;
      Object status_RomlistGame;
      Object displayCount_RomlistGame;
      Object displayType_RomlistGame;
      Object altRomname_RomlistGame;
      Object altTitle_RomlistGame;
      Object extra_RomlistGame;
      Object buttons_RomlistGame;
      Object isAvailable_RomlistGame;
      Object hasWheel_RomlistGame;
      Object hasVideo_RomlistGame;
      Object hasSnap_RomlistGame;
      Object hasBox_RomlistGame;
      Object hasCart_RomlistGame;
      Object hasDatabase_RomlistGame;
      Object complete_RomlistGame;
      Object romlist_RomlistGame;
      Object fileName_RomlistGame;
      Object wheelFileName_RomlistGame;
      Object boxFileName_RomlistGame;
      Object cartFileName_RomlistGame;
      Object snapFileName_RomlistGame;
      Object description_RomlistGame;
      Object rating_RomlistGame;
      Object releaseDate_RomlistGame;
      Object developer_RomlistGame;
      Object publisher_RomlistGame;
      Object genre_RomlistGame;
      Object pi3Status_RomlistGame;
      Object pcStatus_RomlistGame;
      Object size_RomlistGame;
      Object _value_String;
      Object _count_String;
      Object key_HashMap_Node;
      Object value_HashMap_Node;
      Object hash_HashMap_Node;
      Object elementData_Stack;
      Object size_Stack;
      Object capacity_Stack;
      Object val_ArrayDeque_DequeNode;
      Object prev_ArrayDeque_DequeNode;
      Object next_ArrayDeque_DequeNode;
      Object elementData_HashMap;
      Object numPairs_HashMap;
      Object capacity_HashMap;
      Object totalGames_RomlistParser;
      Object totalGamesAvailable_RomlistParser;
      Object missingWheel_RomlistParser;
      Object missingVideo_RomlistParser;
      Object missingCart_RomlistParser;
      Object missingBox_RomlistParser;
      Object missingGames_RomlistParser;
      Object games_RomlistParser;
      Object complete_RomlistParser;
      Object description_RomlistParser;
      Object romPath_RomlistParser;
      Object set_HashSet;
      Object capacity_HashSet;
      Object size_HashSet;
      Array_bit _array_bit;
      Array_char _array_char;
      Array_int _array_int;
      Array_float _array_float;
      Array_double _array_double;
      Array_Object _array_object;
      bit _bit;
      char _char;
      int _int;
      float _float;
      double _double;
  }
  /*Object.sk:7*/
  
void Object_Object (Object self, ref Object _out)/*Object.sk:7*/
  {
    _out = self;
    return;
  }
  /* END PACKAGE Object*/
}
/* BEGIN PACKAGE Arrays*/
package Arrays{
  /* END PACKAGE Arrays*/
}
/* BEGIN PACKAGE File*/
package File{
  /* END PACKAGE File*/
}
/* BEGIN PACKAGE Map*/
package Map{
  /* END PACKAGE Map*/
}
/* BEGIN PACKAGE AlgorithmParameterSpec*/
package AlgorithmParameterSpec{
  /* END PACKAGE AlgorithmParameterSpec*/
}
/* BEGIN PACKAGE Key*/
package Key{
  /* END PACKAGE Key*/
}
/* BEGIN PACKAGE Scanner*/
package Scanner{
  /* END PACKAGE Scanner*/
}
/* BEGIN PACKAGE Tester*/
package Tester{
  /*Tester.sk:7*/
  
void mn ()/*Tester.sk:7*/
  {
    int self_s4472 = 0;
    Object@meta(self_s4472);
    Object@Object self_s4474 = null;
    Object_Object@Object(new Object@Object(__cid=self_s4472), self_s4474);
  }
  /*Tester.sk:7*/
  
void mn__Wrapper ()  implements mn__WrapperNospec/*Tester.sk:7*/
  {
    mn();
  }
  /*Tester.sk:7*/
  
void mn__WrapperNospec ()/*Tester.sk:7*/
  { }
  /* END PACKAGE Tester*/
}
/* BEGIN PACKAGE Set*/
package Set{
  /* END PACKAGE Set*/
}
/* BEGIN PACKAGE StringBuilder*/
package StringBuilder{
  /* END PACKAGE StringBuilder*/
}
/* BEGIN PACKAGE CryptoCipherFactory_CipherProvider*/
package CryptoCipherFactory_CipherProvider{
  /* END PACKAGE CryptoCipherFactory_CipherProvider*/
}
/* BEGIN PACKAGE Properties*/
package Properties{
  /* END PACKAGE Properties*/
}
/* BEGIN PACKAGE ArrayDeque_DequeNode*/
package ArrayDeque_DequeNode{
  /* END PACKAGE ArrayDeque_DequeNode*/
}
/* BEGIN PACKAGE System*/
package System{
  /* END PACKAGE System*/
}
/* BEGIN PACKAGE BufferedWriter*/
package BufferedWriter{
  /* END PACKAGE BufferedWriter*/
}
/* BEGIN PACKAGE AbstractQueue*/
package AbstractQueue{
  /* END PACKAGE AbstractQueue*/
}
/* BEGIN PACKAGE Number*/
package Number{
  /* END PACKAGE Number*/
}
/* BEGIN PACKAGE array*/
package array{
  struct Array_bit {
      Object length;
      bit[length._int] A;
  }
  struct Array_char {
      Object length;
      char[length._int] A;
  }
  struct Array_int {
      Object length;
      int[length._int] A;
  }
  struct Array_float {
      Object length;
      float[length._int] A;
  }
  struct Array_double {
      Object length;
      double[length._int] A;
  }
  struct Array_Object {
      Object length;
      Object[length._int] A;
  }
  /* END PACKAGE array*/
}
/* BEGIN PACKAGE Iterator*/
package Iterator{
  /* END PACKAGE Iterator*/
}
/* BEGIN PACKAGE KeyGenerator*/
package KeyGenerator{
  /* END PACKAGE KeyGenerator*/
}
/* BEGIN PACKAGE Queue*/
package Queue{
  /* END PACKAGE Queue*/
}
/* BEGIN PACKAGE PrintStream*/
package PrintStream{
  /* END PACKAGE PrintStream*/
}
/* BEGIN PACKAGE ANONYMOUS*/
/* END PACKAGE ANONYMOUS*/
/* BEGIN PACKAGE TreeMap*/
package TreeMap{
  /* END PACKAGE TreeMap*/
}
/* BEGIN PACKAGE Deque*/
package Deque{
  /* END PACKAGE Deque*/
}
/* BEGIN PACKAGE KeyStore*/
package KeyStore{
  /* END PACKAGE KeyStore*/
}
/* BEGIN PACKAGE ArrayDeque*/
package ArrayDeque{
  /* END PACKAGE ArrayDeque*/
}
/* BEGIN PACKAGE Integer*/
package Integer{
  /* END PACKAGE Integer*/
}
/* BEGIN PACKAGE StringBuffer*/
package StringBuffer{
  /* END PACKAGE StringBuffer*/
}
/* BEGIN PACKAGE Utils*/
package Utils{
  /* END PACKAGE Utils*/
}
/* BEGIN PACKAGE BufferedReader*/
package BufferedReader{
  /* END PACKAGE BufferedReader*/
}
/* BEGIN PACKAGE IvParameterSpec*/
package IvParameterSpec{
  /* END PACKAGE IvParameterSpec*/
}
/* BEGIN PACKAGE RomlistParser*/
package RomlistParser{
  /* END PACKAGE RomlistParser*/
}
/* BEGIN PACKAGE Cipher*/
package Cipher{
  /* END PACKAGE Cipher*/
}
[SKETCH] DONE
Total time = 4792
