SKETCH version 1.7.5
Benchmark = /Users/grumpy/Research/java-sketch2/test/axioms/examples/HashMap1/HashMap/../result_ax/sk_HashTableTest/main.sk
/* BEGIN PACKAGE ANONYMOUS*/
/* END PACKAGE ANONYMOUS*/
/* BEGIN PACKAGE HashTable*/
package HashTable{
  /*HashTable.sk:7*/
  
void HashTable_HashTable_int (Object self, Object initialCapacity, ref Object _out)/*HashTable.sk:7*/
  {
    self.initialCapacity_HashTable = initialCapacity;
    self.capacityGrowth_HashTable = new Object@Object(__cid=-2, _int=2);
    self.maxLoadFactor_HashTable = new Object@Object(__cid=-6, _double=0.75);
    Object@Object _out_s27 = null;
    ArrayList_ArrayList@ArrayList(_out_s27);
    self.buckets_HashTable = _out_s27;
    resetHashTable@HashTable(self);
    _out = self;
    return;
  }
  /*HashTable.sk:16*/
  
void resetHashTable (Object self)/*HashTable.sk:16*/
  {
    self.size_HashTable = new Object@Object(__cid=-2, _int=0);
    self.currentCapacity_HashTable = self.initialCapacity_HashTable;
    Object@Object _out_s29 = null;
    ArrayList_ArrayList@ArrayList(_out_s29);
    self.buckets_HashTable = _out_s29;
    Object@Object g = self.size_HashTable;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=88);
    bit __sa0 = (i._int) < (g._int);
    while(__sa0)
    {
      int _out_s31 = 0;
      ArrayList@meta(_out_s31);
      if((self.buckets_HashTable.__cid) == (new Object@Object(__cid=-2, _int=_out_s31)._int))/*HashTable.sk:22*/
      {
        Object@Object _out_s34 = null;
        add_Object_Object@ArrayList(self.buckets_HashTable, null, _out_s34);
      }
      int _out_s36 = 0;
      ArrayList@meta(_out_s36);
      Object@Object _pac_sc_s37 = null;
      if((self.buckets_HashTable.__cid) == (new Object@Object(__cid=-2, _int=_out_s36)._int))/*HashTable.sk:22*/
      {
        Object@Object _out_s39 = null;
        addb_Object_Object@ArrayList(self.buckets_HashTable, null, _out_s39);
        _pac_sc_s37 = _out_s39;
      }
      else
      {
        _pac_sc_s37 = null;
      }
      self.buckets_HashTable = _pac_sc_s37;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa0 = (i._int) < (g._int);
    }
  }
  /* END PACKAGE HashTable*/
}
/* BEGIN PACKAGE Character*/
package Character{
  /* END PACKAGE Character*/
}
/* BEGIN PACKAGE HashTableNode*/
package HashTableNode{
  /* END PACKAGE HashTableNode*/
}
/* BEGIN PACKAGE CharSequence*/
package CharSequence{
  /* END PACKAGE CharSequence*/
}
/* BEGIN PACKAGE ArrayList*/
package ArrayList{
  struct ArrayList {
      @Immutable()
  }
  struct Arraylist extends ArrayList@ArrayList {
      @Immutable()
  }
  struct Add extends ArrayList@ArrayList {
      ArrayList self;
      Object e;
      @Immutable()
  }
  struct Addb extends ArrayList@ArrayList {
      ArrayList self;
      Object e;
      @Immutable()
  }
  struct Getb extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      @Immutable()
  }
  struct Setb extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      Object e;
      @Immutable()
  }
  struct Get extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      @Immutable()
  }
  struct Set extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      Object e;
      @Immutable()
  }
  struct Ensurecapacity extends ArrayList@ArrayList {
      ArrayList self;
      Object n;
      @Immutable()
  }
  struct Size extends ArrayList@ArrayList {
      ArrayList self;
      @Immutable()
  }
  /*ArrayList.sk:15*/
  
void ArrayList_ArrayList (ref Object _out)/*ArrayList.sk:15*/
  {
    int _out_s563 = 0;
    ArrayList@meta(_out_s563);
    _out = new Object@Object(__cid=_out_s563, _arraylist=new Arraylist());
    return;
  }
  /*ArrayList.sk:19*/
  
void add_Object_Object (Object self, Object e, ref Object _out)/*ArrayList.sk:19*/
  {
    int _out_s561 = 0;
    ArrayList@meta(_out_s561);
    _out = new Object@Object(__cid=_out_s561, _arraylist=new Add(self=self._arraylist, e=e));
    return;
  }
  /*ArrayList.sk:23*/
  
void addb_Object_Object (Object self, Object e, ref Object _out)/*ArrayList.sk:23*/
  {
    int _out_s559 = 0;
    ArrayList@meta(_out_s559);
    _out = new Object@Object(__cid=_out_s559, _arraylist=new Addb(self=self._arraylist, e=e));
    return;
  }
  /* END PACKAGE ArrayList*/
}
/* BEGIN PACKAGE String*/
package String{
  /* END PACKAGE String*/
}
/* BEGIN PACKAGE Integer*/
package Integer{
  /*Integer.sk:7*/
  
void Integer_Integer_int (Object self, Object value, ref Object _out)/*Integer.sk:7*/
  {
    self.value_Integer = value;
    _out = self;
    return;
  }
  /* END PACKAGE Integer*/
}
/* BEGIN PACKAGE Assert*/
package Assert{
  /* END PACKAGE Assert*/
}
/* BEGIN PACKAGE array*/
package array{
  struct Array_bit {
      Object length;
      bit[length._int] A;
  }
  struct Array_char {
      Object length;
      char[length._int] A;
  }
  struct Array_int {
      Object length;
      int[length._int] A;
  }
  struct Array_float {
      Object length;
      float[length._int] A;
  }
  struct Array_double {
      Object length;
      double[length._int] A;
  }
  struct Array_Object {
      Object length;
      Object[length._int] A;
  }
  /* END PACKAGE array*/
}
/* BEGIN PACKAGE HashTableTest*/
package HashTableTest{
  /*HashTableTest.sk:3*/
  
void glblInit_INITIAL_SIZE__HashTableTest_s1329 (ref Object@Object INITIAL_SIZE__HashTableTest_s1328)/*HashTableTest.sk:3*/
  {
    INITIAL_SIZE__HashTableTest_s1328 = new Object@Object(__cid=-2, _int=8);
  }
  /*HashTableTest.sk:11*/
  
void mn_int_int_int (int __x, int __y, int __z, ref global Object@Object INITIAL_SIZE__HashTableTest_s1327)/*HashTableTest.sk:11*/
  {
    Object@Object x;
    x = new Object@Object(__cid=-2, _int=__x);
    Object@Object y;
    y = new Object@Object(__cid=-2, _int=__y);
    Object@Object z;
    z = new Object@Object(__cid=-2, _int=__z);
    int self_s905 = 0;
    Object@meta(self_s905);
    Object@Object self_s907 = null;
    Object_Object@Object(new Object@Object(__cid=self_s905), self_s907);
    assume ((((x._int) != (y._int)) && ((x._int) != (z._int))) && ((y._int) != (z._int))): "Assume at HashTableTest.sk:16"; //Assume at HashTableTest.sk:16
    int xx_s909 = 0;
    Integer@meta(xx_s909);
    Object@Object xx_s911 = null;
    Integer_Integer_int@Integer(new Object@Object(__cid=xx_s909), x, xx_s911);
    int yy_s913 = 0;
    Integer@meta(yy_s913);
    Object@Object yy_s915 = null;
    Integer_Integer_int@Integer(new Object@Object(__cid=yy_s913), y, yy_s915);
    int zz_s917 = 0;
    Integer@meta(zz_s917);
    Object@Object zz_s919 = null;
    Integer_Integer_int@Integer(new Object@Object(__cid=zz_s917), z, zz_s919);
    setUp@HashTableTest(self_s907, INITIAL_SIZE__HashTableTest_s1327);
  }
  /*HashTableTest.sk:11*/
  
void mn_int_int_int__Wrapper (int __x, int __y, int __z)  implements mn_int_int_int__WrapperNospec/*HashTableTest.sk:11*/
  {
    global Object@Object INITIAL_SIZE__HashTableTest_s1326 = null;
    glblInit_INITIAL_SIZE__HashTableTest_s1329(INITIAL_SIZE__HashTableTest_s1326);
    mn_int_int_int(__x, __y, __z, INITIAL_SIZE__HashTableTest_s1326);
  }
  /*HashTableTest.sk:11*/
  
void mn_int_int_int__WrapperNospec (int __x, int __y, int __z)/*HashTableTest.sk:11*/
  { }
  /*HashTableTest.sk:38*/
  
void setUp (Object self, ref global Object@Object INITIAL_SIZE__HashTableTest_s1325)/*HashTableTest.sk:38*/
  {
    int _out_s921 = 0;
    HashTable@meta(_out_s921);
    Object@Object _out_s923 = null;
    HashTable_HashTable_int@HashTable(new Object@Object(__cid=_out_s921), INITIAL_SIZE__HashTableTest_s1325, _out_s923);
    self.classUnderTest_HashTableTest = _out_s923;
  }
  /* END PACKAGE HashTableTest*/
}
/* BEGIN PACKAGE meta*/
package meta{
  /*meta.sk:4*/
  
void ArrayList (ref int _out)/*meta.sk:4*/
  {
    _out = 6;
    return;
  }
  /*meta.sk:9*/
  
void HashTable (ref int _out)/*meta.sk:9*/
  {
    _out = 2;
    return;
  }
  /*meta.sk:12*/
  
void Integer (ref int _out)/*meta.sk:12*/
  {
    _out = 7;
    return;
  }
  /*meta.sk:13*/
  
void Object (ref int _out)/*meta.sk:13*/
  {
    _out = 1;
    return;
  }
  /* END PACKAGE meta*/
}
/* BEGIN PACKAGE Object*/
package Object{
  struct Object {
      int __cid;
      Object _value_String;
      Object _count_String;
      Object bool_Boolean;
      Object value_Character;
      Object maxLoadFactor_HashTable;
      Object capacityGrowth_HashTable;
      Object initialCapacity_HashTable;
      Object size_HashTable;
      Object currentCapacity_HashTable;
      Object buckets_HashTable;
      Object value_Integer;
      Object classUnderTest_HashTableTest;
      Object key_HashTableNode;
      Object value_HashTableNode;
      Object next_HashTableNode;
      ArrayList _arraylist;
      Array_bit _array_bit;
      Array_char _array_char;
      Array_int _array_int;
      Array_float _array_float;
      Array_double _array_double;
      Array_Object _array_object;
      bit _bit;
      char _char;
      int _int;
      float _float;
      double _double;
  }
  /*Object.sk:3*/
  
void Object_Object (Object self, ref Object _out)/*Object.sk:3*/
  {
    _out = self;
    return;
  }
  /* END PACKAGE Object*/
}
/* BEGIN PACKAGE Boolean*/
package Boolean{
  /* END PACKAGE Boolean*/
}
[SKETCH] DONE
Total time = 2703
