package CsvRow;

Object CsvRow_CsvRow(Object self) {
  self.columns_CsvRow = ArrayList_ArrayList();
  return self;
}

Object CsvRow_CsvRow_String_String(Object self, Object v1, Object v2) {
  self.columns_CsvRow = ArrayList_ArrayList();
  (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? add_Object_Object@ArrayList(self.columns_CsvRow, CsvColumn_CsvColumn_String(new Object(__cid=CsvColumn()), v1)) : null); self.columns_CsvRow = (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? addb_Object_Object@ArrayList(self.columns_CsvRow, CsvColumn_CsvColumn_String(new Object(__cid=CsvColumn()), v1)) : null);
  (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? add_Object_Object@ArrayList(self.columns_CsvRow, CsvColumn_CsvColumn_String(new Object(__cid=CsvColumn()), v2)) : null); self.columns_CsvRow = (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? addb_Object_Object@ArrayList(self.columns_CsvRow, CsvColumn_CsvColumn_String(new Object(__cid=CsvColumn()), v2)) : null);
  return self;
}

Object CsvRow_CsvRow_CsvColumn_CsvColumn(Object self, Object v1, Object v2) {
  self.columns_CsvRow = ArrayList_ArrayList();
  (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? add_Object_Object@ArrayList(self.columns_CsvRow, v1) : null); self.columns_CsvRow = (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? addb_Object_Object@ArrayList(self.columns_CsvRow, v1) : null);
  (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? add_Object_Object@ArrayList(self.columns_CsvRow, v2) : null); self.columns_CsvRow = (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? addb_Object_Object@ArrayList(self.columns_CsvRow, v2) : null);
  return self;
}

Object CsvRow_CsvRow_ArrayList(Object self, Object rowColumns) {
  self.columns_CsvRow = ArrayList_ArrayList();
  self.columns_CsvRow = rowColumns;
  return self;
}

Object getColumnAtIndex_int(Object self, Object index) {
  /* return (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? get_Object_int@ArrayList(self.columns_CsvRow, index) : null); */
  Object get = xform_get_ArrayList_int(self.columns_CsvRow._arraylist, index);
  return get;
}

Object getNumberOfColumns(Object self) {
  /* return (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? size_Object@ArrayList(self.columns_CsvRow) : null); */
  Object sz = xform_size_ArrayList(self.columns_CsvRow._arraylist);
  return sz;
}

Object isEmpty(Object self) {
  Object sz = xform_size_ArrayList(self.columns_CsvRow._arraylist);  
  return (new Object(__cid=-4, _bit=(self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? sz : null)._int == (new Object(__cid=-2, _int=0))._int));
}

Object toString(Object self) {
  Object sb = StringBuilder_StringBuilder(new Object(__cid=StringBuilder()));
  Object sz = xform_size_ArrayList(self.columns_CsvRow._arraylist);  
  for (Object i = (new Object(__cid=-2, _int=0)); i._int < (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? sz : null)._int; i = new Object(__cid=-2, _int=i._int + 1)) {
    /* Object c = (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? get_Object_int@ArrayList(self.columns_CsvRow, i) : null); */
    Object c = xform_get_ArrayList_int(self.columns_CsvRow._arraylist, i);
    if (sb.__cid == (new Object(__cid=-2, _int=StringBuilder()))._int) { append_String@StringBuilder(sb, (c.__cid == (new Object(__cid=-2, _int=CsvColumn()))._int ? getColumnValue@CsvColumn(c) : null)); }
    else { 0; };
    if (i._int < (self.columns_CsvRow.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? sz : null)._int - (new Object(__cid=-2, _int=1))._int) {
      if (sb.__cid == (new Object(__cid=-2, _int=StringBuilder()))._int) { append_String@StringBuilder(sb, String_String_char_int_int(new Object(__cid=String()), Wrap_Array_char(new Array_char(length=new Object(__cid=-2, _int=1+1), A=",")), new Object(__cid=-2, _int=0), new Object(__cid=-2, _int=1))); }
      else { 0; };
    }
  }
  return (sb.__cid == (new Object(__cid=-2, _int=StringBuilder()))._int ? toString@StringBuilder(sb) : null);
}

