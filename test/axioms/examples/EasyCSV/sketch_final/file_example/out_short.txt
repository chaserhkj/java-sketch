SKETCH version 1.7.5
Benchmark = /Users/kathymariano/Research/java-sketch2/test/axioms/examples/EasyCSV/sketch_final/sk_Tester/main.sk
    [0;32m[1522157979.3350 - DEBUG] Running stage 'parse' -- Parse the program from a file[0m
NOTE -- multiple values provided for command line option 'bnd-unroll-amnt'; using '6'
NOTE -- multiple values provided for command line option 'bnd-unroll-amnt'; using '6'
NOTE -- multiple values provided for command line option 'bnd-unroll-amnt'; using '6'
    [0;32m[1522157980.7930 - DEBUG] Running stage 'preproc' -- Preprocessing (used for all further transformations)[0m
array.sk:5: Making final Array_bit@array.length
array.sk:5: Making final Object._int
array.sk:10: Making final Array_char@array.length
array.sk:15: Making final Array_int@array.length
array.sk:20: Making final Array_float@array.length
array.sk:25: Making final Array_double@array.length
array.sk:30: Making final Array_Object@array.length
    [0;32m[1522157981.4240 - DEBUG] Running stage SpmdLowLevelCStage[0m
    [0;32m[1522157981.4300 - DEBUG]    Running visitor FlattenStmtBlocks2[0m
    [0;32m[1522157981.4330 - DEBUG]    Running visitor SplitAssignFromVarDef[0m
    [0;32m[1522157981.4390 - DEBUG]    Running visitor EliminateComplexForLoops[0m
    [0;32m[1522157981.4430 - DEBUG] Running stage 'lowering' -- Lower for SKETCH backend[0m
    [0;32m[1522157981.5190 - DEBUG] Running stage 'sten' -- Stencil transformations[0m
[SATBackend] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SATBackend] MAX LOOP UNROLLING = 6
[SATBackend] MAX FUNC INLINING  = 3
estimated size of mn__Wrapper_Tester
stmt cnt: 3
callee mn_Tester : 15

[SATBackend] After prog.accept(partialEval)
[SATBackend] OFILE = sk_Tester
searching for file null
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/cegis/src/SketchSolver/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/cegis
searching for file cegis/src/SketchSolver/cegis
searching for file ../sketch-backend/src/SketchSolver/cegis
searching for file ../sketch-backend/bindings/cegis
searching for file /Users/kathymariano/Research/java-sketch2/test/axioms/examples/EasyCSV/sketch_final/cegis-1.7.5
searching for file /Users/kathymariano/Research/java-sketch2/test/axioms/examples/EasyCSV/sketch_final/cegis
searching for file /usr/bin/cegis
searching for file /usr/bin/src/SketchSolver/cegis
searching for file /usr/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/bin/../sketch-backend/bindings/cegis
searching for file /bin/cegis
searching for file /bin/src/SketchSolver/cegis
searching for file /bin/../sketch-backend/src/SketchSolver/cegis
searching for file /bin/../sketch-backend/bindings/cegis
searching for file /usr/sbin/cegis
searching for file /usr/sbin/src/SketchSolver/cegis
searching for file /usr/sbin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/sbin/../sketch-backend/bindings/cegis
searching for file /sbin/cegis
searching for file /sbin/src/SketchSolver/cegis
searching for file /sbin/../sketch-backend/src/SketchSolver/cegis
searching for file /sbin/../sketch-backend/bindings/cegis
searching for file /usr/local/bin/cegis
searching for file /usr/local/bin/src/SketchSolver/cegis
searching for file /usr/local/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/local/bin/../sketch-backend/bindings/cegis
searching for file /Applications/Racket v6.10/bin/cegis
searching for file /Applications/Racket v6.10/bin/src/SketchSolver/cegis
searching for file /Applications/Racket v6.10/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /Applications/Racket v6.10/bin/../sketch-backend/bindings/cegis
searching for file /Library/TeX/texbin/cegis
searching for file /Library/TeX/texbin/src/SketchSolver/cegis
searching for file /Library/TeX/texbin/../sketch-backend/src/SketchSolver/cegis
searching for file /Library/TeX/texbin/../sketch-backend/bindings/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/src/SketchSolver/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/../sketch-backend/src/SketchSolver/cegis
resolved cegis to path /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis
    [0;32m[1522157982.8770 - DEBUG] executing /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis --bnd-inbits 5 --boundmode CALLNAME --verbosity 13 --print-version -simiters 4 -randassign --assumebcheck --bnd-inline-amnt 3 -nosim -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /Users/kathymariano/Research/java-sketch2/test/axioms/examples/EasyCSV/sketch_final/tmp/sk_Tester/solution0-0 /Users/kathymariano/Research/java-sketch2/test/axioms/examples/EasyCSV/sketch_final/tmp/sk_Tester/input0.tmp[0m
[SATBackend] Launching: /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis --bnd-inbits 5 --boundmode CALLNAME --verbosity 13 --print-version -simiters 4 -randassign --assumebcheck --bnd-inline-amnt 3 -nosim -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /Users/kathymariano/Research/java-sketch2/test/axioms/examples/EasyCSV/sketch_final/tmp/sk_Tester/solution0-0 /Users/kathymariano/Research/java-sketch2/test/axioms/examples/EasyCSV/sketch_final/tmp/sk_Tester/input0.tmp 
starting command line: [/Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis, --bnd-inbits, 5, --boundmode, CALLNAME, --verbosity, 13, --print-version, -simiters, 4, -randassign, --assumebcheck, --bnd-inline-amnt, 3, -nosim, -angelictupledepth, 1, -srctupledepth, 2, -sprandbias, 1, -o, /Users/kathymariano/Research/java-sketch2/test/axioms/examples/EasyCSV/sketch_final/tmp/sk_Tester/solution0-0, /Users/kathymariano/Research/java-sketch2/test/axioms/examples/EasyCSV/sketch_final/tmp/sk_Tester/input0.tmp]
Overriding inputs with 5
boundmode = CALLNAME
assuming  bounds checks
SOLVER RAND SEED = 1522157983
 optimization level = 6
Reading SKETCH Program in File /Users/kathymariano/Research/java-sketch2/test/axioms/examples/EasyCSV/sketch_final/tmp/sk_Tester/input0.tmp
CREATING mn__Wrapper_Tester
size = 4
after ba size = 4
CREATING mn__WrapperNospec_Tester
size = 0
after ba size = 0
CREATING mn_Tester
size = 94
after ba size = 94
CREATING Object_meta
size = 3
after ba size = 3
CREATING Object_Object_Object
size = 38
after ba size = 38
CREATING runTests_CsvDocumentTest
size = 88
after ba size = 88
CREATING with_no_config_options_should_parse_csv_file_and_create_csv_document_CsvDocumentTest
Found Cycle of size 22; Breaking.
size = 1294
after ba size = 1294
CREATING String_meta
size = 3
after ba size = 3
CREATING Wrap_Array_char_array
size = 48
after ba size = 48
CREATING String_String_char_int_int_String
size = 570
after ba size = 570
CREATING read_String_CsvDocument
size = 133
after ba size = 133
CREATING CsvDocument_meta
size = 3
after ba size = 3
CREATING getCsvRows_CsvDocument
size = 45
after ba size = 45
CREATING xform_get_ArrayList_int_ArrayList
size = 468
after ba size = 468
CREATING CsvRow_meta
size = 3
after ba size = 3
CREATING toString_CsvRow
Found Cycle of size 44; Breaking.
Found Cycle of size 39; Breaking.
Found Cycle of size 40; Breaking.
Found Cycle of size 42; Breaking.
size = 3177
after ba size = 3177
CREATING equals_Object_String
Found Cycle of size 6; Breaking.
size = 717
after ba size = 717
CREATING Array_meta
size = 3
after ba size = 3
CREATING CsvConfiguration_meta
size = 3
after ba size = 3
CREATING CsvConfiguration_CsvConfiguration_CsvConfiguration
size = 91
after ba size = 91
CREATING read_String_CsvConfiguration_CsvDocument
Found Cycle of size 48; Breaking.
Found Cycle of size 66; Breaking.
size = 24199
after ba size = 24199
CREATING xform_size_ArrayList_ArrayList
size = 379
after ba size = 379
CREATING StringBuilder_meta
size = 3
after ba size = 3
CREATING StringBuilder_StringBuilder_StringBuilder
size = 99
after ba size = 99
CREATING ArrayList_meta
size = 3
after ba size = 3
CREATING CsvColumn_meta
size = 3
after ba size = 3
CREATING getColumnValue_CsvColumn
size = 45
after ba size = 45
CREATING append_String_StringBuilder
Found Cycle of size 12; Breaking.
size = 1589
after ba size = 1589
CREATING toString_StringBuilder
size = 102
after ba size = 102
CREATING length_String
size = 45
after ba size = 45
CREATING ArrayList_ArrayList_ArrayList
size = 48
after ba size = 48
CREATING FileReaderr_meta
size = 3
after ba size = 3
CREATING FileReaderr_FileReaderr_String_FileReaderr
Found Cycle of size 5; Breaking.
size = 277
after ba size = 277
CREATING BufferedReader_Object_FileReaderr_BufferedReader
size = 48
after ba size = 48
CREATING parseCsvRow_CsvConfiguration_String_CsvDocument
Found Cycle of size 59; Breaking.
Found Cycle of size 37; Breaking.
Found Cycle of size 38; Breaking.
Found Cycle of size 10; Breaking.
size = 5376
after ba size = 5376
CREATING add_Object_Object_ArrayList
size = 54
after ba size = 54
CREATING addb_Object_Object_ArrayList
size = 49
after ba size = 49
CREATING xform_readLine_BufferedReader_BufferedReader
size = 259
after ba size = 259
CREATING BufferedReader_meta
size = 3
after ba size = 3
CREATING readLineb_Object_BufferedReader
size = 48
after ba size = 48
CREATING CsvDocument_CsvDocument_ArrayList_CsvDocument
size = 46
after ba size = 46
CREATING charAt_int_String
size = 116
after ba size = 116
CREATING split_String_String
size = 97
after ba size = 97
CREATING parseAllColumns_CsvConfiguration
size = 162
after ba size = 162
CREATING CsvColumn_CsvColumn_String_CsvColumn
size = 46
after ba size = 46
CREATING getColumnIndexesToParse_CsvConfiguration
size = 45
after ba size = 45
CREATING Integer_meta
size = 3
after ba size = 3
CREATING intValue_Integer
size = 45
after ba size = 45
CREATING CsvRow_CsvRow_ArrayList_CsvRow
size = 84
after ba size = 84
CREATING get_int_FileReaderr
size = 97
after ba size = 97
CREATING xform_readLineHelp_BufferedReader_int_BufferedReader
size = 262
after ba size = 262
CREATING split_String_int_String
Found Cycle of size 14; Breaking.
size = 4812
after ba size = 4812
CREATING size_Object_ArrayList
size = 54
after ba size = 54
CREATING indexOf_char_int_String
Found Cycle of size 16; Breaking.
size = 1380
after ba size = 1380
CREATING Wrap_Array_Object_array
size = 48
after ba size = 48
CREATING substring_int_int_String
size = 240
after ba size = 240
ATTEMPT 0
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 32; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.243902 0.967395 (41, 41)  try to replace
H__0_128: replacing with value 0 bnd= 2 totsize= 0.693147
H__1_128 odds = 1/0.27027 0.951746 (37, 37)  try to replace
H__1_128: replacing with value 1 bnd= 2 totsize= 1.38629
H__2_128 odds = 1/0.263158 0.956237 (38, 38)  try to replace
H__2_128: replacing with value 0 bnd= 2 totsize= 2.07944
H__3_128 odds = 1/0.25 0.964028 (40, 40)  try to replace
H__3_128: replacing with value 1 bnd= 2 totsize= 2.77259
H__0_128_123 odds = 1/0.0401606 1 (249, 249)  try to replace
H__0_128_123: replacing with value 0 bnd= 2 totsize= 3.46574
H__1_128_123 odds = 1/0.0444444 1 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 4.15888
H__2_128_123 odds = 1/0.04329 1 (231, 231)  try to replace
H__2_128_123: replacing with value 1 bnd= 2 totsize= 4.85203
H__3_128_123 odds = 1/0.0401606 1 (249, 249)  try to replace
H__3_128_123: replacing with value 1 bnd= 2 totsize= 5.54518
H__0_128_123_123 odds = 1/0.00669344 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 1 bnd= 2 totsize= 6.23832
H__1_128_123_123 odds = 1/0.00761035 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 1 bnd= 2 totsize= 6.93147
H__2_128_123_123 odds = 1/0.00740741 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 1 bnd= 2 totsize= 7.62462
H__3_128_123_123 odds = 1/0.277778 0.946806 (36, 36)  try to replace
H__3_128_123_123: replacing with value 1 bnd= 2 totsize= 8.31777
Found Cycle of size 80; Breaking.
Found Cycle of size 223; Breaking.
inlined 147 new size =84331
Found Cycle of size 491; Breaking.
inlined 378 new size =81996
Found Cycle of size 41; Breaking.
inlined 85 new size =102928
Found Cycle of size 52; Breaking.
inlined 110 new size =127445
Assertion FailureASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
**ROUND 0 : 8.31777 Round time:  1000 ms 
RNDDEG = 10
SUMMRY , 4, 7, 8, 11, 12, 15, 17, 19, 21, 23, 25, 27
 charness = 0
POST-SUMMRY , 4, 7, 8, 11, 12, 15, 17, 19, 21, 23, 25, 27
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 1
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 35; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.121951 0.999451 (41, 41)  try to replace
H__0_128: replacing with value 1 bnd= 2 totsize= 0.693147
H__1_128 odds = 1/0.135135 0.998778 (37, 37)  try to replace
H__1_128: replacing with value 1 bnd= 2 totsize= 1.38629
H__2_128 odds = 1/0.131579 0.999 (38, 38)  try to replace
H__2_128: replacing with value 0 bnd= 2 totsize= 2.07944
H__3_128 odds = 1/0.125 0.999329 (40, 40)  try to replace
H__3_128: replacing with value 1 bnd= 2 totsize= 2.77259
H__0_128_123 odds = 1/0.0200803 1 (249, 249)  try to replace
H__0_128_123: replacing with value 0 bnd= 2 totsize= 3.46574
H__1_128_123 odds = 1/0.0222222 1 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 4.15888
H__2_128_123 odds = 1/0.021645 1 (231, 231)  try to replace
H__2_128_123: replacing with value 0 bnd= 2 totsize= 4.85203
H__3_128_123 odds = 1/0.0200803 1 (249, 249)  try to replace
H__3_128_123: replacing with value 0 bnd= 2 totsize= 5.54518
H__0_128_123_123 odds = 1/0.00334672 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 1 bnd= 2 totsize= 6.23832
H__1_128_123_123 odds = 1/0.00380518 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 0 bnd= 2 totsize= 6.93147
H__2_128_123_123 odds = 1/0.0037037 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 0 bnd= 2 totsize= 7.62462
H__3_128_123_123 odds = 1/0.138889 0.998508 (36, 36)  try to replace
H__3_128_123_123: replacing with value 0 bnd= 2 totsize= 8.31777
Found Cycle of size 103; Breaking.
Found Cycle of size 127; Breaking.
inlined 147 new size =84375
Found Cycle of size 151; Breaking.
inlined 390 new size =87646
Assertion FailureAssert at CsvDocument.sk:92 (1)
**ROUND 1 : 8.31777 Round time:  0.558 ms 
RNDDEG = 5
SUMMRY , 5, 7, 8, 11, 12, 15, 16, 18, 21, 22, 24, 26
 charness = 0
POST-SUMMRY , 5, 7, 8, 11, 12, 15, 16, 18, 21, 22, 24, 26
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 2
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 37; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.243902  (41, 41)  not replacing
H__1_128 odds = 1/0.27027 0.951746 (37, 37)  try to replace
H__1_128: replacing with value 0 bnd= 2 totsize= 0.693147
H__2_128 odds = 1/0.263158 0.956237 (38, 38)  try to replace
H__2_128: replacing with value 1 bnd= 2 totsize= 1.38629
H__3_128 odds = 1/0.25 0.964028 (40, 40)  try to replace
H__3_128: replacing with value 0 bnd= 2 totsize= 2.07944
H__0_128_123 odds = 1/0.0401606 1 (249, 249)  try to replace
H__0_128_123: replacing with value 0 bnd= 2 totsize= 2.77259
H__1_128_123 odds = 1/0.0444444 1 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 3.46574
H__2_128_123 odds = 1/0.04329 1 (231, 231)  try to replace
H__2_128_123: replacing with value 1 bnd= 2 totsize= 4.15888
H__3_128_123 odds = 1/0.0401606 1 (249, 249)  try to replace
H__3_128_123: replacing with value 0 bnd= 2 totsize= 4.85203
H__0_128_123_123 odds = 1/0.00669344 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 1 bnd= 2 totsize= 5.54518
H__1_128_123_123 odds = 1/0.00761035 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 0 bnd= 2 totsize= 6.23832
H__2_128_123_123 odds = 1/0.00740741 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 0 bnd= 2 totsize= 6.93147
H__3_128_123_123 odds = 1/0.277778 0.946806 (36, 36)  try to replace
H__3_128_123_123: replacing with value 0 bnd= 2 totsize= 7.62462
Found Cycle of size 130; Breaking.
Found Cycle of size 166; Breaking.
inlined 147 new size =84377
Found Cycle of size 70; Breaking.
inlined 379 new size =87534
Found Cycle of size 227; Breaking.
Found Cycle of size 60; Breaking.
inlined 165 new size =108778
Found Cycle of size 90; Breaking.
inlined 132 new size =141236
inlined 61 new size =109614
inlined 18 new size =111696
inlined 0 new size =111120
END OF STEP 0
 Inlining functions in the spec.
inlined 0 new size =0
END OF STEP 0
Bailing out
after Creating Miter: Problem nodes = 78570
* Final Problem size: Problem nodes = 78390
  # OF CONTROLS:    1
 control_ints = 0 	 control_bits = 1
inputSize = 0	ctrlSize = 1
Random seeds = 1
!+ 0
!+ H__0_128:0

BEG CHECK
 * After optims it became = 2 was 78390
DECISIONS START = 0
c# %assign: 50 clauses: 0 learn: 0 restart: 1 decision: 2 propagated: 2
END CHECK
********  0	ftime= 0	ctime= 0.123
!% 
!% 
BEG FIND
Level 1  intsize = 2
 * After optims it became = 78390 was 78390
 * After all optims it became = 78390
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
Problem became UNSAT.36662= ASSERT (!23) : ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
 finder  hits = 0	 bstoreObjs=0	 sstorePages=0
* TIME TO ADD INPUT :  3999.75 ms 
f# %assign: 66 clauses: 0 learn: 0 restart: 0 decision: 0 propagated: 2
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
END FIND
******** FAILED ********
* FIND TIME:  3999.75 ms 
* CHECK TIME:  0.123 ms 
 *FAILED IN 1 iterations.
 *FIND TIME 3999.75 CHECK TIME 0.123 TOTAL TIME 3999.88
VALUES H__0_128: 0, H__0_128_123: 0, H__0_128_123_123: 1, H__1_128: 0, H__1_128_123: 1, H__1_128_123_123: 0, H__2_128: 1, H__2_128_123: 1, H__2_128_123_123: 0, H__3_128: 0, H__3_128_123: 0, H__3_128_123_123: 0, 
RESULT = 1  
**ROUND 2 : 7.62462 Round time:  5999.77 ms 
RNDDEG = 10
SUMMRY , 6, 9, 10, 12, 15, 17, 18, 21, 22, 24, 26
 charness = 0
POST-SUMMRY , 6, 9, 10, 12, 15, 17, 18, 21, 22, 24, 26
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 3
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 42; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.121951 0.999451 (41, 41)  try to replace
H__0_128: replacing with value 1 bnd= 2 totsize= 0.693147
H__1_128 odds = 1/0.135135 0.998778 (37, 37)  try to replace
H__1_128: replacing with value 1 bnd= 2 totsize= 1.38629
H__2_128 odds = 1/0.131579 0.999 (38, 38)  try to replace
H__2_128: replacing with value 0 bnd= 2 totsize= 2.07944
H__3_128 odds = 1/0.125 0.999329 (40, 40)  try to replace
H__3_128: replacing with value 1 bnd= 2 totsize= 2.77259
H__0_128_123 odds = 1/0.0200803 1 (249, 249)  try to replace
H__0_128_123: replacing with value 1 bnd= 2 totsize= 3.46574
H__1_128_123 odds = 1/0.0222222 1 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 4.15888
H__2_128_123 odds = 1/0.021645 1 (231, 231)  try to replace
H__2_128_123: replacing with value 0 bnd= 2 totsize= 4.85203
H__3_128_123 odds = 1/0.0200803 1 (249, 249)  try to replace
H__3_128_123: replacing with value 0 bnd= 2 totsize= 5.54518
H__0_128_123_123 odds = 1/0.00334672 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 1 bnd= 2 totsize= 6.23832
H__1_128_123_123 odds = 1/0.00380518 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 0 bnd= 2 totsize= 6.93147
H__2_128_123_123 odds = 1/0.0037037 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 0 bnd= 2 totsize= 7.62462
H__3_128_123_123 odds = 1/0.138889 0.998508 (36, 36)  try to replace
H__3_128_123_123: replacing with value 0 bnd= 2 totsize= 8.31777
Found Cycle of size 151; Breaking.
Found Cycle of size 148; Breaking.
Found Cycle of size 157; Breaking.
inlined 147 new size =84376
Found Cycle of size 104; Breaking.
inlined 391 new size =87646
Assertion FailureAssert at CsvDocument.sk:92 (1)
**ROUND 3 : 8.31777 Round time:  999.542 ms 
RNDDEG = 5
SUMMRY , 5, 7, 8, 11, 13, 15, 16, 18, 21, 22, 24, 26
 charness = 0
POST-SUMMRY , 5, 7, 8, 11, 13, 15, 16, 18, 21, 22, 24, 26
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 4
Before readInfile
Single: 
Double: 
Nothing read
After readInfile
Single: 
Double: 
cur=10 next=40 scorecur=15 scorenext=0
Switch because next is better
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 43; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.97561  (41, 41)  not replacing
H__1_128 odds = 1/1.08108 0.43212 (37, 37)  try to replace
H__1_128: replacing with value 0 bnd= 2 totsize= 0.693147
H__2_128 odds = 1/1.05263  (38, 38)  not replacing
H__3_128 odds = 1/1 0.462117 (40, 40)  try to replace
H__3_128: replacing with value 0 bnd= 2 totsize= 1.38629
H__0_128_123 odds = 1/0.160643 0.996049 (249, 249)  try to replace
H__0_128_123: replacing with value 1 bnd= 2 totsize= 2.07944
H__1_128_123 odds = 1/0.177778 0.992813 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 2.77259
H__2_128_123 odds = 1/0.17316 0.993811 (231, 231)  try to replace
H__2_128_123: replacing with value 0 bnd= 2 totsize= 3.46574
H__3_128_123 odds = 1/0.160643 0.996049 (249, 249)  try to replace
H__3_128_123: replacing with value 1 bnd= 2 totsize= 4.15888
H__0_128_123_123 odds = 1/0.0267738 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 1 bnd= 2 totsize= 4.85203
H__1_128_123_123 odds = 1/0.0304414 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 0 bnd= 2 totsize= 5.54518
H__2_128_123_123 odds = 1/0.0296296 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 1 bnd= 2 totsize= 6.23832
H__3_128_123_123 odds = 1/1.11111  (36, 36)  not replacing
Found Cycle of size 115; Breaking.
Found Cycle of size 112; Breaking.
Found Cycle of size 86; Breaking.
inlined 147 new size =84417
Found Cycle of size 225; Breaking.
inlined 380 new size =87579
Found Cycle of size 383; Breaking.
Found Cycle of size 64; Breaking.
inlined 165 new size =108823
Found Cycle of size 133; Breaking.
inlined 132 new size =141281
inlined 61 new size =109621
inlined 18 new size =111703
inlined 0 new size =111127
END OF STEP 0
 Inlining functions in the spec.
inlined 0 new size =0
END OF STEP 0
Bailing out
after Creating Miter: Problem nodes = 78576
* Final Problem size: Problem nodes = 78396
  # OF CONTROLS:    2
 control_ints = 0 	 control_bits = 2
inputSize = 0	ctrlSize = 2
Random seeds = 1
!+ 00
!+ H__0_128:0
H__2_128:0

BEG CHECK
 * After optims it became = 2 was 78396
DECISIONS START = 0
c# %assign: 50 clauses: 0 learn: 0 restart: 1 decision: 2 propagated: 2
END CHECK
********  0	ftime= 0	ctime= 0.126
!% 
!% 
BEG FIND
Level 1  intsize = 2
 * After optims it became = 78396 was 78396
 * After all optims it became = 78396
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
Problem became UNSAT.36668= ASSERT (!23) : ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
 finder  hits = 0	 bstoreObjs=0	 sstorePages=0
* TIME TO ADD INPUT :  3999.93 ms 
f# %assign: 50 clauses: 0 learn: 0 restart: 0 decision: 0 propagated: 2
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
END FIND
******** FAILED ********
* FIND TIME:  3999.93 ms 
* CHECK TIME:  0.126 ms 
 *FAILED IN 1 iterations.
 *FIND TIME 3999.93 CHECK TIME 0.126 TOTAL TIME 4000.06
VALUES H__0_128: 0, H__0_128_123: 1, H__0_128_123_123: 1, H__1_128: 0, H__1_128_123: 1, H__1_128_123_123: 0, H__2_128: 0, H__2_128_123: 0, H__2_128_123_123: 1, H__3_128: 0, H__3_128_123: 1, H__3_128_123_123: 0, 
RESULT = 1  
**ROUND 4 : 6.23832 Round time:  5000.94 ms 
RNDDEG = 40
SUMMRY , 6, 10, 13, 15, 16, 19, 21, 22, 25
 charness = 0
POST-SUMMRY , 6, 10, 13, 15, 16, 19, 21, 22, 25
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 5
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 54; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.243902 0.967395 (41, 41)  try to replace
H__0_128: replacing with value 0 bnd= 2 totsize= 0.693147
H__1_128 odds = 1/0.27027 0.951746 (37, 37)  try to replace
H__1_128: replacing with value 1 bnd= 2 totsize= 1.38629
H__2_128 odds = 1/0.263158 0.956237 (38, 38)  try to replace
H__2_128: replacing with value 0 bnd= 2 totsize= 2.07944
H__3_128 odds = 1/0.25 0.964028 (40, 40)  try to replace
H__3_128: replacing with value 1 bnd= 2 totsize= 2.77259
H__0_128_123 odds = 1/0.0401606 1 (249, 249)  try to replace
H__0_128_123: replacing with value 1 bnd= 2 totsize= 3.46574
H__1_128_123 odds = 1/0.0444444 1 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 4.15888
H__2_128_123 odds = 1/0.04329 1 (231, 231)  try to replace
H__2_128_123: replacing with value 0 bnd= 2 totsize= 4.85203
H__3_128_123 odds = 1/0.0401606 1 (249, 249)  try to replace
H__3_128_123: replacing with value 1 bnd= 2 totsize= 5.54518
H__0_128_123_123 odds = 1/0.00669344 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 0 bnd= 2 totsize= 6.23832
H__1_128_123_123 odds = 1/0.00761035 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 1 bnd= 2 totsize= 6.93147
H__2_128_123_123 odds = 1/0.00740741 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 0 bnd= 2 totsize= 7.62462
H__3_128_123_123 odds = 1/0.277778 0.946806 (36, 36)  try to replace
H__3_128_123_123: replacing with value 1 bnd= 2 totsize= 8.31777
Found Cycle of size 205; Breaking.
Found Cycle of size 210; Breaking.
inlined 147 new size =84331
Found Cycle of size 137; Breaking.
inlined 378 new size =81996
Found Cycle of size 71; Breaking.
inlined 85 new size =102928
Found Cycle of size 63; Breaking.
inlined 110 new size =127445
Assertion FailureASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
**ROUND 5 : 8.31777 Round time:  999.988 ms 
RNDDEG = 10
SUMMRY , 4, 7, 8, 11, 13, 15, 16, 19, 20, 23, 24, 27
 charness = 0
POST-SUMMRY , 4, 7, 8, 11, 13, 15, 16, 19, 20, 23, 24, 27
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 6
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 50; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.97561  (41, 41)  not replacing
H__1_128 odds = 1/1.08108 0.43212 (37, 37)  try to replace
H__1_128: replacing with value 1 bnd= 2 totsize= 0.693147
H__2_128 odds = 1/1.05263 0.44223 (38, 38)  try to replace
H__2_128: replacing with value 1 bnd= 2 totsize= 1.38629
H__3_128 odds = 1/1  (40, 40)  not replacing
H__0_128_123 odds = 1/0.160643 0.996049 (249, 249)  try to replace
H__0_128_123: replacing with value 0 bnd= 2 totsize= 2.07944
H__1_128_123 odds = 1/0.177778 0.992813 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 2.77259
H__2_128_123 odds = 1/0.17316 0.993811 (231, 231)  try to replace
H__2_128_123: replacing with value 1 bnd= 2 totsize= 3.46574
H__3_128_123 odds = 1/0.160643 0.996049 (249, 249)  try to replace
H__3_128_123: replacing with value 0 bnd= 2 totsize= 4.15888
H__0_128_123_123 odds = 1/0.0267738 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 1 bnd= 2 totsize= 4.85203
H__1_128_123_123 odds = 1/0.0304414 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 0 bnd= 2 totsize= 5.54518
H__2_128_123_123 odds = 1/0.0296296 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 0 bnd= 2 totsize= 6.23832
H__3_128_123_123 odds = 1/1.11111  (36, 36)  not replacing
Found Cycle of size 117; Breaking.
Found Cycle of size 237; Breaking.
inlined 147 new size =86727
Found Cycle of size 127; Breaking.
Found Cycle of size 45; Breaking.
Found Cycle of size 14; Breaking.
inlined 407 new size =89620
Found Cycle of size 93; Breaking.
Found Cycle of size 57; Breaking.
Found Cycle of size 20; Breaking.
inlined 179 new size =112085
Found Cycle of size 66; Breaking.
Found Cycle of size 62; Breaking.
inlined 145 new size =145667
Found Cycle of size 31; Breaking.
inlined 75 new size =115768
inlined 26 new size =117928
inlined 0 new size =117352
END OF STEP 0
 Inlining functions in the spec.
inlined 0 new size =0
END OF STEP 0
Bailing out
after Creating Miter: Problem nodes = 82999
* Final Problem size: Problem nodes = 82810
  # OF CONTROLS:    2
 control_ints = 0 	 control_bits = 2
inputSize = 0	ctrlSize = 2
Random seeds = 1
!+ 00
!+ H__3_128:0
H__0_128:0

BEG CHECK
 * After optims it became = 2 was 82810
DECISIONS START = 0
c# %assign: 50 clauses: 0 learn: 0 restart: 1 decision: 2 propagated: 2
END CHECK
********  0	ftime= 0	ctime= 999.134
!% 
!% 
BEG FIND
Level 1  intsize = 2
 * After optims it became = 82804 was 82810
 * After all optims it became = 82804
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
Problem became UNSAT.42081= ASSERT (!42079) : ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
 finder  hits = 0	 bstoreObjs=0	 sstorePages=0
* TIME TO ADD INPUT :  4000.21 ms 
f# %assign: 75 clauses: 0 learn: 0 restart: 0 decision: 0 propagated: 3
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
END FIND
******** FAILED ********
* FIND TIME:  4000.21 ms 
* CHECK TIME:  999.134 ms 
 *FAILED IN 1 iterations.
 *FIND TIME 4000.21 CHECK TIME 999.134 TOTAL TIME 4999.34
VALUES H__0_128: 0, H__0_128_123: 0, H__0_128_123_123: 1, H__1_128: 1, H__1_128_123: 1, H__1_128_123_123: 0, H__2_128: 1, H__2_128_123: 1, H__2_128_123_123: 0, H__3_128: 0, H__3_128_123: 0, H__3_128_123_123: 0, 
RESULT = 1  
**ROUND 6 : 6.23832 Round time:  6000.35 ms 
RNDDEG = 40
SUMMRY , 7, 9, 12, 15, 17, 18, 21, 22, 24
 charness = 0
POST-SUMMRY , 7, 9, 12, 15, 17, 18, 21, 22, 24
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 7
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 45; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.243902 0.967395 (41, 41)  try to replace
H__0_128: replacing with value 0 bnd= 2 totsize= 0.693147
H__1_128 odds = 1/0.27027 0.951746 (37, 37)  try to replace
H__1_128: replacing with value 0 bnd= 2 totsize= 1.38629
H__2_128 odds = 1/0.263158 0.956237 (38, 38)  try to replace
H__2_128: replacing with value 0 bnd= 2 totsize= 2.07944
H__3_128 odds = 1/0.25 0.964028 (40, 40)  try to replace
H__3_128: replacing with value 1 bnd= 2 totsize= 2.77259
H__0_128_123 odds = 1/0.0401606 1 (249, 249)  try to replace
H__0_128_123: replacing with value 0 bnd= 2 totsize= 3.46574
H__1_128_123 odds = 1/0.0444444 1 (225, 225)  try to replace
H__1_128_123: replacing with value 0 bnd= 2 totsize= 4.15888
H__2_128_123 odds = 1/0.04329 1 (231, 231)  try to replace
H__2_128_123: replacing with value 0 bnd= 2 totsize= 4.85203
H__3_128_123 odds = 1/0.0401606 1 (249, 249)  try to replace
H__3_128_123: replacing with value 0 bnd= 2 totsize= 5.54518
H__0_128_123_123 odds = 1/0.00669344 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 1 bnd= 2 totsize= 6.23832
H__1_128_123_123 odds = 1/0.00761035 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 0 bnd= 2 totsize= 6.93147
H__2_128_123_123 odds = 1/0.00740741 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 1 bnd= 2 totsize= 7.62462
H__3_128_123_123 odds = 1/0.277778 0.946806 (36, 36)  try to replace
H__3_128_123_123: replacing with value 0 bnd= 2 totsize= 8.31777
Found Cycle of size 128; Breaking.
Found Cycle of size 58; Breaking.
inlined 147 new size =84168
Assertion FailureASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
**ROUND 7 : 8.31777 Round time:  0.308 ms 
RNDDEG = 10
SUMMRY , 4, 6, 8, 11, 12, 14, 16, 18, 21, 22, 25, 26
 charness = 0
POST-SUMMRY , 4, 6, 8, 11, 12, 14, 16, 18, 21, 22, 25, 26
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 8
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 50; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.97561  (41, 41)  not replacing
H__1_128 odds = 1/1.08108  (37, 37)  not replacing
H__2_128 odds = 1/1.05263 0.44223 (38, 38)  try to replace
H__2_128: replacing with value 1 bnd= 2 totsize= 0.693147
H__3_128 odds = 1/1 0.462117 (40, 40)  try to replace
H__3_128: replacing with value 0 bnd= 2 totsize= 1.38629
H__0_128_123 odds = 1/0.160643 0.996049 (249, 249)  try to replace
H__0_128_123: replacing with value 0 bnd= 2 totsize= 2.07944
H__1_128_123 odds = 1/0.177778 0.992813 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 2.77259
H__2_128_123 odds = 1/0.17316 0.993811 (231, 231)  try to replace
H__2_128_123: replacing with value 1 bnd= 2 totsize= 3.46574
H__3_128_123 odds = 1/0.160643 0.996049 (249, 249)  try to replace
H__3_128_123: replacing with value 1 bnd= 2 totsize= 4.15888
H__0_128_123_123 odds = 1/0.0267738 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 0 bnd= 2 totsize= 4.85203
H__1_128_123_123 odds = 1/0.0304414 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 1 bnd= 2 totsize= 5.54518
H__2_128_123_123 odds = 1/0.0296296 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 1 bnd= 2 totsize= 6.23832
H__3_128_123_123 odds = 1/1.11111 0.421899 (36, 36)  try to replace
H__3_128_123_123: replacing with value 1 bnd= 2 totsize= 6.93147
Found Cycle of size 249; Breaking.
Found Cycle of size 171; Breaking.
inlined 147 new size =84583
Found Cycle of size 157; Breaking.
inlined 383 new size =87578
Found Cycle of size 137; Breaking.
Found Cycle of size 61; Breaking.
inlined 165 new size =108819
Found Cycle of size 120; Breaking.
inlined 132 new size =141277
inlined 61 new size =109638
inlined 18 new size =111720
inlined 0 new size =111144
END OF STEP 0
 Inlining functions in the spec.
inlined 0 new size =0
END OF STEP 0
Bailing out
after Creating Miter: Problem nodes = 78594
* Final Problem size: Problem nodes = 78414
  # OF CONTROLS:    2
 control_ints = 0 	 control_bits = 2
inputSize = 0	ctrlSize = 2
Random seeds = 1
!+ 00
!+ H__1_128:0
H__0_128:0

BEG CHECK
 * After optims it became = 2 was 78414
DECISIONS START = 0
c# %assign: 50 clauses: 0 learn: 0 restart: 1 decision: 2 propagated: 2
END CHECK
********  0	ftime= 0	ctime= 0.126
!% 
!% 
BEG FIND
Level 1  intsize = 2
 * After optims it became = 78414 was 78414
 * After all optims it became = 78414
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
Problem became UNSAT.37737= ASSERT (!37735) : ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
 finder  hits = 117	 bstoreObjs=13	 sstorePages=1
hitcount 	0	2	0
hitcount 	2	3	0
hitcount 	6	1	0
hitcount 	8	2	0
hitcount 	11	2	0
hitcount 	18	2	0
hitcount 	31	1	0
bucketsPerDepth 	0	13
* TIME TO ADD INPUT :  3999.77 ms 
f# %assign: 94 clauses: 39 learn: 0 restart: 0 decision: 0 propagated: 16
  UNSATISFIABLE ASSERTION ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
END FIND
******** FAILED ********
* FIND TIME:  3999.77 ms 
* CHECK TIME:  0.126 ms 
 *FAILED IN 1 iterations.
 *FIND TIME 3999.77 CHECK TIME 0.126 TOTAL TIME 3999.89
VALUES H__0_128: 0, H__0_128_123: 0, H__0_128_123_123: 0, H__1_128: 0, H__1_128_123: 1, H__1_128_123_123: 1, H__2_128: 1, H__2_128_123: 1, H__2_128_123_123: 1, H__3_128: 0, H__3_128_123: 1, H__3_128_123_123: 1, 
RESULT = 1  
**ROUND 8 : 6.93147 Round time:  5999.76 ms 
RNDDEG = 40
SUMMRY , 9, 10, 12, 15, 17, 19, 20, 23, 25, 27
 charness = 0
POST-SUMMRY , 9, 10, 12, 15, 17, 19, 20, 23, 25, 27
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 9
Before readInfile
Single: 
Double: 
Nothing read
After readInfile
Single: 
Double: 
cur=40 next=20 scorecur=15 scorenext=0
Switch because next is better
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 73; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.97561 0.471891 (41, 41)  try to replace
H__0_128: replacing with value 1 bnd= 2 totsize= 0.693147
H__1_128 odds = 1/1.08108  (37, 37)  not replacing
H__2_128 odds = 1/1.05263 0.44223 (38, 38)  try to replace
H__2_128: replacing with value 0 bnd= 2 totsize= 1.38629
H__3_128 odds = 1/1  (40, 40)  not replacing
H__0_128_123 odds = 1/0.160643 0.996049 (249, 249)  try to replace
H__0_128_123: replacing with value 1 bnd= 2 totsize= 2.07944
H__1_128_123 odds = 1/0.177778 0.992813 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 2.77259
H__2_128_123 odds = 1/0.17316 0.993811 (231, 231)  try to replace
H__2_128_123: replacing with value 1 bnd= 2 totsize= 3.46574
H__3_128_123 odds = 1/0.160643 0.996049 (249, 249)  try to replace
H__3_128_123: replacing with value 1 bnd= 2 totsize= 4.15888
H__0_128_123_123 odds = 1/0.0267738 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 1 bnd= 2 totsize= 4.85203
H__1_128_123_123 odds = 1/0.0304414 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 0 bnd= 2 totsize= 5.54518
H__2_128_123_123 odds = 1/0.0296296 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 0 bnd= 2 totsize= 6.23832
H__3_128_123_123 odds = 1/1.11111  (36, 36)  not replacing
Found Cycle of size 35; Breaking.
Found Cycle of size 177; Breaking.
inlined 147 new size =84417
Found Cycle of size 574; Breaking.
inlined 390 new size =87659
Assertion FailureAssert at CsvDocument.sk:92 (1)
**ROUND 9 : 6.23832 Round time:  999.541 ms 
RNDDEG = 40
SUMMRY , 5, 8, 13, 15, 17, 19, 21, 22, 24
 charness = 0
POST-SUMMRY , 5, 8, 13, 15, 17, 19, 21, 22, 24
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 10
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 62; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.487805 0.771895 (41, 41)  try to replace
H__0_128: replacing with value 0 bnd= 2 totsize= 0.693147
H__1_128 odds = 1/0.540541 0.728254 (37, 37)  try to replace
H__1_128: replacing with value 0 bnd= 2 totsize= 1.38629
H__2_128 odds = 1/0.526316 0.739783 (38, 38)  try to replace
H__2_128: replacing with value 0 bnd= 2 totsize= 2.07944
H__3_128 odds = 1/0.5 0.761594 (40, 40)  try to replace
H__3_128: replacing with value 1 bnd= 2 totsize= 2.77259
H__0_128_123 odds = 1/0.0803213 0.999992 (249, 249)  try to replace
H__0_128_123: replacing with value 0 bnd= 2 totsize= 3.46574
H__1_128_123 odds = 1/0.0888889 0.999974 (225, 225)  try to replace
H__1_128_123: replacing with value 0 bnd= 2 totsize= 4.15888
H__2_128_123 odds = 1/0.0865801 0.999981 (231, 231)  try to replace
H__2_128_123: replacing with value 0 bnd= 2 totsize= 4.85203
H__3_128_123 odds = 1/0.0803213 0.999992 (249, 249)  try to replace
H__3_128_123: replacing with value 0 bnd= 2 totsize= 5.54518
H__0_128_123_123 odds = 1/0.0133869 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 1 bnd= 2 totsize= 6.23832
H__1_128_123_123 odds = 1/0.0152207 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 1 bnd= 2 totsize= 6.93147
H__2_128_123_123 odds = 1/0.0148148 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 1 bnd= 2 totsize= 7.62462
H__3_128_123_123 odds = 1/0.555556 0.716298 (36, 36)  try to replace
H__3_128_123_123: replacing with value 1 bnd= 2 totsize= 8.31777
Found Cycle of size 64; Breaking.
Found Cycle of size 144; Breaking.
inlined 147 new size =84168
Assertion FailureASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
**ROUND 10 : 8.31777 Round time:  0.302 ms 
RNDDEG = 20
SUMMRY , 4, 6, 8, 11, 12, 14, 16, 18, 21, 23, 25, 27
 charness = 0
POST-SUMMRY , 4, 6, 8, 11, 12, 14, 16, 18, 21, 23, 25, 27
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 11
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 27; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.97561  (41, 41)  not replacing
H__1_128 odds = 1/1.08108  (37, 37)  not replacing
H__2_128 odds = 1/1.05263  (38, 38)  not replacing
H__3_128 odds = 1/1 0.462117 (40, 40)  try to replace
H__3_128: replacing with value 1 bnd= 2 totsize= 0.693147
H__0_128_123 odds = 1/0.160643 0.996049 (249, 249)  try to replace
H__0_128_123: replacing with value 0 bnd= 2 totsize= 1.38629
H__1_128_123 odds = 1/0.177778 0.992813 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 2.07944
H__2_128_123 odds = 1/0.17316 0.993811 (231, 231)  try to replace
H__2_128_123: replacing with value 1 bnd= 2 totsize= 2.77259
H__3_128_123 odds = 1/0.160643 0.996049 (249, 249)  try to replace
H__3_128_123: replacing with value 1 bnd= 2 totsize= 3.46574
H__0_128_123_123 odds = 1/0.0267738 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 0 bnd= 2 totsize= 4.15888
H__1_128_123_123 odds = 1/0.0304414 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 1 bnd= 2 totsize= 4.85203
H__2_128_123_123 odds = 1/0.0296296 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 1 bnd= 2 totsize= 5.54518
H__3_128_123_123 odds = 1/1.11111  (36, 36)  not replacing
Found Cycle of size 100; Breaking.
Found Cycle of size 177; Breaking.
inlined 147 new size =99817
Found Cycle of size 50; Breaking.
Found Cycle of size 27; Breaking.
Found Cycle of size 16; Breaking.
inlined 551 new size =101731
Found Cycle of size 217; Breaking.
Found Cycle of size 19; Breaking.
Found Cycle of size 49; Breaking.
inlined 251 new size =131539
Found Cycle of size 66; Breaking.
Found Cycle of size 65; Breaking.
inlined 217 new size =171822
Found Cycle of size 64; Breaking.
Found Cycle of size 59; Breaking.
inlined 147 new size =148580
inlined 63 new size =151284
inlined 0 new size =150708
END OF STEP 0
 Inlining functions in the spec.
inlined 0 new size =0
END OF STEP 0
Bailing out
after Creating Miter: Problem nodes = 109445
* Final Problem size: Problem nodes = 109184
  # OF CONTROLS:    4
 control_ints = 0 	 control_bits = 4
inputSize = 0	ctrlSize = 4
Random seeds = 1
!+ 0011
!+ H__2_128:0
H__1_128:0
H__0_128:1
H__3_128_123_123:1

BEG CHECK
 * After optims it became = 2 was 109184
DECISIONS START = 0
c# %assign: 50 clauses: 0 learn: 0 restart: 1 decision: 2 propagated: 2
END CHECK
********  0	ftime= 0	ctime= 999.178
!% 
!% 
BEG FIND
Level 1  intsize = 2
 * After optims it became = 109178 was 109184
 * After all optims it became = 109178
  UNSATISFIABLE ASSERTION Assert at CsvDocu..ntTest.sk:22 (1)
Problem became UNSAT.108371= ASSERT (!100731) : Assert at CsvDocu..ntTest.sk:22 (1)
 finder  hits = 3022	 bstoreObjs=846	 sstorePages=1
hitcount 	0	425	0
hitcount 	1	183	0
hitcount 	2	61	0
hitcount 	3	45	0
hitcount 	4	12	0
hitcount 	5	30	0
hitcount 	6	13	0
hitcount 	7	11	0
hitcount 	10	15	0
hitcount 	11	19	0
hitcount 	12	3	0
hitcount 	28	8	0
hitcount 	29	1	0
hitcount 	31	2	1
hitcount 	36	4	0
hitcount 	39	10	0
hitcount 	40	1	0
hitcount 	80	1	1
hitcount 	431	1	0
hitcount 	434	1	0
bucketsPerDepth 	0	364
bucketsPerDepth 	1	164
bucketsPerDepth 	2	41
bucketsPerDepth 	3	3
* TIME TO ADD INPUT :  9000.35 ms 
f# %assign: 25 clauses: 3466 learn: 0 restart: 0 decision: 0 propagated: 205
  UNSATISFIABLE ASSERTION Assert at CsvDocu..ntTest.sk:22 (1)
END FIND
******** FAILED ********
* FIND TIME:  9000.35 ms 
* CHECK TIME:  999.178 ms 
 *FAILED IN 1 iterations.
 *FIND TIME 9000.35 CHECK TIME 999.178 TOTAL TIME 9999.53
VALUES H__0_128: 1, H__0_128_123: 0, H__0_128_123_123: 0, H__1_128: 0, H__1_128_123: 1, H__1_128_123_123: 1, H__2_128: 0, H__2_128_123: 1, H__2_128_123_123: 1, H__3_128: 1, H__3_128_123: 1, H__3_128_123_123: 1, 
RESULT = 1  
**ROUND 11 : 5.54518 Round time:  12000.1 ms 
RNDDEG = 40
SUMMRY , 11, 12, 15, 17, 19, 20, 23, 25
 charness = 0
POST-SUMMRY , 11, 12, 15, 17, 19, 20, 23, 25
TRAIL: 
ALLOK
ALLRESET
ATTEMPT 12
* before  EVERYTHING: mn__WrapperNospec_Tester::SPEC nodes = 0	 mn__Wrapper_Tester::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 3
 Inlining functions in the sketch.
inlined 1 new size =8
inlined 3 new size =5
inlined 1 new size =1120
Found Cycle of size 27; Breaking.
inlined 24 new size =14358
H__0_128 odds = 1/0.487805 0.771895 (41, 41)  try to replace
H__0_128: replacing with value 0 bnd= 2 totsize= 0.693147
H__1_128 odds = 1/0.540541 0.728254 (37, 37)  try to replace
H__1_128: replacing with value 0 bnd= 2 totsize= 1.38629
H__2_128 odds = 1/0.526316 0.739783 (38, 38)  try to replace
H__2_128: replacing with value 1 bnd= 2 totsize= 2.07944
H__3_128 odds = 1/0.5 0.761594 (40, 40)  try to replace
H__3_128: replacing with value 1 bnd= 2 totsize= 2.77259
H__0_128_123 odds = 1/0.0803213 0.999992 (249, 249)  try to replace
H__0_128_123: replacing with value 1 bnd= 2 totsize= 3.46574
H__1_128_123 odds = 1/0.0888889 0.999974 (225, 225)  try to replace
H__1_128_123: replacing with value 1 bnd= 2 totsize= 4.15888
H__2_128_123 odds = 1/0.0865801 0.999981 (231, 231)  try to replace
H__2_128_123: replacing with value 1 bnd= 2 totsize= 4.85203
H__3_128_123 odds = 1/0.0803213 0.999992 (249, 249)  try to replace
H__3_128_123: replacing with value 0 bnd= 2 totsize= 5.54518
H__0_128_123_123 odds = 1/0.0133869 1 (1494, 1494)  try to replace
H__0_128_123_123: replacing with value 1 bnd= 2 totsize= 6.23832
H__1_128_123_123 odds = 1/0.0152207 1 (1314, 1314)  try to replace
H__1_128_123_123: replacing with value 0 bnd= 2 totsize= 6.93147
H__2_128_123_123 odds = 1/0.0148148 1 (1350, 1350)  try to replace
H__2_128_123_123: replacing with value 0 bnd= 2 totsize= 7.62462
H__3_128_123_123 odds = 1/0.555556  (36, 36)  not replacing
Found Cycle of size 270; Breaking.
Found Cycle of size 242; Breaking.
inlined 147 new size =86881
Found Cycle of size 265; Breaking.
Found Cycle of size 156; Breaking.
Found Cycle of size 112; Breaking.
Found Cycle of size 66; Breaking.
Found Cycle of size 97; Breaking.
inlined 411 new size =115984
Found Cycle of size 531; Breaking.
Found Cycle of size 193; Breaking.
Found Cycle of size 53; Breaking.
inlined 520 new size =138735
Found Cycle of size 114; Breaking.
Found Cycle of size 330; Breaking.
Found Cycle of size 394; Breaking.
inlined 228 new size =210893
Found Cycle of size 387; Breaking.
Found Cycle of size 366; Breaking.
inlined 427 new size =337525
inlined 19 new size =0
inlined 0 new size =0
END OF STEP 0
 Inlining functions in the spec.
inlined 0 new size =0
END OF STEP 0
Bailing out
after Creating Miter: Problem nodes = 0
* Final Problem size: Problem nodes = 0
  # OF CONTROLS:    0
 control_ints = 0 	 control_bits = 0
inputSize = 0	ctrlSize = 0
Random seeds = 1
!+ 
!+ 
BEG CHECK
 * After optims it became = 0 was 0
c# %assign: 50 clauses: 0 learn: 0 restart: 0 decision: 0 propagated: 1
CONTROL: growing l=2 inputs to size 3
c# %assign: 50 clauses: 0 learn: 0 restart: 0 decision: 0 propagated: 1
CONTROL: growing l=2 inputs to size 4
c# %assign: 50 clauses: 0 learn: 0 restart: 0 decision: 0 propagated: 1
CONTROL: growing l=2 inputs to size 5
c# %assign: 50 clauses: 0 learn: 0 restart: 0 decision: 0 propagated: 1
END CHECK
********  0	ftime= 0	ctime= 0
 *GOT THE CORRECT ANSWER IN 1 iterations.
 *FIND TIME 0 CHECK TIME 0 TOTAL TIME 0
VALUES H__0_128: 0, H__0_128_123: 1, H__0_128_123_123: 1, H__1_128: 0, H__1_128_123: 1, H__1_128_123_123: 0, H__2_128: 1, H__2_128_123: 1, H__2_128_123_123: 0, H__3_128: 1, H__3_128_123: 0, H__3_128_123_123: 1, 
RESULT = 2  
**ROUND 12 : 7.62462 Round time:  2999.6 ms 
RNDDEG = 20
return 0

----- Statistics -----
Total elapsed time (ms):  44000.1
Model building time (ms): 1000.02
Solution time (ms):       43000.1
Max virtual mem (bytes):  0
Max resident mem (bytes): 0
Max private mem (bytes):  0
ALL CORRECT
[SATBackend] Stats for last run:
      [solution stats]
      successful? ---------------------> true
      elapsed time (s) ----------------> 44.369
      model building time (s) ---------> 1.0
      solution time (s) ---------------> 43.0
      max memory usage (MiB) ----------> 0.0
      [SAT-specific solution stats]
      initial number of nodes ---------> -1
      number of nodes after opts ------> 0
      number of controls --------------> 0
      total number of control bits ----> 0

[SATBackend] Solver exit value: 0
[SATBackend] Not Deleting
    [0;32m[1522158027.2560 - DEBUG] Running stage 'subst' -- Substitute a solution (assignment to ??'s) into the sketch[0m
    [0;32m[1522158027.2620 - DEBUG] Running stage 'cleanup' -- Clean up sketch after substitutions for readability[0m
    [0;32m[1522158027.5800 - DEBUG] Running stage 'outputc' -- Output C code (to console or file)[0m
/* BEGIN PACKAGE Tester*/
package Tester{
  /*Tester.sk:7*/
  
void mn ()/*Tester.sk:7*/
  {
    int self_s36 = 0;
    Object@meta(self_s36);
    Object@Object self_s38 = null;
    Object_Object@Object(new Object@Object(__cid=self_s36), self_s38)//{};
    runTests@CsvDocumentTest();
  }
  /*Tester.sk:7*/
  
void mn__Wrapper ()  implements mn__WrapperNospec/*Tester.sk:7*/
  {
    mn();
  }
  /*Tester.sk:7*/
  
void mn__WrapperNospec ()/*Tester.sk:7*/
  { }
  /* END PACKAGE Tester*/
}
/* BEGIN PACKAGE StringBuilder*/
package StringBuilder{
  /*StringBuilder.sk:3*/
  
void StringBuilder_StringBuilder (Object self, ref Object _out)/*StringBuilder.sk:3*/
  {
    Object@Object _out_s56 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=1)), _out_s56);
    self._value_StringBuilder = _out_s56;
    self._count_StringBuilder = new Object@Object(__cid=-2, _int=0);
    _out = self;
    return;
  }
  /*StringBuilder.sk:31*/
  
void append_String (Object self, Object s)/*StringBuilder.sk:31*/
  {
    int len_s44 = 0;
    String@meta(len_s44);
    Object@Object _pac_sc_s45 = null;
    if((s.__cid) == (new Object@Object(__cid=-2, _int=len_s44)._int))/*StringBuilder.sk:32*/
    {
      Object@Object len_s47 = null;
      length@String(s, len_s47);
      _pac_sc_s45 = len_s47;
    }
    else
    {
      _pac_sc_s45 = null;
    }
    Object@Object new_value_len = new Object@Object(__cid=-2, _int=(self._count_StringBuilder._int) + (_pac_sc_s45._int));
    Object@Object new_value_s49 = null;
    Wrap_Array_char@array(new Array_char@array(length=new_value_len), new_value_s49);
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa0 = (i._int) < (self._count_StringBuilder._int);
    while(__sa0)
    {
      new_value_s49._array_char.A[i._int] = self._value_StringBuilder._array_char.A[i._int];
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa0 = (i._int) < (self._count_StringBuilder._int);
    }
    Object@Object i_0 = new Object@Object(__cid=-2, _int=0);
    bit __sa1 = (i_0._int) < (_pac_sc_s45._int);
    while(__sa1)
    {
      int _out_s51 = 0;
      String@meta(_out_s51);
      Object@Object _pac_sc_s52 = null;
      if((s.__cid) == (new Object@Object(__cid=-2, _int=_out_s51)._int))/*StringBuilder.sk:39*/
      {
        Object@Object _out_s54 = null;
        charAt_int@String(s, i_0, _out_s54);
        _pac_sc_s52 = _out_s54;
      }
      else
      {
        _pac_sc_s52 = null;
      }
      new_value_s49._array_char.A[(self._count_StringBuilder._int) + (i_0._int)] = _pac_sc_s52._char;
      i_0 = new Object@Object(__cid=-2, _int=(i_0._int) + 1);
      __sa1 = (i_0._int) < (_pac_sc_s45._int);
    }
    self._value_StringBuilder = new_value_s49;
    self._count_StringBuilder = new_value_len;
  }
  /*StringBuilder.sk:23*/
  
void toString (Object self, ref Object _out)/*StringBuilder.sk:23*/
  {
    int _out_s40 = 0;
    String@meta(_out_s40);
    Object@Object _out_s42 = null;
    String_String_char_int_int@String(new Object@Object(__cid=_out_s40), self._value_StringBuilder, new Object@Object(__cid=-2, _int=0), self._count_StringBuilder, _out_s42)//{};
    _out = _out_s42;
    return;
  }
  /* END PACKAGE StringBuilder*/
}
/* BEGIN PACKAGE ArrayList*/
package ArrayList{
  struct ArrayList {
      @Immutable()
  }
  struct Arraylist extends ArrayList@ArrayList {
      @Immutable()
  }
  struct Add_object extends ArrayList@ArrayList {
      ArrayList self;
      Object e;
      @Immutable()
  }
  struct Addb_object extends ArrayList@ArrayList {
      ArrayList self;
      Object e;
      @Immutable()
  }
  struct Get_int extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      @Immutable()
  }
  struct Setb_int_object extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      Object e;
      @Immutable()
  }
  struct Set_int_object extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      Object e;
      @Immutable()
  }
  struct Ensurecapacity extends ArrayList@ArrayList {
      ArrayList self;
      @Immutable()
  }
  struct Size extends ArrayList@ArrayList {
      ArrayList self;
      @Immutable()
  }
  /*ArrayList.sk:14*/
  
void ArrayList_ArrayList (ref Object _out)/*ArrayList.sk:14*/
  {
    int _out_s79 = 0;
    ArrayList@meta(_out_s79);
    _out = new Object@Object(__cid=_out_s79, _arraylist=new Arraylist());
    return;
  }
  /*ArrayList.sk:18*/
  
void add_Object_Object (Object self, Object e, ref Object _out)/*ArrayList.sk:18*/
  {
    int _out_s77 = 0;
    ArrayList@meta(_out_s77);
    _out = new Object@Object(__cid=_out_s77, _arraylist=new Add_object(self=self._arraylist, e=e));
    return;
  }
  /*ArrayList.sk:22*/
  
void addb_Object_Object (Object self, Object e, ref Object _out)/*ArrayList.sk:22*/
  {
    self._arraylist = new Addb_object(self=self._arraylist, e=e);
    _out = self;
    return;
  }
  /*ArrayList.sk:44*/
  
void size_Object (Object self, ref Object _out)/*ArrayList.sk:44*/
  {
    int _out_s81 = 0;
    ArrayList@meta(_out_s81);
    _out = new Object@Object(__cid=_out_s81, _arraylist=new Size(self=self._arraylist));
    return;
  }
  /*ArrayList.sk:78*/
  
void xform_get_ArrayList_int (ArrayList self, Object i, ref Object _out)/*ArrayList.sk:78*/
  {
    switch(self){/*ArrayList.sk:79*/
      case Arraylist:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:79 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:80 Assert at ArrayList.sk:80 (1)
      case Add_object:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:79 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:81 Assert at ArrayList.sk:81 (1)
      case Addb_object:
      {
        Object@Object sz_s65 = null;
        xform_size_ArrayList(self.self, sz_s65);
        Object@Object _pac_sc_s66 = null;
        if((sz_s65._int) == (i._int))/*ArrayList.sk:84*/
        {
          _pac_sc_s66 = self.e;
        }
        else
        {
          Object@Object _out_s68 = null;
          xform_get_ArrayList_int(self.self, i, _out_s68);
          _pac_sc_s66 = _out_s68;
        }
        _out = _pac_sc_s66;
        return;
      }
      case Get_int:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:79 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:86 Assert at ArrayList.sk:86 (1)
      case Setb_int_object:
      {
        Object@Object _pac_sc_s69 = null;
        if((i._int) == (self.i._int))/*ArrayList.sk:88*/
        {
          _pac_sc_s69 = self.e;
        }
        else
        {
          Object@Object _out_s71 = null;
          xform_get_ArrayList_int(self.self, i, _out_s71);
          _pac_sc_s69 = _out_s71;
        }
        _out = _pac_sc_s69;
        return;
      }
      case Set_int_object:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:79 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:90 Assert at ArrayList.sk:90 (1)
      case Ensurecapacity:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:79 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:91 Assert at ArrayList.sk:91 (1)
      case Size:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:79 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:92 Assert at ArrayList.sk:92 (1)
    }
    _out = null;
    return;
  }
  /*ArrayList.sk:125*/
  
void xform_size_ArrayList (ArrayList self, ref Object _out)/*ArrayList.sk:125*/
  {
    switch(self){/*ArrayList.sk:126*/
      case Arraylist:
      {
        _out = new Object@Object(__cid=-2, _int=0);
        return;
      }
      case Add_object:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:126 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:130 Assert at ArrayList.sk:130 (1)
      case Addb_object:
      {
        Object@Object _out_s73 = null;
        xform_size_ArrayList(self.self, _out_s73);
        _out = new Object@Object(__cid=-2, _int=(_out_s73._int) + (new Object@Object(__cid=-2, _int=1)._int));
        return;
      }
      case Get_int:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:126 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:134 Assert at ArrayList.sk:134 (1)
      case Setb_int_object:
      {
        Object@Object _out_s75 = null;
        xform_size_ArrayList(self.self, _out_s75);
        _out = _out_s75;
        return;
      }
      case Set_int_object:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:126 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:138 Assert at ArrayList.sk:138 (1)
      case Ensurecapacity:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:126 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:139 Assert at ArrayList.sk:139 (1)
      case Size:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:126 ASSERTION CAN NOT BE SATISFIED: ArrayList.sk:140 Assert at ArrayList.sk:140 (1)
    }
    _out = null;
    return;
  }
  /* END PACKAGE ArrayList*/
}
/* BEGIN PACKAGE CsvDocumentTest_Person*/
package CsvDocumentTest_Person{
  /* END PACKAGE CsvDocumentTest_Person*/
}
/* BEGIN PACKAGE String*/
package String{
  /*String.sk:7*/
  
void String_String_char_int_int (Object self, Object ca, Object offset, Object count, ref Object _out)/*String.sk:7*/
  {
    if(((offset._int) > (new Object@Object(__cid=-2, _int=0)._int)) && ((offset._int) < (ca._array_char.length._int)))/*String.sk:8*/
    {
      Object@Object tmp_s107 = null;
      Wrap_Array_char@array(new Array_char@array(length=count), tmp_s107);
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa3 = (i._int) < (count._int);
      while(__sa3)
      {
        tmp_s107._array_char.A[i._int] = ca._array_char.A[(i._int) + (offset._int)];
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa3 = (i._int) < (count._int);
      }
      self._value_String = tmp_s107;
    }
    else
    {
      self._value_String = ca;
    }
    self._count_String = count;
    _out = self;
    return;
  }
  /*String.sk:43*/
  
void charAt_int (Object self, Object index, ref Object _out)/*String.sk:43*/
  {
    if(((new Object@Object(__cid=-2, _int=0)._int) <= (index._int)) && ((index._int) < (self._count_String._int)))/*String.sk:44*/
    {
      _out = new Object@Object(__cid=-3, _char=self._value_String._array_char.A[index._int]);
      return;
    }
    _out = new Object@Object(__cid=-3, _char='\0');
    return;
  }
  /*String.sk:154*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*String.sk:154*/
  {
    _out = new Object@Object(__cid=-4, _bit=0);
    int _out_s109 = 0;
    String@meta(_out_s109);
    if((obj.__cid) == _out_s109)/*String.sk:156*/
    {
      _out = new Object@Object(__cid=-4, _bit=1);
      int sLen_s111 = 0;
      String@meta(sLen_s111);
      Object@Object _pac_sc_s112 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=sLen_s111)._int))/*String.sk:159*/
      {
        Object@Object sLen_s114 = null;
        length@String(obj, sLen_s114);
        _pac_sc_s112 = sLen_s114;
      }
      else
      {
        _pac_sc_s112 = null;
      }
      int tLen_s116 = 0;
      String@meta(tLen_s116);
      Object@Object _pac_sc_s117 = null;
      if((self.__cid) == (new Object@Object(__cid=-2, _int=tLen_s116)._int))/*String.sk:160*/
      {
        Object@Object tLen_s119 = null;
        length@String(self, tLen_s119);
        _pac_sc_s117 = tLen_s119;
      }
      else
      {
        _pac_sc_s117 = null;
      }
      if((_pac_sc_s112._int) != (_pac_sc_s117._int))/*String.sk:161*/
      {
        _out = new Object@Object(__cid=-4, _bit=0);
      }
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa11 = ((i._int) < (_pac_sc_s112._int)) && ((_out._bit) == (new Object@Object(__cid=-4, _bit=1)._bit));
      while(__sa11)
      {
        if((obj._value_String._array_char.A[i._int]) != (self._value_String._array_char.A[i._int]))/*String.sk:163*/
        {
          _out = new Object@Object(__cid=-4, _bit=0);
        }
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa11 = ((i._int) < (_pac_sc_s112._int)) && ((_out._bit) == (new Object@Object(__cid=-4, _bit=1)._bit));
      }
    }
    return;
  }
  /*String.sk:94*/
  
void indexOf_char_int (Object self, Object c, Object i, ref Object _out)/*String.sk:94*/
  {
    int len_s170 = 0;
    String@meta(len_s170);
    Object@Object _pac_sc_s171 = null;
    if((self.__cid) == (new Object@Object(__cid=-2, _int=len_s170)._int))/*String.sk:95*/
    {
      Object@Object len_s173 = null;
      length@String(self, len_s173);
      _pac_sc_s171 = len_s173;
    }
    else
    {
      _pac_sc_s171 = null;
    }
    Object@Object index = new Object@Object(__cid=-2, _int=-(new Object@Object(__cid=-2, _int=1)._int));
    if(((i._int) >= (_pac_sc_s171._int)) || ((i._int) < (new Object@Object(__cid=-2, _int=0)._int)))/*String.sk:97*/
    {
      _out = index;
      return;
    }
    Object@Object j = i;
    bit __sa7 = (i._int) < (_pac_sc_s171._int);
    while(__sa7)
    {
      int _out_s175 = 0;
      String@meta(_out_s175);
      Object@Object _pac_sc_s176 = null;
      if((self.__cid) == (new Object@Object(__cid=-2, _int=_out_s175)._int))/*String.sk:101*/
      {
        Object@Object _out_s178 = null;
        charAt_int@String(self, j, _out_s178);
        _pac_sc_s176 = _out_s178;
      }
      else
      {
        _pac_sc_s176 = null;
      }
      if((_pac_sc_s176._char) == (c._char))/*String.sk:101*/
      {
        _out = j;
        return;
      }
      j = new Object@Object(__cid=-2, _int=(j._int) + 1);
      __sa7 = (j._int) < (_pac_sc_s171._int);
    }
    _out = index;
    return;
  }
  /*String.sk:48*/
  
void length (Object self, ref Object _out)/*String.sk:48*/
  {
    _out = self._count_String;
    return;
  }
  /*String.sk:245*/
  
void split_String (Object self, Object regex, ref Object _out)/*String.sk:245*/
  {
    Object@Object _out_s121 = null;
    split_String_int@String(self, regex, new Object@Object(__cid=-2, _int=0), _out_s121);
    _out = _out_s121;
    return;
  }
  /*String.sk:249*/
  
void split_String_int (Object self, Object regex, Object limit, ref Object _out)/*String.sk:249*/
  {
    Object@Object off = new Object@Object(__cid=-2, _int=0);
    int ch_s123 = 0;
    String@meta(ch_s123);
    Object@Object _pac_sc_s124 = null;
    if((regex.__cid) == (new Object@Object(__cid=-2, _int=ch_s123)._int))/*String.sk:251*/
    {
      Object@Object ch_s126 = null;
      charAt_int@String(regex, new Object@Object(__cid=-2, _int=0), ch_s126);
      _pac_sc_s124 = ch_s126;
    }
    else
    {
      _pac_sc_s124 = null;
    }
    Object@Object next_s128 = null;
    indexOf_char_int@String(self, _pac_sc_s124, off, next_s128);
    Object@Object next;
    next = next_s128;
    Object@Object limited = new Object@Object(__cid=-2, _int=(limit._int) > (new Object@Object(__cid=-2, _int=0)._int));
    Object@Object size = new Object@Object(__cid=-2, _int=0);
    bit __sa18 = (next_s128._int) != (-(new Object@Object(__cid=-2, _int=1)._int));
    while(__sa18)
    {
      if((!(limited._bit)) || ((size._int) < ((limit._int) - (new Object@Object(__cid=-2, _int=1)._int))))/*String.sk:256*/
      {
        off = new Object@Object(__cid=-2, _int=(next._int) + (new Object@Object(__cid=-2, _int=1)._int));
        Object@Object next_s130 = null;
        indexOf_char_int@String(self, _pac_sc_s124, off, next_s130);
        next = next_s130;
      }
      else
      {
        next = new Object@Object(__cid=-2, _int=-(new Object@Object(__cid=-2, _int=1)._int));
      }
      size = new Object@Object(__cid=-2, _int=(size._int) + 1);
      __sa18 = (next._int) != (-(new Object@Object(__cid=-2, _int=1)._int));
    }
    if((!(limited._bit)) || ((size._int) < (limit._int)))/*String.sk:266*/
    {
      size = new Object@Object(__cid=-2, _int=(size._int) + 1);
    }
    off = new Object@Object(__cid=-2, _int=0);
    int ch_s132 = 0;
    String@meta(ch_s132);
    Object@Object _pac_sc_s133 = null;
    if((regex.__cid) == (new Object@Object(__cid=-2, _int=ch_s132)._int))/*String.sk:268*/
    {
      Object@Object ch_s135 = null;
      charAt_int@String(regex, new Object@Object(__cid=-2, _int=0), ch_s135);
      _pac_sc_s133 = ch_s135;
    }
    else
    {
      _pac_sc_s133 = null;
    }
    Object@Object next_s137 = null;
    indexOf_char_int@String(self, _pac_sc_s133, off, next_s137);
    next = next_s137;
    limited = new Object@Object(__cid=-2, _int=(limit._int) > (new Object@Object(__cid=-2, _int=0)._int));
    Object@Object list_s139 = null;
    Wrap_Array_Object@array(new Array_Object@array(length=size), list_s139);
    size = new Object@Object(__cid=-2, _int=0);
    bit __sa19 = (next_s137._int) != (-(new Object@Object(__cid=-2, _int=1)._int));
    while(__sa19)
    {
      if((!(limited._bit)) || ((size._int) < ((limit._int) - (new Object@Object(__cid=-2, _int=1)._int))))/*String.sk:274*/
      {
        Object@Object _out_s141 = null;
        substring_int_int@String(self, off, next, _out_s141);
        list_s139._array_object.A[size._int] = _out_s141;
        off = new Object@Object(__cid=-2, _int=(next._int) + (new Object@Object(__cid=-2, _int=1)._int));
        Object@Object next_s143 = null;
        indexOf_char_int@String(self, _pac_sc_s133, off, next_s143);
        next = next_s143;
      }
      else
      {
        Object@Object _out_s145 = null;
        substring_int_int@String(self, off, self._count_String, _out_s145);
        list_s139._array_object.A[size._int] = _out_s145;
        off = self._value_String._array_char.length;
        next = new Object@Object(__cid=-2, _int=-(new Object@Object(__cid=-2, _int=1)._int));
      }
      size = new Object@Object(__cid=-2, _int=(size._int) + 1);
      __sa19 = (next._int) != (-(new Object@Object(__cid=-2, _int=1)._int));
    }
    if((off._int) == (new Object@Object(__cid=-2, _int=0)._int))/*String.sk:286*/
    {
      Object@Object res_s147 = null;
      Wrap_Array_Object@array(new Array_Object@array(length=new Object@Object(__cid=-2, _int=1)), res_s147);
      res_s147._array_object.A[0] = self;
      _out = res_s147;
      return;
    }
    if((!(limited._bit)) || ((size._int) < (limit._int)))/*String.sk:290*/
    {
      Object@Object _out_s149 = null;
      substring_int_int@String(self, off, self._count_String, _out_s149);
      list_s139._array_object.A[size._int] = _out_s149;
    }
    Object@Object resultSize = list_s139._array_object.length;
    if((limit._int) == (new Object@Object(__cid=-2, _int=0)._int))/*String.sk:295*/
    {
      Object@Object tmp = list_s139._array_object.A[(resultSize._int) - (new Object@Object(__cid=-2, _int=1)._int)];
      bit _pac_sc_s150 = (resultSize._int) > (new Object@Object(__cid=-2, _int=0)._int);
      if(_pac_sc_s150)/*String.sk:297*/
      {
        int _pac_sc_s150_s152 = 0;
        String@meta(_pac_sc_s150_s152);
        Object@Object _pac_sc_s153 = null;
        if((tmp.__cid) == (new Object@Object(__cid=-2, _int=_pac_sc_s150_s152)._int))/*String.sk:297*/
        {
          Object@Object _pac_sc_s150_s155 = null;
          length@String(tmp, _pac_sc_s150_s155);
          _pac_sc_s153 = _pac_sc_s150_s155;
        }
        else
        {
          _pac_sc_s153 = null;
        }
        _pac_sc_s150 = (_pac_sc_s153._int) == (new Object@Object(__cid=-2, _int=0)._int);
      }
      bit __sa20 = _pac_sc_s150;
      while(__sa20)
      {
        resultSize = new Object@Object(__cid=-2, _int=(resultSize._int) - 1);
        bit _pac_sc_s156 = (resultSize._int) > (new Object@Object(__cid=-2, _int=0)._int);
        if(_pac_sc_s156)/*String.sk:297*/
        {
          int _pac_sc_s156_s158 = 0;
          String@meta(_pac_sc_s156_s158);
          Object@Object _pac_sc_s159 = null;
          if((tmp.__cid) == (new Object@Object(__cid=-2, _int=_pac_sc_s156_s158)._int))/*String.sk:297*/
          {
            Object@Object _pac_sc_s156_s161 = null;
            length@String(tmp, _pac_sc_s156_s161);
            _pac_sc_s159 = _pac_sc_s156_s161;
          }
          else
          {
            _pac_sc_s159 = null;
          }
          _pac_sc_s156 = (_pac_sc_s159._int) == (new Object@Object(__cid=-2, _int=0)._int);
        }
        __sa20 = _pac_sc_s156;
      }
    }
    Object@Object result_s163 = null;
    Wrap_Array_Object@array(new Array_Object@array(length=resultSize), result_s163);
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa21 = (i._int) < (resultSize._int);
    while(__sa21)
    {
      result_s163._array_object.A[i._int] = list_s139._array_object.A[i._int];
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa21 = (i._int) < (resultSize._int);
    }
    _out = result_s163;
    return;
  }
  /*String.sk:233*/
  
void substring_int_int (Object self, Object beginIndex, Object endIndex, ref Object _out)/*String.sk:233*/
  {
    assert (((beginIndex._int) >= (new Object@Object(__cid=-2, _int=0)._int)) && ((endIndex._int) <= (self._value_String._array_char.length._int))); //Assert at String.sk:234 (0)
    Object@Object subLen = new Object@Object(__cid=-2, _int=(endIndex._int) - (beginIndex._int));
    assert ((subLen._int) > (new Object@Object(__cid=-2, _int=0)._int)); //Assert at String.sk:236 (0)
    Object@Object _pac_sc_s164 = null;
    if(((beginIndex._int) == (new Object@Object(__cid=-2, _int=0)._int)) && ((endIndex._int) == (self._count_String._int)))/*String.sk:237*/
    {
      _pac_sc_s164 = self;
    }
    else
    {
      int _out_s166 = 0;
      String@meta(_out_s166);
      Object@Object _out_s168 = null;
      String_String_char_int_int(new Object@Object(__cid=_out_s166), self._value_String, beginIndex, subLen, _out_s168)//{};
      _pac_sc_s164 = _out_s168;
    }
    _out = _pac_sc_s164;
    return;
  }
  /* END PACKAGE String*/
}
/* BEGIN PACKAGE CsvColumn*/
package CsvColumn{
  /*CsvColumn.sk:7*/
  
void CsvColumn_CsvColumn_String (Object self, Object value, ref Object _out)/*CsvColumn.sk:7*/
  {
    self.columnValue_CsvColumn = value;
    _out = self;
    return;
  }
  /*CsvColumn.sk:26*/
  
void getColumnValue (Object self, ref Object _out)/*CsvColumn.sk:26*/
  {
    _out = self.columnValue_CsvColumn;
    return;
  }
  /* END PACKAGE CsvColumn*/
}
/* BEGIN PACKAGE Number*/
package Number{
  /* END PACKAGE Number*/
}
/* BEGIN PACKAGE array*/
package array{
  struct Array_bit {
      Object length;
      bit[length._int] A;
  }
  struct Array_char {
      Object length;
      char[length._int] A;
  }
  struct Array_int {
      Object length;
      int[length._int] A;
  }
  struct Array_float {
      Object length;
      float[length._int] A;
  }
  struct Array_double {
      Object length;
      double[length._int] A;
  }
  struct Array_Object {
      Object length;
      Object[length._int] A;
  }
  /*array.sk:53*/
  
void Wrap_Array_Object (Array_Object arr, ref Object _out)/*array.sk:53*/
  {
    int _out_s481 = 0;
    Array@meta(_out_s481);
    _out = new Object@Object(__cid=_out_s481, _array_object=arr);
    return;
  }
  /*array.sk:37*/
  
void Wrap_Array_char (Array_char arr, ref Object _out)/*array.sk:37*/
  {
    int _out_s479 = 0;
    Array@meta(_out_s479);
    _out = new Object@Object(__cid=_out_s479, _array_char=arr);
    return;
  }
  /* END PACKAGE array*/
}
/* BEGIN PACKAGE CsvRowTest*/
package CsvRowTest{
  /* END PACKAGE CsvRowTest*/
}
/* BEGIN PACKAGE CsvColumnTest*/
package CsvColumnTest{
  /* END PACKAGE CsvColumnTest*/
}
/* BEGIN PACKAGE Boolean*/
package Boolean{
  /* END PACKAGE Boolean*/
}
/* BEGIN PACKAGE CodeAssertion*/
package CodeAssertion{
  /* END PACKAGE CodeAssertion*/
}
/* BEGIN PACKAGE PrintStream*/
package PrintStream{
  struct PrintStream {
      @Immutable()
  }
  struct Printstream extends PrintStream@PrintStream {
      @Immutable()
  }
  struct Printstream_fileoutputstream extends PrintStream@PrintStream {
      Object fos;
      @Immutable()
  }
  struct Close extends PrintStream@PrintStream {
      PrintStream self;
      @Immutable()
  }
  struct Closeb extends PrintStream@PrintStream {
      PrintStream self;
      @Immutable()
  }
  struct Printb_string extends PrintStream@PrintStream {
      PrintStream self;
      Object s;
      @Immutable()
  }
  struct Print_string extends PrintStream@PrintStream {
      PrintStream self;
      Object s;
      @Immutable()
  }
  /* END PACKAGE PrintStream*/
}
/* BEGIN PACKAGE ANONYMOUS*/
/* END PACKAGE ANONYMOUS*/
/* BEGIN PACKAGE Character*/
package Character{
  /* END PACKAGE Character*/
}
/* BEGIN PACKAGE CharSequence*/
package CharSequence{
  /* END PACKAGE CharSequence*/
}
/* BEGIN PACKAGE FileReaderr*/
package FileReaderr{
  /*FileReaderr.sk:7*/
  
void FileReaderr_FileReaderr_String (Object self, Object path, ref Object _out)/*FileReaderr.sk:7*/
  {
    self.path_FileReaderr = path;
    int _out_s787 = 0;
    String@meta(_out_s787);
    Object@Object _pac_sc_s788 = null;
    if((path.__cid) == (new Object@Object(__cid=-2, _int=_out_s787)._int))/*FileReaderr.sk:9*/
    {
      int _out_s790 = 0;
      String@meta(_out_s790);
      Object@Object _out_s792 = null;
      Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'\n','\0'}), _out_s792);
      Object@Object _out_s794 = null;
      String_String_char_int_int@String(new Object@Object(__cid=_out_s790), _out_s792, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), _out_s794)//{};
      Object@Object _out_s796 = null;
      split_String@String(path, _out_s794, _out_s796)//{};
      _pac_sc_s788 = _out_s796;
    }
    else
    {
      _pac_sc_s788 = null;
    }
    self.data_FileReaderr = _pac_sc_s788;
    _out = self;
    return;
  }
  /*FileReaderr.sk:17*/
  
void get_int (Object self, Object i, ref Object _out)/*FileReaderr.sk:17*/
  {
    if((i._int) < (self.data_FileReaderr._array_object.length._int))/*FileReaderr.sk:18*/
    {
      _out = self.data_FileReaderr._array_object.A[i._int];
      return;
    }
    _out = null;
    return;
  }
  /* END PACKAGE FileReaderr*/
}
/* BEGIN PACKAGE Integer*/
package Integer{
  /*Integer.sk:22*/
  
void intValue (Object self, ref Object _out)/*Integer.sk:22*/
  {
    _out = self.value_Integer;
    return;
  }
  /* END PACKAGE Integer*/
}
/* BEGIN PACKAGE StringBuffer*/
package StringBuffer{
  /* END PACKAGE StringBuffer*/
}
/* BEGIN PACKAGE CsvRow*/
package CsvRow{
  /*CsvRow.sk:22*/
  
void CsvRow_CsvRow_ArrayList (Object self, Object rowColumns, ref Object _out)/*CsvRow.sk:22*/
  {
    Object@Object _out_s891 = null;
    ArrayList_ArrayList@ArrayList(_out_s891);
    self.columns_CsvRow = _out_s891;
    self.columns_CsvRow = rowColumns;
    _out = self;
    return;
  }
  /*CsvRow.sk:45*/
  
void toString (Object self, ref Object _out)/*CsvRow.sk:45*/
  {
    int sb_s851 = 0;
    StringBuilder@meta(sb_s851);
    Object@Object sb_s853 = null;
    StringBuilder_StringBuilder@StringBuilder(new Object@Object(__cid=sb_s851), sb_s853)//{};
    Object@Object sz_s855 = null;
    xform_size_ArrayList@ArrayList(self.columns_CsvRow._arraylist, sz_s855);
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    int __sa30_s857 = 0;
    ArrayList@meta(__sa30_s857);
    int __sa30_s859 = 0;
    ArrayList@meta(__sa30_s859);
    bit __sa30;
    __sa30 = (i._int) < (((self.columns_CsvRow.__cid) == (new Object@Object(__cid=-2, _int=__sa30_s859)._int) ? sz_s855 : null)._int);
    while(__sa30)
    {
      Object@Object c_s861 = null;
      xform_get_ArrayList_int@ArrayList(self.columns_CsvRow._arraylist, i, c_s861);
      int _out_s863 = 0;
      StringBuilder@meta(_out_s863);
      if((sb_s853.__cid) == (new Object@Object(__cid=-2, _int=_out_s863)._int))/*CsvRow.sk:51*/
      {
        int _out_s865 = 0;
        CsvColumn@meta(_out_s865);
        Object@Object _pac_sc_s866 = null;
        if((c_s861.__cid) == (new Object@Object(__cid=-2, _int=_out_s865)._int))/*CsvRow.sk:51*/
        {
          Object@Object _out_s868 = null;
          getColumnValue@CsvColumn(c_s861, _out_s868);
          _pac_sc_s866 = _out_s868;
        }
        else
        {
          _pac_sc_s866 = null;
        }
        append_String@StringBuilder(sb_s853, _pac_sc_s866)//{};
      }
      int _out_s870 = 0;
      ArrayList@meta(_out_s870);
      int _out_s872 = 0;
      ArrayList@meta(_out_s872);
      if((i._int) < ((((self.columns_CsvRow.__cid) == (new Object@Object(__cid=-2, _int=_out_s872)._int) ? sz_s855 : null)._int) - (new Object@Object(__cid=-2, _int=1)._int)))/*CsvRow.sk:53*/
      {
        int _out_s874 = 0;
        StringBuilder@meta(_out_s874);
        if((sb_s853.__cid) == (new Object@Object(__cid=-2, _int=_out_s874)._int))/*CsvRow.sk:54*/
        {
          int _out_s876 = 0;
          String@meta(_out_s876);
          Object@Object _out_s878 = null;
          Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={',','\0'}), _out_s878);
          Object@Object _out_s880 = null;
          String_String_char_int_int@String(new Object@Object(__cid=_out_s876), _out_s878, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), _out_s880)//{};
          append_String@StringBuilder(sb_s853, _out_s880)//{};
        }
      }
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      int __sa30_s882 = 0;
      ArrayList@meta(__sa30_s882);
      int __sa30_s884 = 0;
      ArrayList@meta(__sa30_s884);
      __sa30 = (i._int) < (((self.columns_CsvRow.__cid) == (new Object@Object(__cid=-2, _int=__sa30_s884)._int) ? sz_s855 : null)._int);
    }
    int _out_s886 = 0;
    StringBuilder@meta(_out_s886);
    Object@Object _pac_sc_s887 = null;
    if((sb_s853.__cid) == (new Object@Object(__cid=-2, _int=_out_s886)._int))/*CsvRow.sk:58*/
    {
      Object@Object _out_s889 = null;
      toString@StringBuilder(sb_s853, _out_s889);
      _pac_sc_s887 = _out_s889;
    }
    else
    {
      _pac_sc_s887 = null;
    }
    _out = _pac_sc_s887;
    return;
  }
  /* END PACKAGE CsvRow*/
}
/* BEGIN PACKAGE meta*/
package meta{
  /*meta.sk:28*/
  
void Array (ref int _out)/*meta.sk:28*/
  {
    _out = -1;
    return;
  }
  /*meta.sk:4*/
  
void ArrayList (ref int _out)/*meta.sk:4*/
  {
    _out = 15;
    return;
  }
  /*meta.sk:6*/
  
void BufferedReader (ref int _out)/*meta.sk:6*/
  {
    _out = 22;
    return;
  }
  /*meta.sk:10*/
  
void CsvColumn (ref int _out)/*meta.sk:10*/
  {
    _out = 9;
    return;
  }
  /*meta.sk:12*/
  
void CsvConfiguration (ref int _out)/*meta.sk:12*/
  {
    _out = 11;
    return;
  }
  /*meta.sk:13*/
  
void CsvDocument (ref int _out)/*meta.sk:13*/
  {
    _out = 3;
    return;
  }
  /*meta.sk:16*/
  
void CsvRow (ref int _out)/*meta.sk:16*/
  {
    _out = 10;
    return;
  }
  /*meta.sk:19*/
  
void FileReaderr (ref int _out)/*meta.sk:19*/
  {
    _out = 16;
    return;
  }
  /*meta.sk:20*/
  
void Integer (ref int _out)/*meta.sk:20*/
  {
    _out = 14;
    return;
  }
  /*meta.sk:22*/
  
void Object (ref int _out)/*meta.sk:22*/
  {
    _out = 1;
    return;
  }
  /*meta.sk:24*/
  
void String (ref int _out)/*meta.sk:24*/
  {
    _out = 23;
    return;
  }
  /*meta.sk:26*/
  
void StringBuilder (ref int _out)/*meta.sk:26*/
  {
    _out = 18;
    return;
  }
  /* END PACKAGE meta*/
}
/* BEGIN PACKAGE FileOutputStream*/
package FileOutputStream{
  struct FileOutputStream {
      @Immutable()
  }
  struct Fileoutputstream extends FileOutputStream@FileOutputStream {
      @Immutable()
  }
  struct Fileoutputstream_string extends FileOutputStream@FileOutputStream {
      Object s;
      @Immutable()
  }
  /* END PACKAGE FileOutputStream*/
}
/* BEGIN PACKAGE BufferedReader*/
package BufferedReader{
  struct BufferedReader {
      @Immutable()
  }
  struct Bufferedreader extends BufferedReader@BufferedReader {
      @Immutable()
  }
  struct Bufferedreader_filereaderr extends BufferedReader@BufferedReader {
      Object type;
      @Immutable()
  }
  struct Readline extends BufferedReader@BufferedReader {
      BufferedReader self;
      @Immutable()
  }
  struct Readlineb extends BufferedReader@BufferedReader {
      BufferedReader self;
      @Immutable()
  }
  struct Readlinehelpb_int extends BufferedReader@BufferedReader {
      BufferedReader self;
      Object i;
      @Immutable()
  }
  struct Readlinehelp_int extends BufferedReader@BufferedReader {
      BufferedReader self;
      Object i;
      @Immutable()
  }
  /*BufferedReader.sk:16*/
  
void BufferedReader_Object_FileReaderr (Object type, ref Object _out)/*BufferedReader.sk:16*/
  {
    int _out_s987 = 0;
    BufferedReader@meta(_out_s987);
    _out = new Object@Object(__cid=_out_s987, _bufferedreader=new Bufferedreader_filereaderr(type=type));
    return;
  }
  /*BufferedReader.sk:24*/
  
void readLineb_Object (Object self, ref Object _out)/*BufferedReader.sk:24*/
  {
    self._bufferedreader = new Readlineb(self=self._bufferedreader);
    _out = self;
    return;
  }
  /*BufferedReader.sk:62*/
  
void xform_readLineHelp_BufferedReader_int (BufferedReader self, Object i, ref Object _out)/*BufferedReader.sk:62*/
  {
    switch(self){/*BufferedReader.sk:63*/
      case Bufferedreader:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:63 ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:64 Assert at BufferedReader.sk:64 (1)
      case Bufferedreader_filereaderr:
      {
        int _out_s980 = 0;
        FileReaderr@meta(_out_s980);
        Object@Object _pac_sc_s981 = null;
        if((self.type.__cid) == (new Object@Object(__cid=-2, _int=_out_s980)._int))/*BufferedReader.sk:66*/
        {
          Object@Object _out_s983 = null;
          get_int@FileReaderr(self.type, i, _out_s983);
          _pac_sc_s981 = _out_s983;
        }
        else
        {
          _pac_sc_s981 = null;
        }
        _out = _pac_sc_s981;
        return;
      }
      case Readline:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:63 ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:68 Assert at BufferedReader.sk:68 (1)
      case Readlineb:
      {
        Object@Object _out_s985 = null;
        xform_readLineHelp_BufferedReader_int(self.self, new Object@Object(__cid=-2, _int=(i._int) + (new Object@Object(__cid=-2, _int=1)._int)), _out_s985);
        _out = _out_s985;
        return;
      }
      case Readlinehelpb_int:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:63 ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:72 Assert at BufferedReader.sk:72 (1)
      case Readlinehelp_int:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:63 ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:73 Assert at BufferedReader.sk:73 (1)
    }
    _out = null;
    return;
  }
  /*BufferedReader.sk:114*/
  
void xform_readLine_BufferedReader (BufferedReader self, ref Object _out)/*BufferedReader.sk:114*/
  {
    switch(self){/*BufferedReader.sk:115*/
      case Bufferedreader:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:115 ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:116 Assert at BufferedReader.sk:116 (1)
      case Bufferedreader_filereaderr:
      {
        int _out_s973 = 0;
        FileReaderr@meta(_out_s973);
        Object@Object _pac_sc_s974 = null;
        if((self.type.__cid) == (new Object@Object(__cid=-2, _int=_out_s973)._int))/*BufferedReader.sk:118*/
        {
          Object@Object _out_s976 = null;
          get_int@FileReaderr(self.type, new Object@Object(__cid=-2, _int=0), _out_s976);
          _pac_sc_s974 = _out_s976;
        }
        else
        {
          _pac_sc_s974 = null;
        }
        _out = _pac_sc_s974;
        return;
      }
      case Readline:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:115 ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:120 Assert at BufferedReader.sk:120 (1)
      case Readlineb:
      {
        Object@Object _out_s978 = null;
        xform_readLineHelp_BufferedReader_int(self.self, new Object@Object(__cid=-2, _int=1), _out_s978);
        _out = _out_s978;
        return;
      }
      case Readlinehelpb_int:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:115 ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:124 Assert at BufferedReader.sk:124 (1)
      case Readlinehelp_int:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:115 ASSERTION CAN NOT BE SATISFIED: BufferedReader.sk:125 Assert at BufferedReader.sk:125 (1)
    }
    _out = null;
    return;
  }
  /* END PACKAGE BufferedReader*/
}
/* BEGIN PACKAGE Object*/
package Object{
  struct Object {
      int __cid;
      Object csvRows_CsvDocument;
      Object _value_StringBuilder;
      Object _count_StringBuilder;
      Object columns_CsvRow;
      Object _value_String;
      Object _count_String;
      Object value_Character;
      Object name_CsvDocumentTest_Person;
      Object age_CsvDocumentTest_Person;
      Object isEmployed_CsvDocumentTest_Person;
      Object columnValue_CsvColumn;
      Object _value_StringBuffer;
      Object _count_StringBuffer;
      Object bool_Boolean;
      Object path_FileReaderr;
      Object data_FileReaderr;
      Object value_Integer;
      Object skipHeader_CsvConfiguration;
      Object columnIndexesToParse_CsvConfiguration;
      ArrayList _arraylist;
      FileOutputStream _fileoutputstream;
      BufferedReader _bufferedreader;
      PrintStream _printstream;
      Array_bit _array_bit;
      Array_char _array_char;
      Array_int _array_int;
      Array_float _array_float;
      Array_double _array_double;
      Array_Object _array_object;
      bit _bit;
      char _char;
      int _int;
      float _float;
      double _double;
  }
  /*Object.sk:7*/
  
void Object_Object (Object self, ref Object _out)/*Object.sk:7*/
  {
    _out = self;
    return;
  }
  /* END PACKAGE Object*/
}
/* BEGIN PACKAGE CsvDocument*/
package CsvDocument{
  /*CsvDocument.sk:7*/
  
void CsvDocument_CsvDocument_ArrayList (Object self, Object csvRows, ref Object _out)/*CsvDocument.sk:7*/
  {
    self.csvRows_CsvDocument = csvRows;
    _out = self;
    return;
  }
  /*CsvDocument.sk:12*/
  
void getCsvRows (Object self, ref Object _out)/*CsvDocument.sk:12*/
  {
    _out = self.csvRows_CsvDocument;
    return;
  }
  /*CsvDocument.sk:90*/
  
void parseCsvRow_CsvConfiguration_String (Object csvConfiguration, Object csvLine, ref Object _out)/*CsvDocument.sk:90*/
  {
    int COMA_SEPARATOR_s1281 = 0;
    String@meta(COMA_SEPARATOR_s1281);
    Object@Object COMA_SEPARATOR_s1283 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={',','\0'}), COMA_SEPARATOR_s1283);
    Object@Object COMA_SEPARATOR_s1285 = null;
    String_String_char_int_int@String(new Object@Object(__cid=COMA_SEPARATOR_s1281), COMA_SEPARATOR_s1283, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), COMA_SEPARATOR_s1285)//{};
    int columns_s1287 = 0;
    String@meta(columns_s1287);
    Object@Object _pac_sc_s1288 = null;
    if((csvLine.__cid) == (new Object@Object(__cid=-2, _int=columns_s1287)._int))/*CsvDocument.sk:92*/
    {
      Object@Object columns_s1290 = null;
      split_String@String(csvLine, COMA_SEPARATOR_s1285, columns_s1290);
      _pac_sc_s1288 = columns_s1290;
    }
    else
    {
      _pac_sc_s1288 = null;
    }
    Object@Object csvColumns_s1292 = null;
    ArrayList_ArrayList@ArrayList(csvColumns_s1292);
    Object@Object csvColumns;
    csvColumns = csvColumns_s1292;
    int _out_s1294 = 0;
    CsvConfiguration@meta(_out_s1294);
    Object@Object _pac_sc_s1295 = null;
    if((csvConfiguration.__cid) == (new Object@Object(__cid=-2, _int=_out_s1294)._int))/*CsvDocument.sk:94*/
    {
      Object@Object _out_s1297 = null;
      parseAllColumns@CsvConfiguration(csvConfiguration, _out_s1297);
      _pac_sc_s1295 = _out_s1297;
    }
    else
    {
      _pac_sc_s1295 = null;
    }
    if(_pac_sc_s1295._bit)/*CsvDocument.sk:94*/
    {
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa32 = (i._int) < (_pac_sc_s1288._array_object.length._int);
      while(__sa32)
      {
        int _out_s1299 = 0;
        ArrayList@meta(_out_s1299);
        if((csvColumns.__cid) == (new Object@Object(__cid=-2, _int=_out_s1299)._int))/*CsvDocument.sk:96*/
        {
          int _out_s1302 = 0;
          CsvColumn@meta(_out_s1302);
          Object@Object _out_s1304 = null;
          CsvColumn_CsvColumn_String@CsvColumn(new Object@Object(__cid=_out_s1302), _pac_sc_s1288._array_object.A[i._int], _out_s1304)//{};
          Object@Object _out_s1306 = null;
          add_Object_Object@ArrayList(csvColumns, _out_s1304, _out_s1306)//{};
        }
        int csvColumns_s1308 = 0;
        ArrayList@meta(csvColumns_s1308);
        Object@Object _pac_sc_s1309 = null;
        if((csvColumns.__cid) == (new Object@Object(__cid=-2, _int=csvColumns_s1308)._int))/*CsvDocument.sk:96*/
        {
          int csvColumns_s1311 = 0;
          CsvColumn@meta(csvColumns_s1311);
          Object@Object csvColumns_s1313 = null;
          CsvColumn_CsvColumn_String@CsvColumn(new Object@Object(__cid=csvColumns_s1311), _pac_sc_s1288._array_object.A[i._int], csvColumns_s1313)//{};
          Object@Object csvColumns_s1315 = null;
          addb_Object_Object@ArrayList(csvColumns, csvColumns_s1313, csvColumns_s1315)//{};
          _pac_sc_s1309 = csvColumns_s1315;
        }
        else
        {
          _pac_sc_s1309 = null;
        }
        csvColumns = _pac_sc_s1309;
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa32 = (i._int) < (_pac_sc_s1288._array_object.length._int);
      }
    }
    else
    {
      int colInds_s1317 = 0;
      CsvConfiguration@meta(colInds_s1317);
      Object@Object _pac_sc_s1318 = null;
      if((csvConfiguration.__cid) == (new Object@Object(__cid=-2, _int=colInds_s1317)._int))/*CsvDocument.sk:100*/
      {
        Object@Object colInds_s1320 = null;
        getColumnIndexesToParse@CsvConfiguration(csvConfiguration, colInds_s1320);
        _pac_sc_s1318 = colInds_s1320;
      }
      else
      {
        _pac_sc_s1318 = null;
      }
      Object@Object size_s1322 = null;
      xform_size_ArrayList@ArrayList(_pac_sc_s1318._arraylist, size_s1322);
      Object@Object i_0 = new Object@Object(__cid=-2, _int=0);
      bit __sa33 = (i_0._int) < (size_s1322._int);
      while(__sa33)
      {
        Object@Object columnIndexInt_s1324 = null;
        xform_get_ArrayList_int@ArrayList(_pac_sc_s1318._arraylist, i_0, columnIndexInt_s1324);
        int columnIndex_s1326 = 0;
        Integer@meta(columnIndex_s1326);
        Object@Object _pac_sc_s1327 = null;
        if((columnIndexInt_s1324.__cid) == (new Object@Object(__cid=-2, _int=columnIndex_s1326)._int))/*CsvDocument.sk:106*/
        {
          Object@Object columnIndex_s1329 = null;
          intValue@Integer(columnIndexInt_s1324, columnIndex_s1329);
          _pac_sc_s1327 = columnIndex_s1329;
        }
        else
        {
          _pac_sc_s1327 = null;
        }
        int _out_s1331 = 0;
        ArrayList@meta(_out_s1331);
        if((csvColumns.__cid) == (new Object@Object(__cid=-2, _int=_out_s1331)._int))/*CsvDocument.sk:107*/
        {
          int _out_s1334 = 0;
          CsvColumn@meta(_out_s1334);
          Object@Object _out_s1336 = null;
          CsvColumn_CsvColumn_String@CsvColumn(new Object@Object(__cid=_out_s1334), _pac_sc_s1288._array_object.A[_pac_sc_s1327._int], _out_s1336)//{};
          Object@Object _out_s1338 = null;
          add_Object_Object@ArrayList(csvColumns, _out_s1336, _out_s1338)//{};
        }
        int csvColumns_s1340 = 0;
        ArrayList@meta(csvColumns_s1340);
        Object@Object _pac_sc_s1341 = null;
        if((csvColumns.__cid) == (new Object@Object(__cid=-2, _int=csvColumns_s1340)._int))/*CsvDocument.sk:107*/
        {
          int csvColumns_s1343 = 0;
          CsvColumn@meta(csvColumns_s1343);
          Object@Object csvColumns_s1345 = null;
          CsvColumn_CsvColumn_String@CsvColumn(new Object@Object(__cid=csvColumns_s1343), _pac_sc_s1288._array_object.A[_pac_sc_s1327._int], csvColumns_s1345)//{};
          Object@Object csvColumns_s1347 = null;
          addb_Object_Object@ArrayList(csvColumns, csvColumns_s1345, csvColumns_s1347)//{};
          _pac_sc_s1341 = csvColumns_s1347;
        }
        else
        {
          _pac_sc_s1341 = null;
        }
        csvColumns = _pac_sc_s1341;
        i_0 = new Object@Object(__cid=-2, _int=(i_0._int) + 1);
        __sa33 = (i_0._int) < (size_s1322._int);
      }
    }
    int _out_s1349 = 0;
    CsvRow@meta(_out_s1349);
    Object@Object _out_s1351 = null;
    CsvRow_CsvRow_ArrayList@CsvRow(new Object@Object(__cid=_out_s1349), csvColumns, _out_s1351)//{};
    _out = _out_s1351;
    return;
  }
  /*CsvDocument.sk:35*/
  
void read_String (Object filePath, ref Object _out)/*CsvDocument.sk:35*/
  {
    int defaultConfiguration_s1240 = 0;
    CsvConfiguration@meta(defaultConfiguration_s1240);
    Object@Object defaultConfiguration_s1242 = null;
    CsvConfiguration_CsvConfiguration@CsvConfiguration(new Object@Object(__cid=defaultConfiguration_s1240), defaultConfiguration_s1242)//{};
    Object@Object _out_s1244 = null;
    read_String_CsvConfiguration(filePath, defaultConfiguration_s1242, _out_s1244);
    _out = _out_s1244;
    return;
  }
  /*CsvDocument.sk:73*/
  
void read_String_CsvConfiguration (Object filePath, Object csvConfiguration, ref Object _out)/*CsvDocument.sk:73*/
  {
    int bufferedReader_s1246 = 0;
    FileReaderr@meta(bufferedReader_s1246);
    Object@Object bufferedReader_s1248 = null;
    FileReaderr_FileReaderr_String@FileReaderr(new Object@Object(__cid=bufferedReader_s1246), filePath, bufferedReader_s1248)//{};
    Object@Object bufferedReader_s1250 = null;
    BufferedReader_Object_FileReaderr@BufferedReader(bufferedReader_s1248, bufferedReader_s1250)//{};
    Object@Object parsedCsvRows_s1252 = null;
    ArrayList_ArrayList@ArrayList(parsedCsvRows_s1252);
    Object@Object csvLine_2 = null;
    Object@Object csvLine = csvLine_2;
    Object@Object parsedCsvRows = parsedCsvRows_s1252;
    Object@Object bufferedReader = bufferedReader_s1250;
    Object@Object row = null;
    if(new Object@Object(__cid=-4, _bit=0)._bit)/*CsvDocument.sk:44*/
    {
      Object@Object row_s1260 = null;
      parseCsvRow_CsvConfiguration_String(csvConfiguration, csvLine_2, row_s1260);
      row = row_s1260;
    }
    if(new Object@Object(__cid=-4, _bit=0)._bit)/*CsvDocument.sk:47*/
    {
      int _out_s1262 = 0;
      ArrayList@meta(_out_s1262);
      if((parsedCsvRows_s1252.__cid) == (new Object@Object(__cid=-2, _int=_out_s1262)._int))/*CsvDocument.sk:48*/
      {
        Object@Object _out_s1265 = null;
        add_Object_Object@ArrayList(parsedCsvRows_s1252, row, _out_s1265);
      }
      int parsedCsvRows_s1267 = 0;
      ArrayList@meta(parsedCsvRows_s1267);
      Object@Object _pac_sc_s1268 = null;
      if((parsedCsvRows_s1252.__cid) == (new Object@Object(__cid=-2, _int=parsedCsvRows_s1267)._int))/*CsvDocument.sk:48*/
      {
        Object@Object parsedCsvRows_s1270 = null;
        addb_Object_Object@ArrayList(parsedCsvRows_s1252, row, parsedCsvRows_s1270);
        _pac_sc_s1268 = parsedCsvRows_s1270;
      }
      else
      {
        _pac_sc_s1268 = null;
      }
      parsedCsvRows = _pac_sc_s1268;
    }
    if(new Object@Object(__cid=-4, _bit=1)._bit)/*CsvDocument.sk:50*/
    {
      Object@Object csvLine_s1272 = null;
      xform_readLine_BufferedReader@BufferedReader(bufferedReader_s1250._bufferedreader, csvLine_s1272);
      csvLine = csvLine_s1272;
      int bufferedReader_s1274 = 0;
      BufferedReader@meta(bufferedReader_s1274);
      Object@Object _pac_sc_s1275 = null;
      if((bufferedReader_s1250.__cid) == (new Object@Object(__cid=-2, _int=bufferedReader_s1274)._int))/*CsvDocument.sk:53*/
      {
        Object@Object bufferedReader_s1277 = null;
        readLineb_Object@BufferedReader(bufferedReader_s1250, bufferedReader_s1277);
        _pac_sc_s1275 = bufferedReader_s1277;
      }
      else
      {
        _pac_sc_s1275 = null;
      }
      bufferedReader = _pac_sc_s1275;
    }
    if(new Object@Object(__cid=-4, _bit=1)._bit)/*CsvDocument.sk:55*/
    {
      while((csvLine != (null)) && 1)
      {
        Object@Object csvLine_0 = csvLine;
        Object@Object parsedCsvRows_0 = parsedCsvRows;
        Object@Object bufferedReader_0 = bufferedReader;
        Object@Object row_0 = null;
        if(new Object@Object(__cid=-4, _bit=1)._bit)/*CsvDocument.sk:44*/
        {
          Object@Object row_s1260_0 = null;
          parseCsvRow_CsvConfiguration_String(csvConfiguration, csvLine, row_s1260_0);
          row_0 = row_s1260_0;
        }
        if(new Object@Object(__cid=-4, _bit=1)._bit)/*CsvDocument.sk:47*/
        {
          int _out_s1262_0 = 0;
          ArrayList@meta(_out_s1262_0);
          if((parsedCsvRows.__cid) == (new Object@Object(__cid=-2, _int=_out_s1262_0)._int))/*CsvDocument.sk:48*/
          {
            Object@Object _out_s1265_0 = null;
            add_Object_Object@ArrayList(parsedCsvRows, row_0, _out_s1265_0);
          }
          int parsedCsvRows_s1267_0 = 0;
          ArrayList@meta(parsedCsvRows_s1267_0);
          Object@Object _pac_sc_s1268_0 = null;
          if((parsedCsvRows.__cid) == (new Object@Object(__cid=-2, _int=parsedCsvRows_s1267_0)._int))/*CsvDocument.sk:48*/
          {
            Object@Object parsedCsvRows_s1270_0 = null;
            addb_Object_Object@ArrayList(parsedCsvRows, row_0, parsedCsvRows_s1270_0);
            _pac_sc_s1268_0 = parsedCsvRows_s1270_0;
          }
          else
          {
            _pac_sc_s1268_0 = null;
          }
          parsedCsvRows_0 = _pac_sc_s1268_0;
        }
        if(new Object@Object(__cid=-4, _bit=1)._bit)/*CsvDocument.sk:50*/
        {
          Object@Object csvLine_s1272_0 = null;
          xform_readLine_BufferedReader@BufferedReader(bufferedReader._bufferedreader, csvLine_s1272_0);
          csvLine_0 = csvLine_s1272_0;
          int bufferedReader_s1274_0 = 0;
          BufferedReader@meta(bufferedReader_s1274_0);
          Object@Object _pac_sc_s1275_0 = null;
          if((bufferedReader.__cid) == (new Object@Object(__cid=-2, _int=bufferedReader_s1274_0)._int))/*CsvDocument.sk:53*/
          {
            Object@Object bufferedReader_s1277_0 = null;
            readLineb_Object@BufferedReader(bufferedReader, bufferedReader_s1277_0);
            _pac_sc_s1275_0 = bufferedReader_s1277_0;
          }
          else
          {
            _pac_sc_s1275_0 = null;
          }
          bufferedReader_0 = _pac_sc_s1275_0;
        }
        if(new Object@Object(__cid=-4, _bit=0)._bit)/*CsvDocument.sk:55*/
        {
          while((csvLine_0 != (null)) && 1)
          {
            Object@Object csvLine_1 = csvLine_0;
            Object@Object row_1 = null;
            if(new Object@Object(__cid=-4, _bit=1)._bit)/*CsvDocument.sk:44*/
            {
              Object@Object row_s1260_1 = null;
              parseCsvRow_CsvConfiguration_String(csvConfiguration, csvLine_0, row_s1260_1);
              row_1 = row_s1260_1;
            }
            if(new Object@Object(__cid=-4, _bit=0)._bit)/*CsvDocument.sk:47*/
            {
              int _out_s1262_1 = 0;
              ArrayList@meta(_out_s1262_1);
              if((parsedCsvRows_0.__cid) == (new Object@Object(__cid=-2, _int=_out_s1262_1)._int))/*CsvDocument.sk:48*/
              {
                Object@Object _out_s1265_1 = null;
                add_Object_Object@ArrayList(parsedCsvRows_0, row_1, _out_s1265_1);
              }
              int parsedCsvRows_s1267_1 = 0;
              ArrayList@meta(parsedCsvRows_s1267_1);
              if((parsedCsvRows_0.__cid) == (new Object@Object(__cid=-2, _int=parsedCsvRows_s1267_1)._int))/*CsvDocument.sk:48*/
              {
                Object@Object parsedCsvRows_s1270_1 = null;
                addb_Object_Object@ArrayList(parsedCsvRows_0, row_1, parsedCsvRows_s1270_1);
              }
            }
            if(new Object@Object(__cid=-4, _bit=0)._bit)/*CsvDocument.sk:50*/
            {
              Object@Object csvLine_s1272_1 = null;
              xform_readLine_BufferedReader@BufferedReader(bufferedReader_0._bufferedreader, csvLine_s1272_1);
              csvLine_1 = csvLine_s1272_1;
              int bufferedReader_s1274_1 = 0;
              BufferedReader@meta(bufferedReader_s1274_1);
              if((bufferedReader_0.__cid) == (new Object@Object(__cid=-2, _int=bufferedReader_s1274_1)._int))/*CsvDocument.sk:53*/
              {
                Object@Object bufferedReader_s1277_1 = null;
                readLineb_Object@BufferedReader(bufferedReader_0, bufferedReader_s1277_1);
              }
            }
            csvLine_0 = csvLine_1;
          }
        }
        csvLine = csvLine_0;
      }
    }
    int parsedDocument_s1256 = 0;
    CsvDocument@meta(parsedDocument_s1256);
    Object@Object parsedDocument_s1258 = null;
    CsvDocument_CsvDocument_ArrayList(new Object@Object(__cid=parsedDocument_s1256), parsedCsvRows_s1252, parsedDocument_s1258)//{};
    _out = parsedDocument_s1258;
    return;
  }
  /* END PACKAGE CsvDocument*/
}
/* BEGIN PACKAGE CsvConfiguration*/
package CsvConfiguration{
  /*CsvConf..ration.sk:3*/
  
void CsvConfiguration_CsvConfiguration (Object self, ref Object _out)/*CsvConf..ration.sk:3*/
  {
    self.skipHeader_CsvConfiguration = new Object@Object(__cid=-4, _bit=0);
    Object@Object _out_s1412 = null;
    ArrayList_ArrayList@ArrayList(_out_s1412);
    self.columnIndexesToParse_CsvConfiguration = _out_s1412;
    _out = self;
    return;
  }
  /*CsvConf..ration.sk:17*/
  
void getColumnIndexesToParse (Object self, ref Object _out)/*CsvConf..ration.sk:17*/
  {
    _out = self.columnIndexesToParse_CsvConfiguration;
    return;
  }
  /*CsvConf..ration.sk:33*/
  
void parseAllColumns (Object self, ref Object _out)/*CsvConf..ration.sk:33*/
  {
    int _out_s1407 = 0;
    ArrayList@meta(_out_s1407);
    Object@Object _pac_sc_s1408 = null;
    if((self.columnIndexesToParse_CsvConfiguration.__cid) == (new Object@Object(__cid=-2, _int=_out_s1407)._int))/*CsvConf..ration.sk:34*/
    {
      Object@Object _out_s1410 = null;
      size_Object@ArrayList(self.columnIndexesToParse_CsvConfiguration, _out_s1410);
      _pac_sc_s1408 = _out_s1410;
    }
    else
    {
      _pac_sc_s1408 = null;
    }
    _out = new Object@Object(__cid=-4, _bit=(_pac_sc_s1408._int) == (new Object@Object(__cid=-2, _int=0)._int));
    return;
  }
  /* END PACKAGE CsvConfiguration*/
}
/* BEGIN PACKAGE CsvDocumentTest*/
package CsvDocumentTest{
  /*CsvDocu..ntTest.sk:7*/
  
void runTests ()/*CsvDocu..ntTest.sk:7*/
  {
    with_no_config_options_should_parse_csv_file_and_create_csv_document();
  }
  /*CsvDocu..ntTest.sk:11*/
  
void with_no_config_options_should_parse_csv_file_and_create_csv_document ()/*CsvDocu..ntTest.sk:11*/
  {
    int csvPath_s1432 = 0;
    String@meta(csvPath_s1432);
    Object@Object csvPath_s1434 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=6), A={'A','\n','1','\n','2','\0'}), csvPath_s1434);
    Object@Object csvPath_s1436 = null;
    String_String_char_int_int@String(new Object@Object(__cid=csvPath_s1432), csvPath_s1434, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=5), csvPath_s1436)//{};
    Object@Object document_s1438 = null;
    read_String@CsvDocument(csvPath_s1436, document_s1438);
    int rs_s1440 = 0;
    CsvDocument@meta(rs_s1440);
    Object@Object _pac_sc_s1441 = null;
    if((document_s1438.__cid) == (new Object@Object(__cid=-2, _int=rs_s1440)._int))/*CsvDocu..ntTest.sk:15*/
    {
      Object@Object rs_s1443 = null;
      getCsvRows@CsvDocument(document_s1438, rs_s1443);
      _pac_sc_s1441 = rs_s1443;
    }
    else
    {
      _pac_sc_s1441 = null;
    }
    Object@Object headers_s1445 = null;
    xform_get_ArrayList_int@ArrayList(_pac_sc_s1441._arraylist, new Object@Object(__cid=-2, _int=0), headers_s1445);
    Object@Object r1_s1447 = null;
    xform_get_ArrayList_int@ArrayList(_pac_sc_s1441._arraylist, new Object@Object(__cid=-2, _int=1), r1_s1447);
    Object@Object r2_s1449 = null;
    xform_get_ArrayList_int@ArrayList(_pac_sc_s1441._arraylist, new Object@Object(__cid=-2, _int=2), r2_s1449);
    int hstr_s1451 = 0;
    CsvRow@meta(hstr_s1451);
    Object@Object _pac_sc_s1452 = null;
    if((headers_s1445.__cid) == (new Object@Object(__cid=-2, _int=hstr_s1451)._int))/*CsvDocu..ntTest.sk:22*/
    {
      Object@Object hstr_s1454 = null;
      toString@CsvRow(headers_s1445, hstr_s1454);
      _pac_sc_s1452 = hstr_s1454;
    }
    else
    {
      _pac_sc_s1452 = null;
    }
    int r1str_s1456 = 0;
    CsvRow@meta(r1str_s1456);
    Object@Object _pac_sc_s1457 = null;
    if((r1_s1447.__cid) == (new Object@Object(__cid=-2, _int=r1str_s1456)._int))/*CsvDocu..ntTest.sk:23*/
    {
      Object@Object r1str_s1459 = null;
      toString@CsvRow(r1_s1447, r1str_s1459);
      _pac_sc_s1457 = r1str_s1459;
    }
    else
    {
      _pac_sc_s1457 = null;
    }
    int r2str_s1461 = 0;
    CsvRow@meta(r2str_s1461);
    Object@Object _pac_sc_s1462 = null;
    if((r2_s1449.__cid) == (new Object@Object(__cid=-2, _int=r2str_s1461)._int))/*CsvDocu..ntTest.sk:24*/
    {
      Object@Object r2str_s1464 = null;
      toString@CsvRow(r2_s1449, r2str_s1464);
      _pac_sc_s1462 = r2str_s1464;
    }
    else
    {
      _pac_sc_s1462 = null;
    }
    int _out_s1466 = 0;
    String@meta(_out_s1466);
    Object@Object _pac_sc_s1467 = null;
    if((_pac_sc_s1452.__cid) == (new Object@Object(__cid=-2, _int=_out_s1466)._int))/*CsvDocu..ntTest.sk:25*/
    {
      int _out_s1469 = 0;
      String@meta(_out_s1469);
      Object@Object _out_s1471 = null;
      Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'A','\0'}), _out_s1471);
      Object@Object _out_s1473 = null;
      String_String_char_int_int@String(new Object@Object(__cid=_out_s1469), _out_s1471, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), _out_s1473)//{};
      Object@Object _out_s1475 = null;
      equals_Object@String(_pac_sc_s1452, _out_s1473, _out_s1475)//{};
      _pac_sc_s1467 = _out_s1475;
    }
    else
    {
      _pac_sc_s1467 = null;
    }
    assert (_pac_sc_s1467._bit); //Assert at CsvDocu..ntTest.sk:25 (0)
    int _out_s1477 = 0;
    String@meta(_out_s1477);
    Object@Object _pac_sc_s1478 = null;
    if((_pac_sc_s1457.__cid) == (new Object@Object(__cid=-2, _int=_out_s1477)._int))/*CsvDocu..ntTest.sk:26*/
    {
      int _out_s1480 = 0;
      String@meta(_out_s1480);
      Object@Object _out_s1482 = null;
      Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'1','\0'}), _out_s1482);
      Object@Object _out_s1484 = null;
      String_String_char_int_int@String(new Object@Object(__cid=_out_s1480), _out_s1482, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), _out_s1484)//{};
      Object@Object _out_s1486 = null;
      equals_Object@String(_pac_sc_s1457, _out_s1484, _out_s1486)//{};
      _pac_sc_s1478 = _out_s1486;
    }
    else
    {
      _pac_sc_s1478 = null;
    }
    assert (_pac_sc_s1478._bit); //Assert at CsvDocu..ntTest.sk:26 (0)
    int _out_s1488 = 0;
    String@meta(_out_s1488);
    Object@Object _pac_sc_s1489 = null;
    if((_pac_sc_s1462.__cid) == (new Object@Object(__cid=-2, _int=_out_s1488)._int))/*CsvDocu..ntTest.sk:27*/
    {
      int _out_s1491 = 0;
      String@meta(_out_s1491);
      Object@Object _out_s1493 = null;
      Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'2','\0'}), _out_s1493);
      Object@Object _out_s1495 = null;
      String_String_char_int_int@String(new Object@Object(__cid=_out_s1491), _out_s1493, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), _out_s1495)//{};
      Object@Object _out_s1497 = null;
      equals_Object@String(_pac_sc_s1462, _out_s1495, _out_s1497)//{};
      _pac_sc_s1489 = _out_s1497;
    }
    else
    {
      _pac_sc_s1489 = null;
    }
    assert (_pac_sc_s1489._bit); //Assert at CsvDocu..ntTest.sk:27 (0)
  }
  /* END PACKAGE CsvDocumentTest*/
}
[SKETCH] DONE
Total time = 48411
