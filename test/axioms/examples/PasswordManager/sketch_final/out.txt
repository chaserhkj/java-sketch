SKETCH version 1.7.5
Benchmark = /Users/kathymariano/Research/java-sketch2/test/axioms/examples/PasswordManager/sketch_final/sk_PasswordManagerTest/main.sk
array.sk:5: Making final Array_bit@array.length
array.sk:5: Making final Object._int
array.sk:10: Making final Array_char@array.length
array.sk:15: Making final Array_int@array.length
array.sk:20: Making final Array_float@array.length
array.sk:25: Making final Array_double@array.length
array.sk:30: Making final Array_Object@array.length
[SATBackend] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SATBackend] MAX LOOP UNROLLING = 16
[SATBackend] MAX FUNC INLINING  = 2
estimated size of main_int_int_int_int_int__Wrapper_PasswordManagerTest
stmt cnt: 2
callee main_int_int_int_int_int0_PasswordManagerTest : 362

[SATBackend] After prog.accept(partialEval)
[SATBackend] OFILE = sk_PasswordManagerTest
searching for file null
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/cegis/src/SketchSolver/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/cegis
searching for file cegis/src/SketchSolver/cegis
searching for file ../sketch-backend/src/SketchSolver/cegis
searching for file ../sketch-backend/bindings/cegis
searching for file /Users/kathymariano/Research/java-sketch2/test/axioms/examples/PasswordManager/sketch_final/cegis-1.7.5
searching for file /Users/kathymariano/Research/java-sketch2/test/axioms/examples/PasswordManager/sketch_final/cegis
searching for file /usr/bin/cegis
searching for file /usr/bin/src/SketchSolver/cegis
searching for file /usr/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/bin/../sketch-backend/bindings/cegis
searching for file /bin/cegis
searching for file /bin/src/SketchSolver/cegis
searching for file /bin/../sketch-backend/src/SketchSolver/cegis
searching for file /bin/../sketch-backend/bindings/cegis
searching for file /usr/sbin/cegis
searching for file /usr/sbin/src/SketchSolver/cegis
searching for file /usr/sbin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/sbin/../sketch-backend/bindings/cegis
searching for file /sbin/cegis
searching for file /sbin/src/SketchSolver/cegis
searching for file /sbin/../sketch-backend/src/SketchSolver/cegis
searching for file /sbin/../sketch-backend/bindings/cegis
searching for file /usr/local/bin/cegis
searching for file /usr/local/bin/src/SketchSolver/cegis
searching for file /usr/local/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/local/bin/../sketch-backend/bindings/cegis
searching for file /Applications/Racket v6.10/bin/cegis
searching for file /Applications/Racket v6.10/bin/src/SketchSolver/cegis
searching for file /Applications/Racket v6.10/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /Applications/Racket v6.10/bin/../sketch-backend/bindings/cegis
searching for file /Library/TeX/texbin/cegis
searching for file /Library/TeX/texbin/src/SketchSolver/cegis
searching for file /Library/TeX/texbin/../sketch-backend/src/SketchSolver/cegis
searching for file /Library/TeX/texbin/../sketch-backend/bindings/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/src/SketchSolver/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/../sketch-backend/src/SketchSolver/cegis
resolved cegis to path /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis
[SATBackend] Launching: /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis --bnd-inbits 5 --boundmode CALLNAME --verbosity 16 --print-version -simiters 4 --assumebcheck --bnd-inline-amnt 2 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /Users/kathymariano/Research/java-sketch2/test/axioms/examples/PasswordManager/sketch_final/tmp/sk_PasswordManagerTest/solution0-0 /Users/kathymariano/Research/java-sketch2/test/axioms/examples/PasswordManager/sketch_final/tmp/sk_PasswordManagerTest/input0.tmp 
Overriding inputs with 5
boundmode = CALLNAME
assuming  bounds checks
SOLVER RAND SEED = 1523665341
 optimization level = 6
Reading SKETCH Program in File /Users/kathymariano/Research/java-sketch2/test/axioms/examples/PasswordManager/sketch_final/tmp/sk_PasswordManagerTest/input0.tmp
CREATING main_int_int_int_int_int__Wrapper_PasswordManagerTest
size = 9
after ba size = 9
CREATING main_int_int_int_int_int__WrapperNospec_PasswordManagerTest
size = 5
after ba size = 5
CREATING main_int_int_int_int_int0_PasswordManagerTest
size = 1311
after ba size = 1311
CREATING Object_meta
size = 3
after ba size = 3
CREATING Object_Object_Object
size = 38
after ba size = 38
CREATING toString_int_Integer
size = 3958
after ba size = 3958
CREATING PasswordManager_meta
size = 3
after ba size = 3
CREATING PasswordManager_PasswordManager_String_PasswordManager
size = 142
after ba size = 142
CREATING addPassword_String_String_PasswordManager
size = 342
after ba size = 342
CREATING getPass_String_PasswordManager
size = 250
after ba size = 250
CREATING String_meta
size = 3
after ba size = 3
CREATING equals_Object_String
Found Cycle of size 5; Breaking.
size = 1616
after ba size = 1616
CREATING modifyPassword_String_String_PasswordManager
size = 342
after ba size = 342
CREATING Wrap_Array_char_array
size = 48
after ba size = 48
CREATING String_String_char_int_int_String
size = 1170
after ba size = 1170
CREATING Cryptographer_meta
size = 3
after ba size = 3
CREATING Cryptographer_Cryptographer_Cryptographer
size = 1040
after ba size = 1040
CREATING PasswordMap_meta
size = 3
after ba size = 3
CREATING PasswordMap_PasswordMap_PasswordMap
size = 255
after ba size = 255
CREATING encrypt_String_Cryptographer
Found Cycle of size 12; Breaking.
size = 1733
after ba size = 1733
CREATING add_String_String_PasswordMap
size = 238
after ba size = 238
CREATING get_String_PasswordMap
size = 92
after ba size = 92
CREATING decrypt_String_Cryptographer
Found Cycle of size 29; Breaking.
size = 1690
after ba size = 1690
CREATING length_String
size = 45
after ba size = 45
CREATING Array_meta
size = 3
after ba size = 3
CREATING SecureRandom_SecureRandom_SecureRandom
size = 48
after ba size = 48
CREATING SecureRandom_meta
size = 3
after ba size = 3
CREATING nextBytes_Object_Object_SecureRandom
size = 54
after ba size = 54
CREATING SecretKeySpec_SecretKeySpec_SecretKeySpec
size = 48
after ba size = 48
CREATING IvParameterSpec_meta
size = 3
after ba size = 3
CREATING IvParameterSpec_IvParameterSpec_byte_IvParameterSpec
size = 39
after ba size = 39
CREATING Cipher_Cipher_Cipher
size = 48
after ba size = 48
CREATING Cipher_meta
size = 3
after ba size = 3
CREATING init_Object_int_Object_Object_Cipher
size = 57
after ba size = 57
CREATING initb_Object_int_Object_Object_Cipher
size = 57
after ba size = 57
CREATING Mac_Mac_Mac
size = 48
after ba size = 48
CREATING Mac_meta
size = 3
after ba size = 3
CREATING init_Object_SecretKeySpec_Mac
size = 54
after ba size = 54
CREATING initb_Object_SecretKeySpec_Mac
size = 55
after ba size = 55
CREATING HashMap_HashMap_HashMap
size = 48
after ba size = 48
CREATING getBytes_String
size = 106
after ba size = 106
CREATING doFinal_Object_Object_Cipher
size = 55
after ba size = 55
CREATING doFinalb_Object_Object_Cipher
size = 55
after ba size = 55
CREATING xform_doFinal_Cipher_Object_Cipher
Found Cycle of size 13; Breaking.
Found Cycle of size 51; Breaking.
Found Cycle of size 48; Breaking.
Found Cycle of size 55; Breaking.
Found Cycle of size 55; Breaking.
Found Cycle of size 61; Breaking.
Found Cycle of size 57; Breaking.
Found Cycle of size 50; Breaking.
Found Cycle of size 53; Breaking.
Found Cycle of size 52; Breaking.
Found Cycle of size 47; Breaking.
Found Cycle of size 45; Breaking.
Found Cycle of size 30; Breaking.
Found Cycle of size 41; Breaking.
Found Cycle of size 47; Breaking.
Found Cycle of size 43; Breaking.
Found Cycle of size 27; Breaking.
Found Cycle of size 28; Breaking.
Found Cycle of size 35; Breaking.
Found Cycle of size 50; Breaking.
Found Cycle of size 54; Breaking.
Found Cycle of size 19; Breaking.
Found Cycle of size 25; Breaking.
Found Cycle of size 25; Breaking.
Found Cycle of size 11; Breaking.
size = 4179
after ba size = 4179
CREATING toString_Object_Cipher
size = 53
after ba size = 53
CREATING HashMap_meta
size = 3
after ba size = 3
CREATING put_Object_Object_Object_HashMap
size = 55
after ba size = 55
CREATING putb_Object_Object_Object_HashMap
size = 56
after ba size = 56
CREATING xform_get_HashMap_Object_HashMap
size = 3832
after ba size = 3832
CREATING String_String_byte_String
size = 1172
after ba size = 1172
CREATING SecretKeySpec_meta
size = 3
after ba size = 3
CREATING toString_String
size = 38
after ba size = 38
CREATING getBytes_String_String
Found Cycle of size 25; Breaking.
size = 2897
after ba size = 2897
CREATING Boolean_meta
size = 3
after ba size = 3
CREATING equals_Object_Object
size = 46
after ba size = 46
CREATING Integer_meta
size = 3
after ba size = 3
CREATING equals_Object_Integer
Found Cycle of size 5; Breaking.
size = 101
after ba size = 101
CREATING Byte_meta
size = 3
after ba size = 3
CREATING ArrayList_meta
size = 3
after ba size = 3
CREATING Character_meta
size = 3
after ba size = 3
CREATING equals_Object_Character
Found Cycle of size 5; Breaking.
size = 101
after ba size = 101
CREATING Assert_meta
size = 3
after ba size = 3
CREATING PasswordManagerTest_meta
size = 3
after ba size = 3
CREATING charAt_int_String
size = 116
after ba size = 116
CREATING intValue_Integer
size = 45
after ba size = 45
CREATING charValue_Character
size = 45
after ba size = 45
* before  EVERYTHING: main_int_int_int_int_int__WrapperNospec_PasswordManagerTest::SPEC nodes = 5	 main_int_int_int_int_int__Wrapper_PasswordManagerTest::SKETCH nodes = 9
 INBITS = 5
 CBITS  = 5
 input_ints = 5 	 input_bits = 0
 Inlining amount = 2
 Inlining functions in the sketch.
inlined 1 new size =1069
Found Cycle of size 35; Breaking.
Found Cycle of size 29; Breaking.
Found Cycle of size 27; Breaking.
inlined 57 new size =26590
Found Cycle of size 107; Breaking.
inlined 70 new size =28038
Found Cycle of size 230; Breaking.
Found Cycle of size 219; Breaking.
Found Cycle of size 175; Breaking.
Found Cycle of size 175; Breaking.
Found Cycle of size 234; Breaking.
Found Cycle of size 125; Breaking.
Found Cycle of size 122; Breaking.
Found Cycle of size 156; Breaking.
Found Cycle of size 226; Breaking.
Found Cycle of size 85; Breaking.
Found Cycle of size 82; Breaking.
Found Cycle of size 85; Breaking.
Found Cycle of size 159; Breaking.
Found Cycle of size 86; Breaking.
Found Cycle of size 147; Breaking.
Found Cycle of size 149; Breaking.
Found Cycle of size 219; Breaking.
Found Cycle of size 143; Breaking.
Found Cycle of size 55; Breaking.
inlined 111 new size =86286
Found Cycle of size 148; Breaking.
Found Cycle of size 154; Breaking.
Found Cycle of size 168; Breaking.
Found Cycle of size 113; Breaking.
Found Cycle of size 133; Breaking.
Found Cycle of size 108; Breaking.
Found Cycle of size 122; Breaking.
Found Cycle of size 169; Breaking.
Found Cycle of size 169; Breaking.
Found Cycle of size 159; Breaking.
Found Cycle of size 130; Breaking.
Found Cycle of size 126; Breaking.
Found Cycle of size 156; Breaking.
Found Cycle of size 122; Breaking.
Found Cycle of size 152; Breaking.
Found Cycle of size 145; Breaking.
Found Cycle of size 108; Breaking.
Found Cycle of size 96; Breaking.
Found Cycle of size 94; Breaking.
inlined 744 new size =167390
Found Cycle of size 156; Breaking.
inlined 722 new size =133144
inlined 29 new size =133055
inlined 0 new size =133055
END OF STEP 0
 Inlining functions in the spec.
inlined 0 new size =5
END OF STEP 0
Bailing out
after Creating Miter: Problem nodes = 108817
* Final Problem size: Problem nodes = 108811
  # OF CONTROLS:    24
 control_ints = 8 	 control_bits = 16
inputSize = 10	ctrlSize = 72
Random seeds = 1
!+ 000010001001010101011001010100000000000001001010001001010000100000000010
!+ H__3_156:0
H__0_156:0
H__5_156:0
H__4_156:0
H__1_156:17
H__2_156:85
H__4_156_155:0
H__3_156_155:1
H__0_156_155:1
H__1_156_155:84
H__2_156_155:0
H__5_159:0
H__4_159:0
H__3_159:0
H__0_159:0
H__1_159:36
H__2_159:17
H__4_159_155:1
H__3_159_155:0
H__0_159_155:1
H__1_159_155:16
H__2_159_155:0
H__5_156_155_156_155:1
H__5_159_155_159_155:0

BEG CHECK
 * After optims it became = 27406 was 108811
Assert at String.sk:23 (1)
Simulation found a cex by random testing:  0.021 ms 
END CHECK
********  0	ftime= 0	ctime= 0.301
!% 1011011010
!% __u_5_52_0:1
__w_6_53_0:3
__x_7_54_0:2
__y_8_55_0:1
__z_9_56_0:1

BEG FIND
Level 1  intsize = 2
 * After optims it became = 101765 was 108811
 * After all optims it became = 101765
 finder  hits = 10067	 bstoreObjs=33668	 sstorePages=32
hitcount 	0	27860	4
hitcount 	1	4850	5
hitcount 	2	190	4
hitcount 	3	409	4
hitcount 	4	135	4
hitcount 	5	74	4
hitcount 	6	19	4
hitcount 	7	13	5
hitcount 	8	7	3
hitcount 	9	20	5
hitcount 	11	3	5
hitcount 	14	18	4
hitcount 	15	4	4
hitcount 	16	4	4
hitcount 	25	6	5
hitcount 	27	38	4
hitcount 	30	5	2
hitcount 	32	3	1
hitcount 	36	3	3
hitcount 	38	2	2
hitcount 	44	1	5
hitcount 	46	1	4
hitcount 	49	2	4
hitcount 	56	1	5
bucketsPerDepth 	5	19
bucketsPerDepth 	6	92
bucketsPerDepth 	7	227
bucketsPerDepth 	8	290
bucketsPerDepth 	9	222
bucketsPerDepth 	10	93
bucketsPerDepth 	11	48
bucketsPerDepth 	12	20
bucketsPerDepth 	13	10
bucketsPerDepth 	14	3
* TIME TO ADD INPUT :  25999.9 ms 
DECISIONS START = 0
f# %assign: 5 clauses: 95185 learn: 3 restart: 1 decision: 1062 propagated: 36030
END FIND
!+ 011000000001000000010000000000000000101000000001000000100000000000000000
!+ H__3_156:0
H__0_156:1
H__5_156:1
H__4_156:0
H__1_156:0
H__2_156:1
H__4_156_155:0
H__3_156_155:1
H__0_156_155:0
H__1_156_155:0
H__2_156_155:0
H__5_159:0
H__4_159:1
H__3_159:0
H__0_159:1
H__1_159:0
H__2_159:2
H__4_159_155:0
H__3_159_155:1
H__0_159_155:0
H__1_159_155:0
H__2_159_155:0
H__5_156_155_156_155:0
H__5_159_155_159_155:0

BEG CHECK
 * After optims it became = 52332 was 108811
 TESTING HYPOTHESIS ITER 1
h = 36  hasserts.size()= 6
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= __w_6_53_0 == __y_8_55_0 
29= 28 ! 
30= 27 ! 
31= [27]$(!28), (!27), $
32= __x_7_54_0 == __z_9_56_0 
33= 32 ! 
34= 31 & (!32) 
35= Assume 34 : Assume at Passwor..erTest.sk:20
36= __u_5_52_0 == (0) 
37= 36 ! 
38= ASSERT (!36) : 
}
SLICE SIZE = 39
c# %assign: 29 clauses: 46 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 36= __u_5_52_0 == (0)  = 0
 reduced size from 52332 to 52304
 TESTING HYPOTHESIS ITER 2
h = 45  hasserts.size()= 6
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= __w_6_53_0 == __y_8_55_0 
29= 28 ! 
30= 27 ! 
31= [27]$(!28), (!27), $
32= __x_7_54_0 == __z_9_56_0 
33= 32 ! 
34= 31 & (!32) 
35= Assume 34 : Assume at Passwor..erTest.sk:20
36= (10)
37= __u_5_52_0 / (10) 
38= (0)
39= 37 == (0) 
40= ASSERT 39 : 
}
SLICE SIZE = 41
c# %assign: 41 clauses: 52 learn: 0 restart: 0 decision: 0 propagated: 15
 FOUND CONST: 45= __u_5_52_0 / (10)  = 0
 reduced size from 52304 to 51737
 TESTING HYPOTHESIS ITER 3
h = 145  hasserts.size()= 6
SLICE SIZE = 114
c# %assign: 29 clauses: 46 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 145= 144[121] = 1
 reduced size from 51737 to 51645
 TESTING HYPOTHESIS ITER 4
h = 10435  hasserts.size()= 6
SLICE SIZE = 306
c# %assign: 29 clauses: 46 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 10435= 424==0 ? (238):(453) = 453
 reduced size from 51645 to 51572
 * Simulation optimized it to = 51572
Simulation didn't find a cex:  999.687 ms 
After all optim
DECISIONS START = 0
c# %assign: 84 clauses: 12748 learn: 26 restart: 1 decision: 169 propagated: 21933
CONTROL: growing l=2 inputs to size 3
 TESTING HYPOTHESIS ITER 1
h = 36  hasserts.size()= 6
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= __w_6_53_0 == __y_8_55_0 
29= 28 ! 
30= 27 ! 
31= [27]$(!28), (!27), $
32= __x_7_54_0 == __z_9_56_0 
33= 32 ! 
34= 31 & (!32) 
35= Assume 34 : Assume at Passwor..erTest.sk:20
36= __u_5_52_0 == (0) 
37= 36 ! 
38= ASSERT (!36) : 
}
SLICE SIZE = 39
c# %assign: 17 clauses: 82 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 36= __u_5_52_0 == (0)  = 0
 reduced size from 52332 to 52304
 TESTING HYPOTHESIS ITER 2
h = 45  hasserts.size()= 6
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= __w_6_53_0 == __y_8_55_0 
29= 28 ! 
30= 27 ! 
31= [27]$(!28), (!27), $
32= __x_7_54_0 == __z_9_56_0 
33= 32 ! 
34= 31 & (!32) 
35= Assume 34 : Assume at Passwor..erTest.sk:20
36= (10)
37= __u_5_52_0 / (10) 
38= (0)
39= 37 == (0) 
40= ASSERT 39 : 
}
SLICE SIZE = 41
c# %assign: 35 clauses: 100 learn: 0 restart: 0 decision: 0 propagated: 23
 FOUND CONST: 45= __u_5_52_0 / (10)  = 0
 reduced size from 52304 to 51737
 TESTING HYPOTHESIS ITER 3
h = 145  hasserts.size()= 6
SLICE SIZE = 114
c# %assign: 17 clauses: 82 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 145= 144[121] = 1
 reduced size from 51737 to 51645
 TESTING HYPOTHESIS ITER 4
h = 10435  hasserts.size()= 6
SLICE SIZE = 306
c# %assign: 17 clauses: 82 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 10435= 424==0 ? (238):(453) = 453
 reduced size from 51645 to 51572
 * Simulation optimized it to = 51572
Simulation didn't find a cex:  999.935 ms 
After all optim
DECISIONS START = 0
c# %assign: 73 clauses: 18428 learn: 29 restart: 1 decision: 340 propagated: 27155
CONTROL: growing l=2 inputs to size 4
 TESTING HYPOTHESIS ITER 1
h = 36  hasserts.size()= 6
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= __w_6_53_0 == __y_8_55_0 
29= 28 ! 
30= 27 ! 
31= [27]$(!28), (!27), $
32= __x_7_54_0 == __z_9_56_0 
33= 32 ! 
34= 31 & (!32) 
35= Assume 34 : Assume at Passwor..erTest.sk:20
36= __u_5_52_0 == (0) 
37= 36 ! 
38= ASSERT (!36) : 
}
SLICE SIZE = 39
c# %assign: 10 clauses: 154 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 36= __u_5_52_0 == (0)  = 0
 reduced size from 52332 to 52304
 TESTING HYPOTHESIS ITER 2
h = 56  hasserts.size()= 6
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= __w_6_53_0 == __y_8_55_0 
29= 28 ! 
30= 27 ! 
31= [27]$(!28), (!27), $
32= __x_7_54_0 == __z_9_56_0 
33= 32 ! 
34= 31 & (!32) 
35= Assume 34 : Assume at Passwor..erTest.sk:20
36= (10)
37= __u_5_52_0 / (10) 
38= 37 / (10) 
39= (0)
40= 38 == (0) 
41= ASSERT 40 : 
}
SLICE SIZE = 42
c# %assign: 9 clauses: 193 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 56= 45 / (10)  = 0
 reduced size from 52304 to 51770
 TESTING HYPOTHESIS ITER 3
h = 10560  hasserts.size()= 6
SLICE SIZE = 342
c# %assign: 9 clauses: 193 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 10560= 545==0 ? (238):(453) = 453
 reduced size from 51770 to 51697
 TESTING HYPOTHESIS ITER 4
h = 36  hasserts.size()= 6
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= __w_6_53_0 == __y_8_55_0 
29= 28 ! 
30= 27 ! 
31= [27]$(!28), (!27), $
32= __x_7_54_0 == __z_9_56_0 
33= 32 ! 
34= 31 & (!32) 
35= Assume 34 : Assume at Passwor..erTest.sk:20
36= 2 ! 
37= (!2) ! 
38= ASSERT (!(!2)) : 
}
SLICE SIZE = 39
c# %assign: 10 clauses: 154 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 36= 4 !  = 0
 reduced size from 51697 to 51695
 * Simulation optimized it to = 51695
Simulation didn't find a cex:  1999.73 ms 
After all optim
DECISIONS START = 0
c# %assign: 92 clauses: 2927 learn: 23 restart: 2 decision: 550 propagated: 162253
CONTROL: growing l=2 inputs to size 5
 TESTING HYPOTHESIS ITER 1
h = 36  hasserts.size()= 6
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= __w_6_53_0 == __y_8_55_0 
29= 28 ! 
30= 27 ! 
31= [27]$(!28), (!27), $
32= __x_7_54_0 == __z_9_56_0 
33= 32 ! 
34= 31 & (!32) 
35= Assume 34 : Assume at Passwor..erTest.sk:20
36= __u_5_52_0 == (0) 
37= 36 ! 
38= ASSERT (!36) : 
}
SLICE SIZE = 39
c# %assign: 5 clauses: 298 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 36= __u_5_52_0 == (0)  = 0
 reduced size from 52332 to 52304
 TESTING HYPOTHESIS ITER 2
h = 56  hasserts.size()= 6
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= __w_6_53_0 == __y_8_55_0 
29= 28 ! 
30= 27 ! 
31= [27]$(!28), (!27), $
32= __x_7_54_0 == __z_9_56_0 
33= 32 ! 
34= 31 & (!32) 
35= Assume 34 : Assume at Passwor..erTest.sk:20
36= (10)
37= __u_5_52_0 / (10) 
38= 37 / (10) 
39= (0)
40= 38 == (0) 
41= ASSERT 40 : 
}
SLICE SIZE = 42
c# %assign: 32 clauses: 389 learn: 0 restart: 0 decision: 0 propagated: 69
 FOUND CONST: 56= 45 / (10)  = 0
 reduced size from 52304 to 51770
 TESTING HYPOTHESIS ITER 3
h = 10560  hasserts.size()= 6
SLICE SIZE = 342
c# %assign: 5 clauses: 380 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 10560= 545==0 ? (238):(453) = 453
 reduced size from 51770 to 51697
 TESTING HYPOTHESIS ITER 4
h = 29  hasserts.size()= 5
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= 27 ! 
29= ASSERT (!27) : 
}
SLICE SIZE = 30
DECISIONS START = 0
c# %assign: 3 clauses: 69 learn: 0 restart: 1 decision: 122 propagated: 188
 TESTING HYPOTHESIS ITER 4
h = 36  hasserts.size()= 6
dagmain_int_int_int_int_int__WrapperNospec_PasswordManagerTest{
0= (0)
__u_5_52_0
2= (0) < __u_5_52_0 
3= (100)
4= __u_5_52_0 < (100) 
5= 2 & 4 
6= Assume 5 : Assume at Passwor..erTest.sk:15
__w_6_53_0
8= (0) < __w_6_53_0 
9= __w_6_53_0 < (100) 
10= 8 & 9 
11= Assume 10 : Assume at Passwor..erTest.sk:16
__x_7_54_0
13= (0) < __x_7_54_0 
14= __x_7_54_0 < (100) 
15= 13 & 14 
16= Assume 15 : Assume at Passwor..erTest.sk:17
__y_8_55_0
18= (0) < __y_8_55_0 
19= __y_8_55_0 < (100) 
20= 18 & 19 
21= Assume 20 : Assume at Passwor..erTest.sk:18
__z_9_56_0
23= (0) < __z_9_56_0 
24= __z_9_56_0 < (100) 
25= 23 & 24 
26= Assume 25 : Assume at Passwor..erTest.sk:19
27= __u_5_52_0 == __w_6_53_0 
28= __w_6_53_0 == __y_8_55_0 
29= 28 ! 
30= 27 ! 
31= [27]$(!28), (!27), $
32= __x_7_54_0 == __z_9_56_0 
33= 32 ! 
34= 31 & (!32) 
35= Assume 34 : Assume at Passwor..erTest.sk:20
36= 2 ! 
37= (!2) ! 
38= ASSERT (!(!2)) : 
}
SLICE SIZE = 39
c# %assign: 5 clauses: 298 learn: 0 restart: 0 decision: 0 propagated: 11
 FOUND CONST: 36= 4 !  = 0
 reduced size from 51697 to 51695
 * Simulation optimized it to = 51695
Simulation didn't find a cex:  1000.07 ms 
After all optim
DECISIONS START = 0
c# %assign: 91 clauses: 3882 learn: 49 restart: 2 decision: 1187 propagated: 289135
END CHECK
********  1	ftime= 25999.9	ctime= 41000
 *GOT THE CORRECT ANSWER IN 2 iterations.
 *FIND TIME 25999.9 CHECK TIME 41000.3 TOTAL TIME 67000.2
VALUES H__0_156: 1, H__0_156_155: 0, H__0_159: 1, H__0_159_155: 0, H__1_156: 0, H__1_156_155: 0, H__1_159: 0, H__1_159_155: 0, H__2_156: 1, H__2_156_155: 0, H__2_159: 2, H__2_159_155: 0, H__3_156: 0, H__3_156_155: 1, H__3_159: 0, H__3_159_155: 1, H__4_156: 0, H__4_156_155: 0, H__4_159: 1, H__4_159_155: 0, H__5_156: 1, H__5_156_155_156_155: 0, H__5_159: 0, H__5_159_155_159_155: 0, 
RESULT = 2  
**ROUND 0 : 0 Round time:  69000.4 ms 
RNDDEG = -1
return 0

----- Statistics -----
Total elapsed time (ms):  70000.1
Model building time (ms): 999.653
Solution time (ms):       69000.4
Max virtual mem (bytes):  0
Max resident mem (bytes): 0
Max private mem (bytes):  0
ALL CORRECT
[SATBackend] Stats for last run:
      [solution stats]
      successful? ---------------------> true
      elapsed time (s) ----------------> 70.343
      model building time (s) ---------> 0.999
      solution time (s) ---------------> 69.0
      max memory usage (MiB) ----------> 0.0
      [SAT-specific solution stats]
      initial number of nodes ---------> -1
      number of nodes after opts ------> -1
      number of controls --------------> -1
      total number of control bits ----> -1

[SATBackend] Solver exit value: 0
[SATBackend] Not Deleting
/* BEGIN PACKAGE Cryptographer*/
package Cryptographer{
  /*Cryptographer.sk:3*/
  
void Cryptographer_Cryptographer (Object self, ref Object _out)/*Cryptographer.sk:3*/
  {
    Object@Object random_s68 = null;
    SecureRandom_SecureRandom@SecureRandom(random_s68);
    Object@Object randomKey_s70 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=16)), randomKey_s70);
    int _out_s72 = 0;
    SecureRandom@meta(_out_s72);
    if((random_s68.__cid) == (new Object@Object(__cid=-2, _int=_out_s72)._int))/*Cryptographer.sk:6*/
    {
      Object@Object _out_s75 = null;
      nextBytes_Object_Object@SecureRandom(random_s68, randomKey_s70, _out_s75);
    }
    Object@Object _out_s77 = null;
    SecretKeySpec_SecretKeySpec@SecretKeySpec(_out_s77);
    self.GCMSecretKey_Cryptographer = _out_s77;
    Object@Object _out_s79 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=16)), _out_s79);
    self.randomIv_Cryptographer = _out_s79;
    int _out_s81 = 0;
    SecureRandom@meta(_out_s81);
    if((random_s68.__cid) == (new Object@Object(__cid=-2, _int=_out_s81)._int))/*Cryptographer.sk:9*/
    {
      Object@Object _out_s84 = null;
      nextBytes_Object_Object@SecureRandom(random_s68, self.randomIv_Cryptographer, _out_s84);
    }
    int _out_s86 = 0;
    IvParameterSpec@meta(_out_s86);
    Object@Object _out_s88 = null;
    IvParameterSpec_IvParameterSpec_byte@IvParameterSpec(new Object@Object(__cid=_out_s86), self.randomIv_Cryptographer, _out_s88)//{};
    self.ivParameterSpec_Cryptographer = _out_s88;
    Object@Object _out_s90 = null;
    Cipher_Cipher@Cipher(_out_s90);
    self.myCypherOut_Cryptographer = _out_s90;
    int _out_s92 = 0;
    Cipher@meta(_out_s92);
    if((self.myCypherOut_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=_out_s92)._int))/*Cryptographer.sk:12*/
    {
      Object@Object _out_s94 = null;
      init_Object_int_Object_Object@Cipher(self.myCypherOut_Cryptographer, new Object@Object(__cid=-2, _int=2), self.GCMSecretKey_Cryptographer, self.ivParameterSpec_Cryptographer, _out_s94);
    }
    int _out_s96 = 0;
    Cipher@meta(_out_s96);
    Object@Object _pac_sc_s97 = null;
    if((self.myCypherOut_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=_out_s96)._int))/*Cryptographer.sk:13*/
    {
      Object@Object _out_s99 = null;
      initb_Object_int_Object_Object@Cipher(self.myCypherOut_Cryptographer, new Object@Object(__cid=-2, _int=2), self.GCMSecretKey_Cryptographer, self.ivParameterSpec_Cryptographer, _out_s99);
      _pac_sc_s97 = _out_s99;
    }
    else
    {
      _pac_sc_s97 = null;
    }
    self.myCypherOut_Cryptographer = _pac_sc_s97;
    int secret_s101 = 0;
    String@meta(secret_s101);
    Object@Object secret_s103 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=7), A={'s','e','c','r','e','t','\0'}), secret_s103);
    Object@Object secret_s105 = null;
    String_String_char_int_int@String(new Object@Object(__cid=secret_s101), secret_s103, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=6), secret_s105)//{};
    Object@Object _out_s107 = null;
    Mac_Mac@Mac(_out_s107);
    self.sha256_HMAC_Cryptographer = _out_s107;
    Object@Object _out_s109 = null;
    SecretKeySpec_SecretKeySpec@SecretKeySpec(_out_s109);
    self.Hash_secret_key_Cryptographer = _out_s109;
    int _out_s111 = 0;
    Mac@meta(_out_s111);
    if((self.sha256_HMAC_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=_out_s111)._int))/*Cryptographer.sk:17*/
    {
      Object@Object _out_s113 = null;
      init_Object_SecretKeySpec@Mac(self.sha256_HMAC_Cryptographer, self.Hash_secret_key_Cryptographer, _out_s113);
    }
    int _out_s115 = 0;
    Mac@meta(_out_s115);
    Object@Object _pac_sc_s116 = null;
    if((self.sha256_HMAC_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=_out_s115)._int))/*Cryptographer.sk:18*/
    {
      Object@Object _out_s118 = null;
      initb_Object_SecretKeySpec@Mac(self.sha256_HMAC_Cryptographer, self.Hash_secret_key_Cryptographer, _out_s118);
      _pac_sc_s116 = _out_s118;
    }
    else
    {
      _pac_sc_s116 = null;
    }
    self.sha256_HMAC_Cryptographer = _pac_sc_s116;
    self.MAX_LENGTH_PASSWORD_Cryptographer = new Object@Object(__cid=-2, _int=16);
    _out = self;
    return;
  }
  /*Cryptographer.sk:82*/
  
void decrypt_String (Object self, Object plainText, ref Object _out)/*Cryptographer.sk:82*/
  {
    int _out_s28 = 0;
    Cipher@meta(_out_s28);
    if((self.myCypherOut_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=_out_s28)._int))/*Cryptographer.sk:30*/
    {
      Object@Object _out_s30 = null;
      init_Object_int_Object_Object@Cipher(self.myCypherOut_Cryptographer, new Object@Object(__cid=-2, _int=0), self.GCMSecretKey_Cryptographer, self.ivParameterSpec_Cryptographer, _out_s30);
    }
    int _out_s32 = 0;
    Cipher@meta(_out_s32);
    Object@Object _pac_sc_s33 = null;
    if((self.myCypherOut_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=_out_s32)._int))/*Cryptographer.sk:31*/
    {
      Object@Object _out_s35 = null;
      initb_Object_int_Object_Object@Cipher(self.myCypherOut_Cryptographer, new Object@Object(__cid=-2, _int=2), self.GCMSecretKey_Cryptographer, self.ivParameterSpec_Cryptographer, _out_s35);
      _pac_sc_s33 = _out_s35;
    }
    else
    {
      _pac_sc_s33 = null;
    }
    self.myCypherOut_Cryptographer = _pac_sc_s33;
    Object@Object cipherText_s57 = null;
    xform_doFinal_Cipher_Object@Cipher(self.myCypherOut_Cryptographer._cipher, plainText, cipherText_s57);
    int _out_s24 = 0;
    String@meta(_out_s24);
    Object@Object _out_s26 = null;
    String_String_byte@String(new Object@Object(__cid=_out_s24), cipherText_s57, _out_s26)//{};
    _out = _out_s26;
    return;
  }
  /*Cryptographer.sk:77*/
  
void encrypt_String (Object self, Object plainText, ref Object _out)/*Cryptographer.sk:77*/
  {
    int _out_s28 = 0;
    Cipher@meta(_out_s28);
    if((self.myCypherOut_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=_out_s28)._int))/*Cryptographer.sk:30*/
    {
      Object@Object _out_s30 = null;
      init_Object_int_Object_Object@Cipher(self.myCypherOut_Cryptographer, new Object@Object(__cid=-2, _int=0), self.GCMSecretKey_Cryptographer, self.ivParameterSpec_Cryptographer, _out_s30);
    }
    int _out_s32 = 0;
    Cipher@meta(_out_s32);
    Object@Object _pac_sc_s33 = null;
    if((self.myCypherOut_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=_out_s32)._int))/*Cryptographer.sk:31*/
    {
      Object@Object _out_s35 = null;
      initb_Object_int_Object_Object@Cipher(self.myCypherOut_Cryptographer, new Object@Object(__cid=-2, _int=1), self.GCMSecretKey_Cryptographer, self.ivParameterSpec_Cryptographer, _out_s35);
      _pac_sc_s33 = _out_s35;
    }
    else
    {
      _pac_sc_s33 = null;
    }
    self.myCypherOut_Cryptographer = _pac_sc_s33;
    int cipherText_s37 = 0;
    Cipher@meta(cipherText_s37);
    if((self.myCypherOut_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=cipherText_s37)._int))/*Cryptographer.sk:34*/
    {
      int cipherText_s40 = 0;
      String@meta(cipherText_s40);
      Object@Object _pac_sc_s41 = null;
      if((plainText.__cid) == (new Object@Object(__cid=-2, _int=cipherText_s40)._int))/*Cryptographer.sk:34*/
      {
        Object@Object cipherText_s43 = null;
        getBytes@String(plainText, cipherText_s43);
        _pac_sc_s41 = cipherText_s43;
      }
      else
      {
        _pac_sc_s41 = null;
      }
      Object@Object cipherText_s45 = null;
      doFinal_Object_Object@Cipher(self.myCypherOut_Cryptographer, _pac_sc_s41, cipherText_s45)//{};
    }
    int _out_s47 = 0;
    Cipher@meta(_out_s47);
    Object@Object _pac_sc_s48 = null;
    if((self.myCypherOut_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=_out_s47)._int))/*Cryptographer.sk:34*/
    {
      int _out_s50 = 0;
      String@meta(_out_s50);
      Object@Object _pac_sc_s51 = null;
      if((plainText.__cid) == (new Object@Object(__cid=-2, _int=_out_s50)._int))/*Cryptographer.sk:34*/
      {
        Object@Object _out_s53 = null;
        getBytes@String(plainText, _out_s53);
        _pac_sc_s51 = _out_s53;
      }
      else
      {
        _pac_sc_s51 = null;
      }
      Object@Object _out_s55 = null;
      doFinalb_Object_Object@Cipher(self.myCypherOut_Cryptographer, _pac_sc_s51, _out_s55)//{};
      _pac_sc_s48 = _out_s55;
    }
    else
    {
      _pac_sc_s48 = null;
    }
    self.myCypherOut_Cryptographer = _pac_sc_s48;
    int _out_s63 = 0;
    Cipher@meta(_out_s63);
    Object@Object _pac_sc_s64 = null;
    if((self.myCypherOut_Cryptographer.__cid) == (new Object@Object(__cid=-2, _int=_out_s63)._int))/*Cryptographer.sk:79*/
    {
      Object@Object _out_s66 = null;
      toString_Object@Cipher(self.myCypherOut_Cryptographer, _out_s66);
      _pac_sc_s64 = _out_s66;
    }
    else
    {
      _pac_sc_s64 = null;
    }
    _out = _pac_sc_s64;
    return;
  }
  /* END PACKAGE Cryptographer*/
}
/* BEGIN PACKAGE ANONYMOUS*/
/* END PACKAGE ANONYMOUS*/
/* BEGIN PACKAGE Character*/
package Character{
  /*Character.sk:12*/
  
void charValue (Object self, ref Object _out)/*Character.sk:12*/
  {
    _out = self.value_Character;
    return;
  }
  /*Character.sk:16*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*Character.sk:16*/
  {
    int _out_s125 = 0;
    Character@meta(_out_s125);
    if((obj.__cid) == _out_s125)/*Character.sk:17*/
    {
      int _out_s127 = 0;
      Character@meta(_out_s127);
      Object@Object _pac_sc_s128 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=_out_s127)._int))/*Character.sk:18*/
      {
        Object@Object _out_s130 = null;
        charValue@Character(obj, _out_s130);
        _pac_sc_s128 = _out_s130;
      }
      else
      {
        _pac_sc_s128 = null;
      }
      _out = new Object@Object(__cid=-4, _bit=(self.value_Character._char) == (_pac_sc_s128._char));
      return;
    }
    _out = new Object@Object(__cid=-4, _bit=0);
    return;
  }
  /* END PACKAGE Character*/
}
/* BEGIN PACKAGE PasswordManagerTest*/
package PasswordManagerTest{
  /*Passwor..erTest.sk:7*/
  
void main_int_int_int_int_int (int __u, int __w, int __x, int __y, int __z)/*Passwor..erTest.sk:7*/
  {
    Object@Object u;
    u = new Object@Object(__cid=-2, _int=__u);
    Object@Object w;
    w = new Object@Object(__cid=-2, _int=__w);
    Object@Object x;
    x = new Object@Object(__cid=-2, _int=__x);
    Object@Object y;
    y = new Object@Object(__cid=-2, _int=__y);
    Object@Object z;
    z = new Object@Object(__cid=-2, _int=__z);
    int self_s132 = 0;
    Object@meta(self_s132);
    Object@Object self_s134 = null;
    Object_Object@Object(new Object@Object(__cid=self_s132), self_s134)//{};
    Object@Object limit = new Object@Object(__cid=-2, _int=100);
    assume (((u._int) > (new Object@Object(__cid=-2, _int=0)._int)) & ((u._int) < (limit._int))): "Assume at Passwor..erTest.sk:15"; //Assume at Passwor..erTest.sk:15
    assume (((w._int) > (new Object@Object(__cid=-2, _int=0)._int)) & ((w._int) < (limit._int))): "Assume at Passwor..erTest.sk:16"; //Assume at Passwor..erTest.sk:16
    assume (((x._int) > (new Object@Object(__cid=-2, _int=0)._int)) & ((x._int) < (limit._int))): "Assume at Passwor..erTest.sk:17"; //Assume at Passwor..erTest.sk:17
    assume (((y._int) > (new Object@Object(__cid=-2, _int=0)._int)) & ((y._int) < (limit._int))): "Assume at Passwor..erTest.sk:18"; //Assume at Passwor..erTest.sk:18
    assume (((z._int) > (new Object@Object(__cid=-2, _int=0)._int)) & ((z._int) < (limit._int))): "Assume at Passwor..erTest.sk:19"; //Assume at Passwor..erTest.sk:19
    assume ((((u._int) != (w._int)) && ((w._int) != (y._int))) && ((x._int) != (z._int))): "Assume at Passwor..erTest.sk:20"; //Assume at Passwor..erTest.sk:20
    Object@Object p1_s136 = null;
    toString_int@Integer(u, p1_s136);
    Object@Object p2_s138 = null;
    toString_int@Integer(w, p2_s138);
    Object@Object p3_s140 = null;
    toString_int@Integer(x, p3_s140);
    Object@Object p4_s142 = null;
    toString_int@Integer(y, p4_s142);
    Object@Object p5_s144 = null;
    toString_int@Integer(z, p5_s144);
    int pasman_s146 = 0;
    PasswordManager@meta(pasman_s146);
    Object@Object pasman_s148 = null;
    PasswordManager_PasswordManager_String@PasswordManager(new Object@Object(__cid=pasman_s146), p1_s136, pasman_s148)//{};
    int _out_s150 = 0;
    PasswordManager@meta(_out_s150);
    if((pasman_s148.__cid) == (new Object@Object(__cid=-2, _int=_out_s150)._int))/*Passwor..erTest.sk:27*/
    {
      addPassword_String_String@PasswordManager(pasman_s148, p2_s138, p3_s140);
    }
    int _out_s152 = 0;
    PasswordManager@meta(_out_s152);
    if((pasman_s148.__cid) == (new Object@Object(__cid=-2, _int=_out_s152)._int))/*Passwor..erTest.sk:29*/
    {
      addPassword_String_String@PasswordManager(pasman_s148, p4_s142, p5_s144);
    }
    int pass1_s154 = 0;
    PasswordManager@meta(pass1_s154);
    Object@Object _pac_sc_s155 = null;
    if((pasman_s148.__cid) == (new Object@Object(__cid=-2, _int=pass1_s154)._int))/*Passwor..erTest.sk:31*/
    {
      Object@Object pass1_s157 = null;
      getPass_String@PasswordManager(pasman_s148, p2_s138, pass1_s157);
      _pac_sc_s155 = pass1_s157;
    }
    else
    {
      _pac_sc_s155 = null;
    }
    int _out_s159 = 0;
    String@meta(_out_s159);
    Object@Object _pac_sc_s160 = null;
    if((_pac_sc_s155.__cid) == (new Object@Object(__cid=-2, _int=_out_s159)._int))/*Passwor..erTest.sk:32*/
    {
      Object@Object _out_s162 = null;
      equals_Object@String(_pac_sc_s155, p3_s140, _out_s162);
      _pac_sc_s160 = _out_s162;
    }
    else
    {
      _pac_sc_s160 = null;
    }
    assert (_pac_sc_s160._bit); //Assert at Passwor..erTest.sk:32 (0)
    int pass2_s164 = 0;
    PasswordManager@meta(pass2_s164);
    Object@Object _pac_sc_s165 = null;
    if((pasman_s148.__cid) == (new Object@Object(__cid=-2, _int=pass2_s164)._int))/*Passwor..erTest.sk:33*/
    {
      Object@Object pass2_s167 = null;
      getPass_String@PasswordManager(pasman_s148, p4_s142, pass2_s167);
      _pac_sc_s165 = pass2_s167;
    }
    else
    {
      _pac_sc_s165 = null;
    }
    int _out_s169 = 0;
    String@meta(_out_s169);
    Object@Object _pac_sc_s170 = null;
    if((_pac_sc_s165.__cid) == (new Object@Object(__cid=-2, _int=_out_s169)._int))/*Passwor..erTest.sk:34*/
    {
      Object@Object _out_s172 = null;
      equals_Object@String(_pac_sc_s165, p5_s144, _out_s172);
      _pac_sc_s170 = _out_s172;
    }
    else
    {
      _pac_sc_s170 = null;
    }
    assert (_pac_sc_s170._bit); //Assert at Passwor..erTest.sk:34 (0)
    int _out_s174 = 0;
    PasswordManager@meta(_out_s174);
    if((pasman_s148.__cid) == (new Object@Object(__cid=-2, _int=_out_s174)._int))/*Passwor..erTest.sk:35*/
    {
      modifyPassword_String_String@PasswordManager(pasman_s148, p2_s138, p4_s142);
    }
    int pass3_s176 = 0;
    PasswordManager@meta(pass3_s176);
    Object@Object _pac_sc_s177 = null;
    if((pasman_s148.__cid) == (new Object@Object(__cid=-2, _int=pass3_s176)._int))/*Passwor..erTest.sk:37*/
    {
      Object@Object pass3_s179 = null;
      getPass_String@PasswordManager(pasman_s148, p2_s138, pass3_s179);
      _pac_sc_s177 = pass3_s179;
    }
    else
    {
      _pac_sc_s177 = null;
    }
    int _out_s181 = 0;
    String@meta(_out_s181);
    Object@Object _pac_sc_s182 = null;
    if((_pac_sc_s177.__cid) == (new Object@Object(__cid=-2, _int=_out_s181)._int))/*Passwor..erTest.sk:38*/
    {
      Object@Object _out_s184 = null;
      equals_Object@String(_pac_sc_s177, p4_s142, _out_s184);
      _pac_sc_s182 = _out_s184;
    }
    else
    {
      _pac_sc_s182 = null;
    }
    assert (_pac_sc_s182._bit); //Assert at Passwor..erTest.sk:38 (0)
  }
  /*Passwor..erTest.sk:7*/
  
void main_int_int_int_int_int__Wrapper (int __u, int __w, int __x, int __y, int __z)  implements main_int_int_int_int_int__WrapperNospec/*Passwor..erTest.sk:7*/
  {
    main_int_int_int_int_int(__u, __w, __x, __y, __z);
  }
  /*Passwor..erTest.sk:7*/
  
void main_int_int_int_int_int__WrapperNospec (int __u, int __w, int __x, int __y, int __z)/*Passwor..erTest.sk:7*/
  { }
  /* END PACKAGE PasswordManagerTest*/
}
/* BEGIN PACKAGE HashMap*/
package HashMap{
  struct HashMap {
      @Immutable()
  }
  struct Hashmap extends HashMap@HashMap {
      @Immutable()
  }
  struct Put_object_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      Object v;
      @Immutable()
  }
  struct Putb_object_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      Object v;
      @Immutable()
  }
  struct Removeb_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      @Immutable()
  }
  struct Remove_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      @Immutable()
  }
  struct Get_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      @Immutable()
  }
  struct Containskey_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      @Immutable()
  }
  /*HashMap.sk:13*/
  
void HashMap_HashMap (ref Object _out)/*HashMap.sk:13*/
  {
    int _out_s384 = 0;
    HashMap@meta(_out_s384);
    _out = new Object@Object(__cid=_out_s384, _hashmap=new Hashmap());
    return;
  }
  /*HashMap.sk:17*/
  
void put_Object_Object_Object (Object self, Object k, Object v, ref Object _out)/*HashMap.sk:17*/
  {
    int _out_s382 = 0;
    HashMap@meta(_out_s382);
    _out = new Object@Object(__cid=_out_s382, _hashmap=new Put_object_object(self=self._hashmap, k=k, v=v));
    return;
  }
  /*HashMap.sk:21*/
  
void putb_Object_Object_Object (Object self, Object k, Object v, ref Object _out)/*HashMap.sk:21*/
  {
    int _out_s380 = 0;
    HashMap@meta(_out_s380);
    _out = new Object@Object(__cid=_out_s380, _hashmap=new Putb_object_object(self=self._hashmap, k=k, v=v));
    return;
  }
  /*HashMap.sk:101*/
  
void xform_get_HashMap_Object (HashMap self, Object k, ref Object _out)/*HashMap.sk:101*/
  {
    switch(self){/*HashMap.sk:102*/
      case Hashmap:
      {
        _out = null;
        return;
      }
      case Put_object_object:
      {
        int _out_s186 = 0;
        HashMap@meta(_out_s186);
        _out = new Object@Object(__cid=_out_s186, _hashmap=self);
        return;
      }
      case Putb_object_object:
      {
        int _out_s188 = 0;
        Boolean@meta(_out_s188);
        Object@Object _pac_sc_s189 = null;
        if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s188)._int))/*HashMap.sk:108*/
        {
          Object@Object _out_s191 = null;
          equals_Object@Object(k, self.k, _out_s191);
          _pac_sc_s189 = _out_s191;
        }
        else
        {
          int _out_s193 = 0;
          Mac@meta(_out_s193);
          Object@Object _pac_sc_s194 = null;
          if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s193)._int))/*HashMap.sk:108*/
          {
            Object@Object _out_s196 = null;
            equals_Object@Object(k, self.k, _out_s196);
            _pac_sc_s194 = _out_s196;
          }
          else
          {
            int _out_s198 = 0;
            PasswordMap@meta(_out_s198);
            Object@Object _pac_sc_s199 = null;
            if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s198)._int))/*HashMap.sk:108*/
            {
              Object@Object _out_s201 = null;
              equals_Object@Object(k, self.k, _out_s201);
              _pac_sc_s199 = _out_s201;
            }
            else
            {
              int _out_s203 = 0;
              SecretKeySpec@meta(_out_s203);
              Object@Object _pac_sc_s204 = null;
              if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s203)._int))/*HashMap.sk:108*/
              {
                Object@Object _out_s206 = null;
                equals_Object@Object(k, self.k, _out_s206);
                _pac_sc_s204 = _out_s206;
              }
              else
              {
                int _out_s208 = 0;
                IvParameterSpec@meta(_out_s208);
                Object@Object _pac_sc_s209 = null;
                if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s208)._int))/*HashMap.sk:108*/
                {
                  Object@Object _out_s211 = null;
                  equals_Object@Object(k, self.k, _out_s211);
                  _pac_sc_s209 = _out_s211;
                }
                else
                {
                  int _out_s213 = 0;
                  HashMap@meta(_out_s213);
                  Object@Object _pac_sc_s214 = null;
                  if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s213)._int))/*HashMap.sk:108*/
                  {
                    Object@Object _out_s216 = null;
                    equals_Object@Object(k, self.k, _out_s216);
                    _pac_sc_s214 = _out_s216;
                  }
                  else
                  {
                    int _out_s218 = 0;
                    Integer@meta(_out_s218);
                    Object@Object _pac_sc_s219 = null;
                    if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s218)._int))/*HashMap.sk:108*/
                    {
                      Object@Object _out_s221 = null;
                      equals_Object@Integer(k, self.k, _out_s221);
                      _pac_sc_s219 = _out_s221;
                    }
                    else
                    {
                      int _out_s223 = 0;
                      Cryptographer@meta(_out_s223);
                      Object@Object _pac_sc_s224 = null;
                      if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s223)._int))/*HashMap.sk:108*/
                      {
                        Object@Object _out_s226 = null;
                        equals_Object@Object(k, self.k, _out_s226);
                        _pac_sc_s224 = _out_s226;
                      }
                      else
                      {
                        int _out_s228 = 0;
                        Byte@meta(_out_s228);
                        Object@Object _pac_sc_s229 = null;
                        if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s228)._int))/*HashMap.sk:108*/
                        {
                          Object@Object _out_s231 = null;
                          equals_Object@Object(k, self.k, _out_s231);
                          _pac_sc_s229 = _out_s231;
                        }
                        else
                        {
                          int _out_s233 = 0;
                          ArrayList@meta(_out_s233);
                          Object@Object _pac_sc_s234 = null;
                          if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s233)._int))/*HashMap.sk:108*/
                          {
                            Object@Object _out_s236 = null;
                            equals_Object@Object(k, self.k, _out_s236);
                            _pac_sc_s234 = _out_s236;
                          }
                          else
                          {
                            int _out_s238 = 0;
                            Character@meta(_out_s238);
                            Object@Object _pac_sc_s239 = null;
                            if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s238)._int))/*HashMap.sk:108*/
                            {
                              Object@Object _out_s241 = null;
                              equals_Object@Character(k, self.k, _out_s241);
                              _pac_sc_s239 = _out_s241;
                            }
                            else
                            {
                              int _out_s243 = 0;
                              SecureRandom@meta(_out_s243);
                              Object@Object _pac_sc_s244 = null;
                              if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s243)._int))/*HashMap.sk:108*/
                              {
                                Object@Object _out_s246 = null;
                                equals_Object@Object(k, self.k, _out_s246);
                                _pac_sc_s244 = _out_s246;
                              }
                              else
                              {
                                int _out_s248 = 0;
                                Assert@meta(_out_s248);
                                Object@Object _pac_sc_s249 = null;
                                if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s248)._int))/*HashMap.sk:108*/
                                {
                                  Object@Object _out_s251 = null;
                                  equals_Object@Object(k, self.k, _out_s251);
                                  _pac_sc_s249 = _out_s251;
                                }
                                else
                                {
                                  int _out_s253 = 0;
                                  String@meta(_out_s253);
                                  Object@Object _pac_sc_s254 = null;
                                  if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s253)._int))/*HashMap.sk:108*/
                                  {
                                    Object@Object _out_s256 = null;
                                    equals_Object@String(k, self.k, _out_s256);
                                    _pac_sc_s254 = _out_s256;
                                  }
                                  else
                                  {
                                    int _out_s258 = 0;
                                    PasswordManager@meta(_out_s258);
                                    Object@Object _pac_sc_s259 = null;
                                    if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s258)._int))/*HashMap.sk:108*/
                                    {
                                      Object@Object _out_s261 = null;
                                      equals_Object@Object(k, self.k, _out_s261);
                                      _pac_sc_s259 = _out_s261;
                                    }
                                    else
                                    {
                                      int _out_s263 = 0;
                                      Cipher@meta(_out_s263);
                                      Object@Object _pac_sc_s264 = null;
                                      if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s263)._int))/*HashMap.sk:108*/
                                      {
                                        Object@Object _out_s266 = null;
                                        equals_Object@Object(k, self.k, _out_s266);
                                        _pac_sc_s264 = _out_s266;
                                      }
                                      else
                                      {
                                        int _out_s268 = 0;
                                        PasswordManagerTest@meta(_out_s268);
                                        Object@Object _pac_sc_s269 = null;
                                        if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s268)._int))/*HashMap.sk:108*/
                                        {
                                          Object@Object _out_s271 = null;
                                          equals_Object@Object(k, self.k, _out_s271);
                                          _pac_sc_s269 = _out_s271;
                                        }
                                        else
                                        {
                                          int _out_s273 = 0;
                                          Object@meta(_out_s273);
                                          Object@Object _pac_sc_s274 = null;
                                          if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s273)._int))/*HashMap.sk:108*/
                                          {
                                            Object@Object _out_s276 = null;
                                            equals_Object@Object(k, self.k, _out_s276);
                                            _pac_sc_s274 = _out_s276;
                                          }
                                          else
                                          {
                                            _pac_sc_s274 = null;
                                          }
                                          _pac_sc_s269 = _pac_sc_s274;
                                        }
                                        _pac_sc_s264 = _pac_sc_s269;
                                      }
                                      _pac_sc_s259 = _pac_sc_s264;
                                    }
                                    _pac_sc_s254 = _pac_sc_s259;
                                  }
                                  _pac_sc_s249 = _pac_sc_s254;
                                }
                                _pac_sc_s244 = _pac_sc_s249;
                              }
                              _pac_sc_s239 = _pac_sc_s244;
                            }
                            _pac_sc_s234 = _pac_sc_s239;
                          }
                          _pac_sc_s229 = _pac_sc_s234;
                        }
                        _pac_sc_s224 = _pac_sc_s229;
                      }
                      _pac_sc_s219 = _pac_sc_s224;
                    }
                    _pac_sc_s214 = _pac_sc_s219;
                  }
                  _pac_sc_s209 = _pac_sc_s214;
                }
                _pac_sc_s204 = _pac_sc_s209;
              }
              _pac_sc_s199 = _pac_sc_s204;
            }
            _pac_sc_s194 = _pac_sc_s199;
          }
          _pac_sc_s189 = _pac_sc_s194;
        }
        Object@Object _pac_sc_s277 = null;
        if(_pac_sc_s189._bit)/*HashMap.sk:108*/
        {
          _pac_sc_s277 = self.v;
        }
        else
        {
          Object@Object _out_s279 = null;
          xform_get_HashMap_Object(self.self, k, _out_s279);
          _pac_sc_s277 = _out_s279;
        }
        _out = _pac_sc_s277;
        return;
      }
      case Removeb_object:
      {
        int _out_s281 = 0;
        Boolean@meta(_out_s281);
        Object@Object _pac_sc_s282 = null;
        if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s281)._int))/*HashMap.sk:111*/
        {
          Object@Object _out_s284 = null;
          equals_Object@Object(k, self.k, _out_s284);
          _pac_sc_s282 = _out_s284;
        }
        else
        {
          int _out_s286 = 0;
          Mac@meta(_out_s286);
          Object@Object _pac_sc_s287 = null;
          if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s286)._int))/*HashMap.sk:111*/
          {
            Object@Object _out_s289 = null;
            equals_Object@Object(k, self.k, _out_s289);
            _pac_sc_s287 = _out_s289;
          }
          else
          {
            int _out_s291 = 0;
            PasswordMap@meta(_out_s291);
            Object@Object _pac_sc_s292 = null;
            if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s291)._int))/*HashMap.sk:111*/
            {
              Object@Object _out_s294 = null;
              equals_Object@Object(k, self.k, _out_s294);
              _pac_sc_s292 = _out_s294;
            }
            else
            {
              int _out_s296 = 0;
              SecretKeySpec@meta(_out_s296);
              Object@Object _pac_sc_s297 = null;
              if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s296)._int))/*HashMap.sk:111*/
              {
                Object@Object _out_s299 = null;
                equals_Object@Object(k, self.k, _out_s299);
                _pac_sc_s297 = _out_s299;
              }
              else
              {
                int _out_s301 = 0;
                IvParameterSpec@meta(_out_s301);
                Object@Object _pac_sc_s302 = null;
                if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s301)._int))/*HashMap.sk:111*/
                {
                  Object@Object _out_s304 = null;
                  equals_Object@Object(k, self.k, _out_s304);
                  _pac_sc_s302 = _out_s304;
                }
                else
                {
                  int _out_s306 = 0;
                  HashMap@meta(_out_s306);
                  Object@Object _pac_sc_s307 = null;
                  if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s306)._int))/*HashMap.sk:111*/
                  {
                    Object@Object _out_s309 = null;
                    equals_Object@Object(k, self.k, _out_s309);
                    _pac_sc_s307 = _out_s309;
                  }
                  else
                  {
                    int _out_s311 = 0;
                    Integer@meta(_out_s311);
                    Object@Object _pac_sc_s312 = null;
                    if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s311)._int))/*HashMap.sk:111*/
                    {
                      Object@Object _out_s314 = null;
                      equals_Object@Integer(k, self.k, _out_s314);
                      _pac_sc_s312 = _out_s314;
                    }
                    else
                    {
                      int _out_s316 = 0;
                      Cryptographer@meta(_out_s316);
                      Object@Object _pac_sc_s317 = null;
                      if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s316)._int))/*HashMap.sk:111*/
                      {
                        Object@Object _out_s319 = null;
                        equals_Object@Object(k, self.k, _out_s319);
                        _pac_sc_s317 = _out_s319;
                      }
                      else
                      {
                        int _out_s321 = 0;
                        Byte@meta(_out_s321);
                        Object@Object _pac_sc_s322 = null;
                        if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s321)._int))/*HashMap.sk:111*/
                        {
                          Object@Object _out_s324 = null;
                          equals_Object@Object(k, self.k, _out_s324);
                          _pac_sc_s322 = _out_s324;
                        }
                        else
                        {
                          int _out_s326 = 0;
                          ArrayList@meta(_out_s326);
                          Object@Object _pac_sc_s327 = null;
                          if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s326)._int))/*HashMap.sk:111*/
                          {
                            Object@Object _out_s329 = null;
                            equals_Object@Object(k, self.k, _out_s329);
                            _pac_sc_s327 = _out_s329;
                          }
                          else
                          {
                            int _out_s331 = 0;
                            Character@meta(_out_s331);
                            Object@Object _pac_sc_s332 = null;
                            if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s331)._int))/*HashMap.sk:111*/
                            {
                              Object@Object _out_s334 = null;
                              equals_Object@Character(k, self.k, _out_s334);
                              _pac_sc_s332 = _out_s334;
                            }
                            else
                            {
                              int _out_s336 = 0;
                              SecureRandom@meta(_out_s336);
                              Object@Object _pac_sc_s337 = null;
                              if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s336)._int))/*HashMap.sk:111*/
                              {
                                Object@Object _out_s339 = null;
                                equals_Object@Object(k, self.k, _out_s339);
                                _pac_sc_s337 = _out_s339;
                              }
                              else
                              {
                                int _out_s341 = 0;
                                Assert@meta(_out_s341);
                                Object@Object _pac_sc_s342 = null;
                                if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s341)._int))/*HashMap.sk:111*/
                                {
                                  Object@Object _out_s344 = null;
                                  equals_Object@Object(k, self.k, _out_s344);
                                  _pac_sc_s342 = _out_s344;
                                }
                                else
                                {
                                  int _out_s346 = 0;
                                  String@meta(_out_s346);
                                  Object@Object _pac_sc_s347 = null;
                                  if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s346)._int))/*HashMap.sk:111*/
                                  {
                                    Object@Object _out_s349 = null;
                                    equals_Object@String(k, self.k, _out_s349);
                                    _pac_sc_s347 = _out_s349;
                                  }
                                  else
                                  {
                                    int _out_s351 = 0;
                                    PasswordManager@meta(_out_s351);
                                    Object@Object _pac_sc_s352 = null;
                                    if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s351)._int))/*HashMap.sk:111*/
                                    {
                                      Object@Object _out_s354 = null;
                                      equals_Object@Object(k, self.k, _out_s354);
                                      _pac_sc_s352 = _out_s354;
                                    }
                                    else
                                    {
                                      int _out_s356 = 0;
                                      Cipher@meta(_out_s356);
                                      Object@Object _pac_sc_s357 = null;
                                      if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s356)._int))/*HashMap.sk:111*/
                                      {
                                        Object@Object _out_s359 = null;
                                        equals_Object@Object(k, self.k, _out_s359);
                                        _pac_sc_s357 = _out_s359;
                                      }
                                      else
                                      {
                                        int _out_s361 = 0;
                                        PasswordManagerTest@meta(_out_s361);
                                        Object@Object _pac_sc_s362 = null;
                                        if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s361)._int))/*HashMap.sk:111*/
                                        {
                                          Object@Object _out_s364 = null;
                                          equals_Object@Object(k, self.k, _out_s364);
                                          _pac_sc_s362 = _out_s364;
                                        }
                                        else
                                        {
                                          int _out_s366 = 0;
                                          Object@meta(_out_s366);
                                          Object@Object _pac_sc_s367 = null;
                                          if((k.__cid) == (new Object@Object(__cid=-2, _int=_out_s366)._int))/*HashMap.sk:111*/
                                          {
                                            Object@Object _out_s369 = null;
                                            equals_Object@Object(k, self.k, _out_s369);
                                            _pac_sc_s367 = _out_s369;
                                          }
                                          else
                                          {
                                            _pac_sc_s367 = null;
                                          }
                                          _pac_sc_s362 = _pac_sc_s367;
                                        }
                                        _pac_sc_s357 = _pac_sc_s362;
                                      }
                                      _pac_sc_s352 = _pac_sc_s357;
                                    }
                                    _pac_sc_s347 = _pac_sc_s352;
                                  }
                                  _pac_sc_s342 = _pac_sc_s347;
                                }
                                _pac_sc_s337 = _pac_sc_s342;
                              }
                              _pac_sc_s332 = _pac_sc_s337;
                            }
                            _pac_sc_s327 = _pac_sc_s332;
                          }
                          _pac_sc_s322 = _pac_sc_s327;
                        }
                        _pac_sc_s317 = _pac_sc_s322;
                      }
                      _pac_sc_s312 = _pac_sc_s317;
                    }
                    _pac_sc_s307 = _pac_sc_s312;
                  }
                  _pac_sc_s302 = _pac_sc_s307;
                }
                _pac_sc_s297 = _pac_sc_s302;
              }
              _pac_sc_s292 = _pac_sc_s297;
            }
            _pac_sc_s287 = _pac_sc_s292;
          }
          _pac_sc_s282 = _pac_sc_s287;
        }
        Object@Object _pac_sc_s370 = null;
        if(_pac_sc_s282._bit)/*HashMap.sk:111*/
        {
          _pac_sc_s370 = null;
        }
        else
        {
          Object@Object _out_s372 = null;
          xform_get_HashMap_Object(self.self, k, _out_s372);
          _pac_sc_s370 = _out_s372;
        }
        _out = _pac_sc_s370;
        return;
      }
      case Remove_object:
      {
        int _out_s374 = 0;
        HashMap@meta(_out_s374);
        _out = new Object@Object(__cid=_out_s374, _hashmap=self);
        return;
      }
      case Get_object:
      {
        int _out_s376 = 0;
        HashMap@meta(_out_s376);
        _out = new Object@Object(__cid=_out_s376, _hashmap=self);
        return;
      }
      case Containskey_object:
      {
        int _out_s378 = 0;
        HashMap@meta(_out_s378);
        _out = new Object@Object(__cid=_out_s378, _hashmap=self);
        return;
      }
    }
    _out = null;
    return;
  }
  /* END PACKAGE HashMap*/
}
/* BEGIN PACKAGE CharSequence*/
package CharSequence{
  /* END PACKAGE CharSequence*/
}
/* BEGIN PACKAGE ArrayList*/
package ArrayList{
  struct ArrayList {
      @Immutable()
  }
  struct Arraylist extends ArrayList@ArrayList {
      @Immutable()
  }
  struct Add_object extends ArrayList@ArrayList {
      ArrayList self;
      Object e;
      @Immutable()
  }
  struct Addb_object extends ArrayList@ArrayList {
      ArrayList self;
      Object e;
      @Immutable()
  }
  struct Getb_int extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      @Immutable()
  }
  struct Setb_int_object extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      Object e;
      @Immutable()
  }
  struct Get_int extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      @Immutable()
  }
  struct Set_int_object extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      Object e;
      @Immutable()
  }
  struct Ensurecapacity_int extends ArrayList@ArrayList {
      ArrayList self;
      Object n;
      @Immutable()
  }
  struct Size extends ArrayList@ArrayList {
      ArrayList self;
      @Immutable()
  }
  /* END PACKAGE ArrayList*/
}
/* BEGIN PACKAGE PasswordManager*/
package PasswordManager{
  /*Passwor..anager.sk:11*/
  
void PasswordManager_PasswordManager_String (Object self, Object masterPassword, ref Object _out)/*Passwor..anager.sk:11*/
  {
    int _out_s740 = 0;
    Cryptographer@meta(_out_s740);
    Object@Object _out_s742 = null;
    Cryptographer_Cryptographer@Cryptographer(new Object@Object(__cid=_out_s740), _out_s742)//{};
    self.cryptographer_PasswordManager = _out_s742;
    int _out_s744 = 0;
    PasswordMap@meta(_out_s744);
    Object@Object _out_s746 = null;
    PasswordMap_PasswordMap@PasswordMap(new Object@Object(__cid=_out_s744), _out_s746)//{};
    self.passMap_PasswordManager = _out_s746;
    _out = self;
    return;
  }
  /*Passwor..anager.sk:29*/
  
void addPassword_String_String (Object self, Object domain, Object passWord)/*Passwor..anager.sk:29*/
  {
    int PassEncryption_s728 = 0;
    Cryptographer@meta(PassEncryption_s728);
    Object@Object _pac_sc_s729 = null;
    if((self.cryptographer_PasswordManager.__cid) == (new Object@Object(__cid=-2, _int=PassEncryption_s728)._int))/*Passwor..anager.sk:30*/
    {
      Object@Object PassEncryption_s731 = null;
      encrypt_String@Cryptographer(self.cryptographer_PasswordManager, passWord, PassEncryption_s731);
      _pac_sc_s729 = PassEncryption_s731;
    }
    else
    {
      _pac_sc_s729 = null;
    }
    int _out_s733 = 0;
    String@meta(_out_s733);
    Object@Object _pac_sc_s734 = null;
    if((passWord.__cid) == _out_s733)/*Passwor..anager.sk:31*/
    {
      Object@Object _out_s736 = null;
      equals_Object@String(passWord, _pac_sc_s729, _out_s736);
      _pac_sc_s734 = _out_s736;
    }
    else
    {
      _pac_sc_s734 = null;
    }
    assert (!(_pac_sc_s734._bit)); //Assert at Passwor..anager.sk:31 (0)
    int _out_s738 = 0;
    PasswordMap@meta(_out_s738);
    if((self.passMap_PasswordManager.__cid) == (new Object@Object(__cid=-2, _int=_out_s738)._int))/*Passwor..anager.sk:33*/
    {
      add_String_String@PasswordMap(self.passMap_PasswordManager, domain, _pac_sc_s729);
    }
  }
  /*Passwor..anager.sk:51*/
  
void getPass_String (Object self, Object domain, ref Object _out)/*Passwor..anager.sk:51*/
  {
    int PassEncryption_s706 = 0;
    PasswordMap@meta(PassEncryption_s706);
    Object@Object _pac_sc_s707 = null;
    if((self.passMap_PasswordManager.__cid) == (new Object@Object(__cid=-2, _int=PassEncryption_s706)._int))/*Passwor..anager.sk:53*/
    {
      Object@Object PassEncryption_s709 = null;
      get_String@PasswordMap(self.passMap_PasswordManager, domain, PassEncryption_s709);
      _pac_sc_s707 = PassEncryption_s709;
    }
    else
    {
      _pac_sc_s707 = null;
    }
    int _out_s711 = 0;
    Cryptographer@meta(_out_s711);
    Object@Object _pac_sc_s712 = null;
    if((self.cryptographer_PasswordManager.__cid) == (new Object@Object(__cid=-2, _int=_out_s711)._int))/*Passwor..anager.sk:54*/
    {
      Object@Object _out_s714 = null;
      decrypt_String@Cryptographer(self.cryptographer_PasswordManager, _pac_sc_s707, _out_s714);
      _pac_sc_s712 = _out_s714;
    }
    else
    {
      _pac_sc_s712 = null;
    }
    _out = _pac_sc_s712;
    return;
  }
  /*Passwor..anager.sk:37*/
  
void modifyPassword_String_String (Object self, Object domain, Object passWord)/*Passwor..anager.sk:37*/
  {
    int PassEncryption_s716 = 0;
    Cryptographer@meta(PassEncryption_s716);
    Object@Object _pac_sc_s717 = null;
    if((self.cryptographer_PasswordManager.__cid) == (new Object@Object(__cid=-2, _int=PassEncryption_s716)._int))/*Passwor..anager.sk:38*/
    {
      Object@Object PassEncryption_s719 = null;
      encrypt_String@Cryptographer(self.cryptographer_PasswordManager, passWord, PassEncryption_s719);
      _pac_sc_s717 = PassEncryption_s719;
    }
    else
    {
      _pac_sc_s717 = null;
    }
    int _out_s721 = 0;
    String@meta(_out_s721);
    Object@Object _pac_sc_s722 = null;
    if((passWord.__cid) == _out_s721)/*Passwor..anager.sk:39*/
    {
      Object@Object _out_s724 = null;
      equals_Object@String(passWord, _pac_sc_s717, _out_s724);
      _pac_sc_s722 = _out_s724;
    }
    else
    {
      _pac_sc_s722 = null;
    }
    assert (!(_pac_sc_s722._bit)); //Assert at Passwor..anager.sk:39 (0)
    int _out_s726 = 0;
    PasswordMap@meta(_out_s726);
    if((self.passMap_PasswordManager.__cid) == (new Object@Object(__cid=-2, _int=_out_s726)._int))/*Passwor..anager.sk:41*/
    {
      add_String_String@PasswordMap(self.passMap_PasswordManager, domain, _pac_sc_s717);
    }
  }
  /* END PACKAGE PasswordManager*/
}
/* BEGIN PACKAGE SecureRandom*/
package SecureRandom{
  struct SecureRandom {
      @Immutable()
  }
  struct Securerandom extends SecureRandom@SecureRandom {
      @Immutable()
  }
  struct Nextbytes_object extends SecureRandom@SecureRandom {
      SecureRandom self;
      Object k;
      @Immutable()
  }
  /*SecureRandom.sk:8*/
  
void SecureRandom_SecureRandom (ref Object _out)/*SecureRandom.sk:8*/
  {
    int _out_s776 = 0;
    SecureRandom@meta(_out_s776);
    _out = new Object@Object(__cid=_out_s776, _securerandom=new Securerandom());
    return;
  }
  /*SecureRandom.sk:12*/
  
void nextBytes_Object_Object (Object self, Object k, ref Object _out)/*SecureRandom.sk:12*/
  {
    int _out_s774 = 0;
    SecureRandom@meta(_out_s774);
    _out = new Object@Object(__cid=_out_s774, _securerandom=new Nextbytes_object(self=self._securerandom, k=k));
    return;
  }
  /* END PACKAGE SecureRandom*/
}
/* BEGIN PACKAGE String*/
package String{
  /*String.sk:22*/
  
void String_String_byte (Object self, Object bytes, ref Object _out)/*String.sk:22*/
  {
    Object@Object len;
    len = bytes._array_char.length;
    Object@Object _out_s804 = null;
    Wrap_Array_char@array(new Array_char@array(length=len), _out_s804);
    self._value_String = _out_s804;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa1 = (i._int) < (len._int);
    while(__sa1)
    {
      self._value_String._array_char.A[i._int] = new Object@Object(__cid=-3, _char=bytes._array_char.A[i._int])._char;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa1 = (i._int) < (len._int);
    }
    self._count_String = len;
    _out = self;
    return;
  }
  /*String.sk:7*/
  
void String_String_char_int_int (Object self, Object ca, Object offset, Object count, ref Object _out)/*String.sk:7*/
  {
    if(((offset._int) > (new Object@Object(__cid=-2, _int=0)._int)) && ((offset._int) < (ca._array_char.length._int)))/*String.sk:8*/
    {
      Object@Object tmp_s825 = null;
      Wrap_Array_char@array(new Array_char@array(length=count), tmp_s825);
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa0 = (i._int) < (count._int);
      while(__sa0)
      {
        tmp_s825._array_char.A[i._int] = ca._array_char.A[(i._int) + (offset._int)];
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa0 = (i._int) < (count._int);
      }
      self._value_String = tmp_s825;
    }
    else
    {
      self._value_String = ca;
    }
    self._count_String = count;
    _out = self;
    return;
  }
  /*String.sk:43*/
  
void charAt_int (Object self, Object index, ref Object _out)/*String.sk:43*/
  {
    if(((new Object@Object(__cid=-2, _int=0)._int) <= (index._int)) && ((index._int) < (self._count_String._int)))/*String.sk:44*/
    {
      _out = new Object@Object(__cid=-3, _char=self._value_String._array_char.A[index._int]);
      return;
    }
    _out = new Object@Object(__cid=-3, _char='\0');
    return;
  }
  /*String.sk:154*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*String.sk:154*/
  {
    _out = new Object@Object(__cid=-4, _bit=0);
    int _out_s792 = 0;
    String@meta(_out_s792);
    if((obj.__cid) == _out_s792)/*String.sk:156*/
    {
      _out = new Object@Object(__cid=-4, _bit=1);
      int sLen_s794 = 0;
      String@meta(sLen_s794);
      Object@Object _pac_sc_s795 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=sLen_s794)._int))/*String.sk:159*/
      {
        Object@Object sLen_s797 = null;
        length@String(obj, sLen_s797);
        _pac_sc_s795 = sLen_s797;
      }
      else
      {
        _pac_sc_s795 = null;
      }
      int tLen_s799 = 0;
      String@meta(tLen_s799);
      Object@Object _pac_sc_s800 = null;
      if((self.__cid) == (new Object@Object(__cid=-2, _int=tLen_s799)._int))/*String.sk:160*/
      {
        Object@Object tLen_s802 = null;
        length@String(self, tLen_s802);
        _pac_sc_s800 = tLen_s802;
      }
      else
      {
        _pac_sc_s800 = null;
      }
      if((_pac_sc_s795._int) != (_pac_sc_s800._int))/*String.sk:161*/
      {
        _out = new Object@Object(__cid=-4, _bit=0);
      }
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa8 = ((i._int) < (_pac_sc_s795._int)) && ((_out._bit) == (new Object@Object(__cid=-4, _bit=1)._bit));
      while(__sa8)
      {
        if((obj._value_String._array_char.A[i._int]) != (self._value_String._array_char.A[i._int]))/*String.sk:163*/
        {
          _out = new Object@Object(__cid=-4, _bit=0);
        }
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa8 = ((i._int) < (_pac_sc_s795._int)) && ((_out._bit) == (new Object@Object(__cid=-4, _bit=1)._bit));
      }
    }
    return;
  }
  /*String.sk:214*/
  
void getBytes (Object self, ref Object _out)/*String.sk:214*/
  {
    int _out_s806 = 0;
    String@meta(_out_s806);
    Object@Object _pac_sc_s807 = null;
    if((self.__cid) == (new Object@Object(__cid=-2, _int=_out_s806)._int))/*String.sk:215*/
    {
      Object@Object _out_s809 = null;
      toString@String(self, _out_s809);
      _pac_sc_s807 = _out_s809;
    }
    else
    {
      _pac_sc_s807 = null;
    }
    Object@Object _out_s811 = null;
    getBytes_String(_pac_sc_s807, _out_s811)//{};
    _out = _out_s811;
    return;
  }
  /*String.sk:218*/
  
void getBytes_String (Object str, ref Object _out)/*String.sk:218*/
  {
    int len_s813 = 0;
    String@meta(len_s813);
    Object@Object _pac_sc_s814 = null;
    if((str.__cid) == (new Object@Object(__cid=-2, _int=len_s813)._int))/*String.sk:219*/
    {
      Object@Object len_s816 = null;
      length@String(str, len_s816);
      _pac_sc_s814 = len_s816;
    }
    else
    {
      _pac_sc_s814 = null;
    }
    Object@Object bytes_s818 = null;
    Wrap_Array_char@array(new Array_char@array(length=_pac_sc_s814), bytes_s818);
    _out = bytes_s818;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa14 = (i._int) < (_pac_sc_s814._int);
    while(__sa14)
    {
      int _out_s820 = 0;
      String@meta(_out_s820);
      Object@Object _pac_sc_s821 = null;
      if((str.__cid) == (new Object@Object(__cid=-2, _int=_out_s820)._int))/*String.sk:222*/
      {
        Object@Object _out_s823 = null;
        charAt_int@String(str, i, _out_s823);
        _pac_sc_s821 = _out_s823;
      }
      else
      {
        _pac_sc_s821 = null;
      }
      bytes_s818._array_char.A[i._int] = _pac_sc_s821._char;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa14 = (i._int) < (_pac_sc_s814._int);
    }
    return;
  }
  /*String.sk:48*/
  
void length (Object self, ref Object _out)/*String.sk:48*/
  {
    _out = self._count_String;
    return;
  }
  /*String.sk:52*/
  
void toString (Object self, ref Object _out)/*String.sk:52*/
  {
    _out = self;
    return;
  }
  /* END PACKAGE String*/
}
/* BEGIN PACKAGE Mac*/
package Mac{
  struct Mac {
      @Immutable()
  }
  struct Mac_empty extends Mac@Mac {
      @Immutable()
  }
  struct Init_secretkeyspec extends Mac@Mac {
      Mac self;
      Object key;
      @Immutable()
  }
  struct Initb_secretkeyspec extends Mac@Mac {
      Mac self;
      Object key;
      @Immutable()
  }
  struct Dofinal_object extends Mac@Mac {
      Mac self;
      Object text;
      @Immutable()
  }
  /*Mac.sk:10*/
  
void Mac_Mac (ref Object _out)/*Mac.sk:10*/
  {
    int _out_s1010 = 0;
    Mac@meta(_out_s1010);
    _out = new Object@Object(__cid=_out_s1010, _mac=new Mac_empty());
    return;
  }
  /*Mac.sk:14*/
  
void init_Object_SecretKeySpec (Object self, Object key, ref Object _out)/*Mac.sk:14*/
  {
    int _out_s1008 = 0;
    Mac@meta(_out_s1008);
    _out = new Object@Object(__cid=_out_s1008, _mac=new Init_secretkeyspec(self=self._mac, key=key));
    return;
  }
  /*Mac.sk:18*/
  
void initb_Object_SecretKeySpec (Object self, Object key, ref Object _out)/*Mac.sk:18*/
  {
    int _out_s1006 = 0;
    Mac@meta(_out_s1006);
    _out = new Object@Object(__cid=_out_s1006, _mac=new Initb_secretkeyspec(self=self._mac, key=key));
    return;
  }
  /* END PACKAGE Mac*/
}
/* BEGIN PACKAGE Integer*/
package Integer{
  /*Integer.sk:24*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*Integer.sk:24*/
  {
    int _out_s1052 = 0;
    Integer@meta(_out_s1052);
    if((obj.__cid) == _out_s1052)/*Integer.sk:25*/
    {
      int _out_s1054 = 0;
      Integer@meta(_out_s1054);
      Object@Object _pac_sc_s1055 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=_out_s1054)._int))/*Integer.sk:26*/
      {
        Object@Object _out_s1057 = null;
        intValue@Integer(obj, _out_s1057);
        _pac_sc_s1055 = _out_s1057;
      }
      else
      {
        _pac_sc_s1055 = null;
      }
      _out = new Object@Object(__cid=-4, _bit=(self.value_Integer._int) == (_pac_sc_s1055._int));
      return;
    }
    _out = new Object@Object(__cid=-4, _bit=0);
    return;
  }
  /*Integer.sk:12*/
  
void intValue (Object self, ref Object _out)/*Integer.sk:12*/
  {
    _out = self.value_Integer;
    return;
  }
  /*Integer.sk:39*/
  
void toString_int (Object i, ref Object _out)/*Integer.sk:39*/
  {
    if((i._int) == (new Object@Object(__cid=-2, _int=0)._int))/*Integer.sk:40*/
    {
      int _out_s1059 = 0;
      String@meta(_out_s1059);
      Object@Object _out_s1061 = null;
      Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'0','\0'}), _out_s1061);
      Object@Object _out_s1063 = null;
      String_String_char_int_int@String(new Object@Object(__cid=_out_s1059), _out_s1061, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), _out_s1063)//{};
      _out = _out_s1063;
      return;
    }
    Object@Object index = new Object@Object(__cid=-2, _int=0);
    Object@Object temp = i;
    Object@Object j;
    Object@Object ret_s1065 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=32)), ret_s1065);
    Object@Object ret2_s1067 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=32)), ret2_s1067);
    Object@Object nums_s1069 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=10)), nums_s1069);
    nums_s1069._array_char.A[0] = new Object@Object(__cid=-3, _char='0')._char;
    nums_s1069._array_char.A[1] = new Object@Object(__cid=-3, _char='1')._char;
    nums_s1069._array_char.A[2] = new Object@Object(__cid=-3, _char='2')._char;
    nums_s1069._array_char.A[3] = new Object@Object(__cid=-3, _char='3')._char;
    nums_s1069._array_char.A[4] = new Object@Object(__cid=-3, _char='4')._char;
    nums_s1069._array_char.A[5] = new Object@Object(__cid=-3, _char='5')._char;
    nums_s1069._array_char.A[6] = new Object@Object(__cid=-3, _char='6')._char;
    nums_s1069._array_char.A[7] = new Object@Object(__cid=-3, _char='7')._char;
    nums_s1069._array_char.A[8] = new Object@Object(__cid=-3, _char='8')._char;
    nums_s1069._array_char.A[9] = new Object@Object(__cid=-3, _char='9')._char;
    if((i._int) < (new Object@Object(__cid=-2, _int=0)._int))/*Integer.sk:47*/
    {
      temp = new Object@Object(__cid=-2, _int=(i._int) * (-(new Object@Object(__cid=-2, _int=1)._int)));
    }
    bit __sa19 = (temp._int) > (new Object@Object(__cid=-2, _int=0)._int);
    while(__sa19)
    {
      ret_s1065._array_char.A[index._int] = nums_s1069._array_char.A[(temp._int) % (new Object@Object(__cid=-2, _int=10)._int)];
      temp = new Object@Object(__cid=-2, _int=(temp._int) / (new Object@Object(__cid=-2, _int=10)._int));
      index = new Object@Object(__cid=-2, _int=(index._int) + (new Object@Object(__cid=-2, _int=1)._int));
      __sa19 = (temp._int) > (new Object@Object(__cid=-2, _int=0)._int);
    }
    if((i._int) < (new Object@Object(__cid=-2, _int=0)._int))/*Integer.sk:55*/
    {
      ret_s1065._array_char.A[index._int] = new Object@Object(__cid=-3, _char='-')._char;
      index = new Object@Object(__cid=-2, _int=(index._int) + (new Object@Object(__cid=-2, _int=1)._int));
    }
    Object@Object size = index;
    j = new Object@Object(__cid=-2, _int=0);
    bit __sa20 = (j._int) < (index._int);
    while(__sa20)
    {
      ret2_s1067._array_char.A[j._int] = ret_s1065._array_char.A[(index._int) - (new Object@Object(__cid=-2, _int=1)._int)];
      index = new Object@Object(__cid=-2, _int=(index._int) - (new Object@Object(__cid=-2, _int=1)._int));
      j = new Object@Object(__cid=-2, _int=(j._int) + 1);
      __sa20 = (j._int) < (size._int);
    }
    int _out_s1071 = 0;
    String@meta(_out_s1071);
    Object@Object _out_s1073 = null;
    String_String_char_int_int@String(new Object@Object(__cid=_out_s1071), ret2_s1067, new Object@Object(__cid=-2, _int=0), size, _out_s1073)//{};
    _out = _out_s1073;
    return;
  }
  /* END PACKAGE Integer*/
}
/* BEGIN PACKAGE SecretKey*/
package SecretKey{
  /* END PACKAGE SecretKey*/
}
/* BEGIN PACKAGE Assert*/
package Assert{
  /* END PACKAGE Assert*/
}
/* BEGIN PACKAGE PasswordMap*/
package PasswordMap{
  /*PasswordMap.sk:3*/
  
void PasswordMap_PasswordMap (Object self, ref Object _out)/*PasswordMap.sk:3*/
  {
    Object@Object _out_s1298 = null;
    HashMap_HashMap@HashMap(_out_s1298);
    self.passMap_PasswordMap = _out_s1298;
    int _out_s1300 = 0;
    String@meta(_out_s1300);
    Object@Object _out_s1302 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=16), A={'S','e','c','r','e','t',' ','P','a','s','s','w','o','r','d','\0'}), _out_s1302);
    Object@Object _out_s1304 = null;
    String_String_char_int_int@String(new Object@Object(__cid=_out_s1300), _out_s1302, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=15), _out_s1304)//{};
    self.masterHash_PasswordMap = _out_s1304;
    _out = self;
    return;
  }
  /*PasswordMap.sk:9*/
  
void add_String_String (Object self, Object tag, Object passEncryption)/*PasswordMap.sk:9*/
  {
    int _out_s1288 = 0;
    HashMap@meta(_out_s1288);
    if((self.passMap_PasswordMap.__cid) == (new Object@Object(__cid=-2, _int=_out_s1288)._int))/*PasswordMap.sk:10*/
    {
      Object@Object _out_s1291 = null;
      put_Object_Object_Object@HashMap(self.passMap_PasswordMap, tag, passEncryption, _out_s1291);
    }
    int _out_s1293 = 0;
    HashMap@meta(_out_s1293);
    Object@Object _pac_sc_s1294 = null;
    if((self.passMap_PasswordMap.__cid) == (new Object@Object(__cid=-2, _int=_out_s1293)._int))/*PasswordMap.sk:10*/
    {
      Object@Object _out_s1296 = null;
      putb_Object_Object_Object@HashMap(self.passMap_PasswordMap, tag, passEncryption, _out_s1296);
      _pac_sc_s1294 = _out_s1296;
    }
    else
    {
      _pac_sc_s1294 = null;
    }
    self.passMap_PasswordMap = _pac_sc_s1294;
  }
  /*PasswordMap.sk:17*/
  
void get_String (Object self, Object domainHash, ref Object _out)/*PasswordMap.sk:17*/
  {
    Object@Object _out_s1286 = null;
    xform_get_HashMap_Object@HashMap(self.passMap_PasswordMap._hashmap, domainHash, _out_s1286);
    _out = _out_s1286;
    return;
  }
  /* END PACKAGE PasswordMap*/
}
/* BEGIN PACKAGE array*/
package array{
  struct Array_bit {
      Object length;
      bit[length._int] A;
  }
  struct Array_char {
      Object length;
      char[length._int] A;
  }
  struct Array_int {
      Object length;
      int[length._int] A;
  }
  struct Array_float {
      Object length;
      float[length._int] A;
  }
  struct Array_double {
      Object length;
      double[length._int] A;
  }
  struct Array_Object {
      Object length;
      Object[length._int] A;
  }
  /*array.sk:37*/
  
void Wrap_Array_char (Array_char arr, ref Object _out)/*array.sk:37*/
  {
    int _out_s1321 = 0;
    Array@meta(_out_s1321);
    _out = new Object@Object(__cid=_out_s1321, _array_char=arr);
    return;
  }
  /* END PACKAGE array*/
}
/* BEGIN PACKAGE meta*/
package meta{
  /*meta.sk:25*/
  
void Array (ref int _out)/*meta.sk:25*/
  {
    _out = -1;
    return;
  }
  /*meta.sk:4*/
  
void ArrayList (ref int _out)/*meta.sk:4*/
  {
    _out = 9;
    return;
  }
  /*meta.sk:5*/
  
void Assert (ref int _out)/*meta.sk:5*/
  {
    _out = 11;
    return;
  }
  /*meta.sk:6*/
  
void Boolean (ref int _out)/*meta.sk:6*/
  {
    _out = 7;
    return;
  }
  /*meta.sk:7*/
  
void Byte (ref int _out)/*meta.sk:7*/
  {
    _out = 13;
    return;
  }
  /*meta.sk:9*/
  
void Character (ref int _out)/*meta.sk:9*/
  {
    _out = 10;
    return;
  }
  /*meta.sk:10*/
  
void Cipher (ref int _out)/*meta.sk:10*/
  {
    _out = 19;
    return;
  }
  /*meta.sk:11*/
  
void Cryptographer (ref int _out)/*meta.sk:11*/
  {
    _out = 5;
    return;
  }
  /*meta.sk:12*/
  
void HashMap (ref int _out)/*meta.sk:12*/
  {
    _out = 14;
    return;
  }
  /*meta.sk:13*/
  
void Integer (ref int _out)/*meta.sk:13*/
  {
    _out = 15;
    return;
  }
  /*meta.sk:14*/
  
void IvParameterSpec (ref int _out)/*meta.sk:14*/
  {
    _out = 20;
    return;
  }
  /*meta.sk:16*/
  
void Mac (ref int _out)/*meta.sk:16*/
  {
    _out = 16;
    return;
  }
  /*meta.sk:17*/
  
void Object (ref int _out)/*meta.sk:17*/
  {
    _out = 1;
    return;
  }
  /*meta.sk:18*/
  
void PasswordManager (ref int _out)/*meta.sk:18*/
  {
    _out = 3;
    return;
  }
  /*meta.sk:19*/
  
void PasswordManagerTest (ref int _out)/*meta.sk:19*/
  {
    _out = 2;
    return;
  }
  /*meta.sk:20*/
  
void PasswordMap (ref int _out)/*meta.sk:20*/
  {
    _out = 4;
    return;
  }
  /*meta.sk:22*/
  
void SecretKeySpec (ref int _out)/*meta.sk:22*/
  {
    _out = 17;
    return;
  }
  /*meta.sk:23*/
  
void SecureRandom (ref int _out)/*meta.sk:23*/
  {
    _out = 8;
    return;
  }
  /*meta.sk:24*/
  
void String (ref int _out)/*meta.sk:24*/
  {
    _out = 12;
    return;
  }
  /* END PACKAGE meta*/
}
/* BEGIN PACKAGE SecretKeySpec*/
package SecretKeySpec{
  struct SecretKeySpec {
      @Immutable()
  }
  struct Secretkeyspec extends SecretKeySpec@SecretKeySpec {
      @Immutable()
  }
  struct Getencoded extends SecretKeySpec@SecretKeySpec {
      SecretKeySpec self;
      @Immutable()
  }
  /*SecretKeySpec.sk:8*/
  
void SecretKeySpec_SecretKeySpec (ref Object _out)/*SecretKeySpec.sk:8*/
  {
    int _out_s1333 = 0;
    SecretKeySpec@meta(_out_s1333);
    _out = new Object@Object(__cid=_out_s1333, _secretkeyspec=new Secretkeyspec());
    return;
  }
  /* END PACKAGE SecretKeySpec*/
}
/* BEGIN PACKAGE Byte*/
package Byte{
  /* END PACKAGE Byte*/
}
/* BEGIN PACKAGE Object*/
package Object{
  struct Object {
      int __cid;
      Object cryptographer_PasswordManager;
      Object passMap_PasswordManager;
      Object _value_String;
      Object _count_String;
      Object value_Character;
      Object b_Byte;
      Object GCMSecretKey_Cryptographer;
      Object Hash_secret_key_Cryptographer;
      Object sha256_HMAC_Cryptographer;
      Object myCypherOut_Cryptographer;
      Object randomIv_Cryptographer;
      Object ivParameterSpec_Cryptographer;
      Object MAX_LENGTH_PASSWORD_Cryptographer;
      Object value_Integer;
      Object passMap_PasswordMap;
      Object masterHash_PasswordMap;
      Object bool_Boolean;
      Cipher _cipher;
      SecureRandom _securerandom;
      ArrayList _arraylist;
      HashMap _hashmap;
      SecretKeySpec _secretkeyspec;
      Mac _mac;
      Array_bit _array_bit;
      Array_char _array_char;
      Array_int _array_int;
      Array_float _array_float;
      Array_double _array_double;
      Array_Object _array_object;
      bit _bit;
      char _char;
      int _int;
      float _float;
      double _double;
  }
  /*Object.sk:3*/
  
void Object_Object (Object self, ref Object _out)/*Object.sk:3*/
  {
    _out = self;
    return;
  }
  /*Object.sk:17*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*Object.sk:17*/
  {
    _out = new Object(__cid=-4, _bit=self == obj);
    return;
  }
  /* END PACKAGE Object*/
}
/* BEGIN PACKAGE IvParameterSpec*/
package IvParameterSpec{
  /*IvParam..erSpec.sk:7*/
  
void IvParameterSpec_IvParameterSpec_byte (Object self, Object val, ref Object _out)/*IvParam..erSpec.sk:7*/
  {
    _out = self;
    return;
  }
  /* END PACKAGE IvParameterSpec*/
}
/* BEGIN PACKAGE Cipher*/
package Cipher{
  struct Cipher {
      @Immutable()
  }
  struct Cipher_empty extends Cipher@Cipher {
      @Immutable()
  }
  struct Tostring extends Cipher@Cipher {
      Cipher self;
      @Immutable()
  }
  struct Cipher_string extends Cipher@Cipher {
      Object t;
      @Immutable()
  }
  struct Init_int_object_object extends Cipher@Cipher {
      Cipher self;
      Object mode;
      Object k;
      Object iv;
      @Immutable()
  }
  struct Initb_int_object_object extends Cipher@Cipher {
      Cipher self;
      Object mode;
      Object k;
      Object iv;
      @Immutable()
  }
  struct Dofinalb_object extends Cipher@Cipher {
      Cipher self;
      Object text;
      @Immutable()
  }
  struct Dofinal_object extends Cipher@Cipher {
      Cipher self;
      Object text;
      @Immutable()
  }
  /*Cipher.sk:17*/
  
void Cipher_Cipher (ref Object _out)/*Cipher.sk:17*/
  {
    int _out_s1677 = 0;
    Cipher@meta(_out_s1677);
    _out = new Object@Object(__cid=_out_s1677, _cipher=new Cipher_empty());
    return;
  }
  /*Cipher.sk:41*/
  
void doFinal_Object_Object (Object self, Object text, ref Object _out)/*Cipher.sk:41*/
  {
    int _out_s1669 = 0;
    Cipher@meta(_out_s1669);
    _out = new Object@Object(__cid=_out_s1669, _cipher=new Dofinal_object(self=self._cipher, text=text));
    return;
  }
  /*Cipher.sk:37*/
  
void doFinalb_Object_Object (Object self, Object text, ref Object _out)/*Cipher.sk:37*/
  {
    int _out_s1667 = 0;
    Cipher@meta(_out_s1667);
    _out = new Object@Object(__cid=_out_s1667, _cipher=new Dofinalb_object(self=self._cipher, text=text));
    return;
  }
  /*Cipher.sk:29*/
  
void init_Object_int_Object_Object (Object self, Object mode, Object k, Object iv, ref Object _out)/*Cipher.sk:29*/
  {
    int _out_s1673 = 0;
    Cipher@meta(_out_s1673);
    _out = new Object@Object(__cid=_out_s1673, _cipher=new Init_int_object_object(self=self._cipher, mode=mode, k=k, iv=iv));
    return;
  }
  /*Cipher.sk:33*/
  
void initb_Object_int_Object_Object (Object self, Object mode, Object k, Object iv, ref Object _out)/*Cipher.sk:33*/
  {
    int _out_s1671 = 0;
    Cipher@meta(_out_s1671);
    _out = new Object@Object(__cid=_out_s1671, _cipher=new Initb_int_object_object(self=self._cipher, mode=mode, k=k, iv=iv));
    return;
  }
  /*Cipher.sk:21*/
  
void toString_Object (Object self, ref Object _out)/*Cipher.sk:21*/
  {
    int _out_s1675 = 0;
    Cipher@meta(_out_s1675);
    _out = new Object@Object(__cid=_out_s1675, _cipher=new Tostring(self=self._cipher));
    return;
  }
  /*Cipher.sk:140*/
  
void xform_doFinal_Cipher_Object (Cipher self, Object text, ref Object _out)/*Cipher.sk:140*/
  {
    switch(self){/*Cipher.sk:141*/
      case Cipher_empty:
      {
        int _out_s1439 = 0;
        Cipher@meta(_out_s1439);
        _out = new Object@Object(__cid=_out_s1439, _cipher=self);
        return;
      }
      case Tostring:
      {
        int _out_s1441 = 0;
        Cipher@meta(_out_s1441);
        _out = new Object@Object(__cid=_out_s1441, _cipher=self);
        return;
      }
      case Cipher_string:
      {
        int _out_s1443 = 0;
        Cipher@meta(_out_s1443);
        _out = new Object@Object(__cid=_out_s1443, _cipher=self);
        return;
      }
      case Init_int_object_object:
      {
        int _out_s1445 = 0;
        Cipher@meta(_out_s1445);
        _out = new Object@Object(__cid=_out_s1445, _cipher=self);
        return;
      }
      case Initb_int_object_object:
      {
        Cipher@Cipher text_text = text._cipher;
        switch(text_text){/*Cipher.sk:150*/
          case Cipher_empty:
          {
            int _out_s1447 = 0;
            Cipher@meta(_out_s1447);
            _out = new Object@Object(__cid=_out_s1447, _cipher=self);
            return;
          }
          case Tostring:
          {
            Cipher@Cipher text_text_text = text_text.self;
            switch(text_text_text){/*Cipher.sk:156*/
              case Cipher_empty:
              {
                int _out_s1449 = 0;
                Cipher@meta(_out_s1449);
                _out = new Object@Object(__cid=_out_s1449, _cipher=self);
                return;
              }
              case Tostring:
              {
                int _out_s1451 = 0;
                Cipher@meta(_out_s1451);
                _out = new Object@Object(__cid=_out_s1451, _cipher=self);
                return;
              }
              case Cipher_string:
              {
                int _out_s1453 = 0;
                Cipher@meta(_out_s1453);
                _out = new Object@Object(__cid=_out_s1453, _cipher=self);
                return;
              }
              case Init_int_object_object:
              {
                int _out_s1455 = 0;
                Cipher@meta(_out_s1455);
                _out = new Object@Object(__cid=_out_s1455, _cipher=self);
                return;
              }
              case Initb_int_object_object:
              {
                int _out_s1457 = 0;
                Cipher@meta(_out_s1457);
                _out = new Object@Object(__cid=_out_s1457, _cipher=self);
                return;
              }
              case Dofinalb_object:
              {
                Cipher@Cipher text_text_text_text = text_text_text.self;
                switch(text_text_text_text){/*Cipher.sk:166*/
                  case Cipher_empty:
                  {
                    int _out_s1459 = 0;
                    Cipher@meta(_out_s1459);
                    _out = new Object@Object(__cid=_out_s1459, _cipher=self);
                    return;
                  }
                  case Tostring:
                  {
                    int _out_s1461 = 0;
                    Cipher@meta(_out_s1461);
                    _out = new Object@Object(__cid=_out_s1461, _cipher=self);
                    return;
                  }
                  case Cipher_string:
                  {
                    int _out_s1463 = 0;
                    Cipher@meta(_out_s1463);
                    _out = new Object@Object(__cid=_out_s1463, _cipher=self);
                    return;
                  }
                  case Init_int_object_object:
                  {
                    int _out_s1465 = 0;
                    Cipher@meta(_out_s1465);
                    _out = new Object@Object(__cid=_out_s1465, _cipher=self);
                    return;
                  }
                  case Initb_int_object_object:
                  {
                    int _out_s1467 = 0;
                    Boolean@meta(_out_s1467);
                    if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1467)._int))/*Cipher.sk:172*/
                    {
                      Object@Object _out_s1470 = null;
                      equals_Object@Object(self.k, text_text_text_text.k, _out_s1470);
                    }
                    else
                    {
                      int _out_s1472 = 0;
                      Mac@meta(_out_s1472);
                      if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1472)._int))/*Cipher.sk:172*/
                      {
                        Object@Object _out_s1475 = null;
                        equals_Object@Object(self.k, text_text_text_text.k, _out_s1475);
                      }
                      else
                      {
                        int _out_s1477 = 0;
                        PasswordMap@meta(_out_s1477);
                        if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1477)._int))/*Cipher.sk:172*/
                        {
                          Object@Object _out_s1480 = null;
                          equals_Object@Object(self.k, text_text_text_text.k, _out_s1480);
                        }
                        else
                        {
                          int _out_s1482 = 0;
                          SecretKeySpec@meta(_out_s1482);
                          if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1482)._int))/*Cipher.sk:172*/
                          {
                            Object@Object _out_s1485 = null;
                            equals_Object@Object(self.k, text_text_text_text.k, _out_s1485);
                          }
                          else
                          {
                            int _out_s1487 = 0;
                            IvParameterSpec@meta(_out_s1487);
                            if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1487)._int))/*Cipher.sk:172*/
                            {
                              Object@Object _out_s1490 = null;
                              equals_Object@Object(self.k, text_text_text_text.k, _out_s1490);
                            }
                            else
                            {
                              int _out_s1492 = 0;
                              HashMap@meta(_out_s1492);
                              if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1492)._int))/*Cipher.sk:172*/
                              {
                                Object@Object _out_s1495 = null;
                                equals_Object@Object(self.k, text_text_text_text.k, _out_s1495);
                              }
                              else
                              {
                                int _out_s1497 = 0;
                                Integer@meta(_out_s1497);
                                if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1497)._int))/*Cipher.sk:172*/
                                {
                                  Object@Object _out_s1500 = null;
                                  equals_Object@Integer(self.k, text_text_text_text.k, _out_s1500);
                                }
                                else
                                {
                                  int _out_s1502 = 0;
                                  Cryptographer@meta(_out_s1502);
                                  if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1502)._int))/*Cipher.sk:172*/
                                  {
                                    Object@Object _out_s1505 = null;
                                    equals_Object@Object(self.k, text_text_text_text.k, _out_s1505);
                                  }
                                  else
                                  {
                                    int _out_s1507 = 0;
                                    Byte@meta(_out_s1507);
                                    if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1507)._int))/*Cipher.sk:172*/
                                    {
                                      Object@Object _out_s1510 = null;
                                      equals_Object@Object(self.k, text_text_text_text.k, _out_s1510);
                                    }
                                    else
                                    {
                                      int _out_s1512 = 0;
                                      ArrayList@meta(_out_s1512);
                                      if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1512)._int))/*Cipher.sk:172*/
                                      {
                                        Object@Object _out_s1515 = null;
                                        equals_Object@Object(self.k, text_text_text_text.k, _out_s1515);
                                      }
                                      else
                                      {
                                        int _out_s1517 = 0;
                                        Character@meta(_out_s1517);
                                        if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1517)._int))/*Cipher.sk:172*/
                                        {
                                          Object@Object _out_s1520 = null;
                                          equals_Object@Character(self.k, text_text_text_text.k, _out_s1520);
                                        }
                                        else
                                        {
                                          int _out_s1522 = 0;
                                          SecureRandom@meta(_out_s1522);
                                          if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1522)._int))/*Cipher.sk:172*/
                                          {
                                            Object@Object _out_s1525 = null;
                                            equals_Object@Object(self.k, text_text_text_text.k, _out_s1525);
                                          }
                                          else
                                          {
                                            int _out_s1527 = 0;
                                            Assert@meta(_out_s1527);
                                            if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1527)._int))/*Cipher.sk:172*/
                                            {
                                              Object@Object _out_s1530 = null;
                                              equals_Object@Object(self.k, text_text_text_text.k, _out_s1530);
                                            }
                                            else
                                            {
                                              int _out_s1532 = 0;
                                              String@meta(_out_s1532);
                                              if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1532)._int))/*Cipher.sk:172*/
                                              {
                                                Object@Object _out_s1535 = null;
                                                equals_Object@String(self.k, text_text_text_text.k, _out_s1535);
                                              }
                                              else
                                              {
                                                int _out_s1537 = 0;
                                                PasswordManager@meta(_out_s1537);
                                                if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1537)._int))/*Cipher.sk:172*/
                                                {
                                                  Object@Object _out_s1540 = null;
                                                  equals_Object@Object(self.k, text_text_text_text.k, _out_s1540);
                                                }
                                                else
                                                {
                                                  int _out_s1542 = 0;
                                                  Cipher@meta(_out_s1542);
                                                  if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1542)._int))/*Cipher.sk:172*/
                                                  {
                                                    Object@Object _out_s1545 = null;
                                                    equals_Object@Object(self.k, text_text_text_text.k, _out_s1545);
                                                  }
                                                  else
                                                  {
                                                    int _out_s1547 = 0;
                                                    PasswordManagerTest@meta(_out_s1547);
                                                    if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1547)._int))/*Cipher.sk:172*/
                                                    {
                                                      Object@Object _out_s1550 = null;
                                                      equals_Object@Object(self.k, text_text_text_text.k, _out_s1550);
                                                    }
                                                    else
                                                    {
                                                      int _out_s1552 = 0;
                                                      Object@meta(_out_s1552);
                                                      if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1552)._int))/*Cipher.sk:172*/
                                                      {
                                                        Object@Object _out_s1555 = null;
                                                        equals_Object@Object(self.k, text_text_text_text.k, _out_s1555);
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    int _out_s1557 = 0;
                    Boolean@meta(_out_s1557);
                    Object@Object _pac_sc_s1558 = null;
                    if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1557)._int))/*Cipher.sk:172*/
                    {
                      Object@Object _out_s1560 = null;
                      equals_Object@Object(self.k, text_text_text_text.k, _out_s1560);
                      _pac_sc_s1558 = _out_s1560;
                    }
                    else
                    {
                      int _out_s1562 = 0;
                      Mac@meta(_out_s1562);
                      Object@Object _pac_sc_s1563 = null;
                      if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1562)._int))/*Cipher.sk:172*/
                      {
                        Object@Object _out_s1565 = null;
                        equals_Object@Object(self.k, text_text_text_text.k, _out_s1565);
                        _pac_sc_s1563 = _out_s1565;
                      }
                      else
                      {
                        int _out_s1567 = 0;
                        PasswordMap@meta(_out_s1567);
                        Object@Object _pac_sc_s1568 = null;
                        if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1567)._int))/*Cipher.sk:172*/
                        {
                          Object@Object _out_s1570 = null;
                          equals_Object@Object(self.k, text_text_text_text.k, _out_s1570);
                          _pac_sc_s1568 = _out_s1570;
                        }
                        else
                        {
                          int _out_s1572 = 0;
                          SecretKeySpec@meta(_out_s1572);
                          Object@Object _pac_sc_s1573 = null;
                          if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1572)._int))/*Cipher.sk:172*/
                          {
                            Object@Object _out_s1575 = null;
                            equals_Object@Object(self.k, text_text_text_text.k, _out_s1575);
                            _pac_sc_s1573 = _out_s1575;
                          }
                          else
                          {
                            int _out_s1577 = 0;
                            IvParameterSpec@meta(_out_s1577);
                            Object@Object _pac_sc_s1578 = null;
                            if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1577)._int))/*Cipher.sk:172*/
                            {
                              Object@Object _out_s1580 = null;
                              equals_Object@Object(self.k, text_text_text_text.k, _out_s1580);
                              _pac_sc_s1578 = _out_s1580;
                            }
                            else
                            {
                              int _out_s1582 = 0;
                              HashMap@meta(_out_s1582);
                              Object@Object _pac_sc_s1583 = null;
                              if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1582)._int))/*Cipher.sk:172*/
                              {
                                Object@Object _out_s1585 = null;
                                equals_Object@Object(self.k, text_text_text_text.k, _out_s1585);
                                _pac_sc_s1583 = _out_s1585;
                              }
                              else
                              {
                                int _out_s1587 = 0;
                                Integer@meta(_out_s1587);
                                Object@Object _pac_sc_s1588 = null;
                                if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1587)._int))/*Cipher.sk:172*/
                                {
                                  Object@Object _out_s1590 = null;
                                  equals_Object@Integer(self.k, text_text_text_text.k, _out_s1590);
                                  _pac_sc_s1588 = _out_s1590;
                                }
                                else
                                {
                                  int _out_s1592 = 0;
                                  Cryptographer@meta(_out_s1592);
                                  Object@Object _pac_sc_s1593 = null;
                                  if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1592)._int))/*Cipher.sk:172*/
                                  {
                                    Object@Object _out_s1595 = null;
                                    equals_Object@Object(self.k, text_text_text_text.k, _out_s1595);
                                    _pac_sc_s1593 = _out_s1595;
                                  }
                                  else
                                  {
                                    int _out_s1597 = 0;
                                    Byte@meta(_out_s1597);
                                    Object@Object _pac_sc_s1598 = null;
                                    if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1597)._int))/*Cipher.sk:172*/
                                    {
                                      Object@Object _out_s1600 = null;
                                      equals_Object@Object(self.k, text_text_text_text.k, _out_s1600);
                                      _pac_sc_s1598 = _out_s1600;
                                    }
                                    else
                                    {
                                      int _out_s1602 = 0;
                                      ArrayList@meta(_out_s1602);
                                      Object@Object _pac_sc_s1603 = null;
                                      if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1602)._int))/*Cipher.sk:172*/
                                      {
                                        Object@Object _out_s1605 = null;
                                        equals_Object@Object(self.k, text_text_text_text.k, _out_s1605);
                                        _pac_sc_s1603 = _out_s1605;
                                      }
                                      else
                                      {
                                        int _out_s1607 = 0;
                                        Character@meta(_out_s1607);
                                        Object@Object _pac_sc_s1608 = null;
                                        if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1607)._int))/*Cipher.sk:172*/
                                        {
                                          Object@Object _out_s1610 = null;
                                          equals_Object@Character(self.k, text_text_text_text.k, _out_s1610);
                                          _pac_sc_s1608 = _out_s1610;
                                        }
                                        else
                                        {
                                          int _out_s1612 = 0;
                                          SecureRandom@meta(_out_s1612);
                                          Object@Object _pac_sc_s1613 = null;
                                          if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1612)._int))/*Cipher.sk:172*/
                                          {
                                            Object@Object _out_s1615 = null;
                                            equals_Object@Object(self.k, text_text_text_text.k, _out_s1615);
                                            _pac_sc_s1613 = _out_s1615;
                                          }
                                          else
                                          {
                                            int _out_s1617 = 0;
                                            Assert@meta(_out_s1617);
                                            Object@Object _pac_sc_s1618 = null;
                                            if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1617)._int))/*Cipher.sk:172*/
                                            {
                                              Object@Object _out_s1620 = null;
                                              equals_Object@Object(self.k, text_text_text_text.k, _out_s1620);
                                              _pac_sc_s1618 = _out_s1620;
                                            }
                                            else
                                            {
                                              int _out_s1622 = 0;
                                              String@meta(_out_s1622);
                                              Object@Object _pac_sc_s1623 = null;
                                              if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1622)._int))/*Cipher.sk:172*/
                                              {
                                                Object@Object _out_s1625 = null;
                                                equals_Object@String(self.k, text_text_text_text.k, _out_s1625);
                                                _pac_sc_s1623 = _out_s1625;
                                              }
                                              else
                                              {
                                                int _out_s1627 = 0;
                                                PasswordManager@meta(_out_s1627);
                                                Object@Object _pac_sc_s1628 = null;
                                                if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1627)._int))/*Cipher.sk:172*/
                                                {
                                                  Object@Object _out_s1630 = null;
                                                  equals_Object@Object(self.k, text_text_text_text.k, _out_s1630);
                                                  _pac_sc_s1628 = _out_s1630;
                                                }
                                                else
                                                {
                                                  int _out_s1632 = 0;
                                                  Cipher@meta(_out_s1632);
                                                  Object@Object _pac_sc_s1633 = null;
                                                  if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1632)._int))/*Cipher.sk:172*/
                                                  {
                                                    Object@Object _out_s1635 = null;
                                                    equals_Object@Object(self.k, text_text_text_text.k, _out_s1635);
                                                    _pac_sc_s1633 = _out_s1635;
                                                  }
                                                  else
                                                  {
                                                    int _out_s1637 = 0;
                                                    PasswordManagerTest@meta(_out_s1637);
                                                    Object@Object _pac_sc_s1638 = null;
                                                    if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1637)._int))/*Cipher.sk:172*/
                                                    {
                                                      Object@Object _out_s1640 = null;
                                                      equals_Object@Object(self.k, text_text_text_text.k, _out_s1640);
                                                      _pac_sc_s1638 = _out_s1640;
                                                    }
                                                    else
                                                    {
                                                      int _out_s1642 = 0;
                                                      Object@meta(_out_s1642);
                                                      Object@Object _pac_sc_s1643 = null;
                                                      if((self.k.__cid) == (new Object@Object(__cid=-2, _int=_out_s1642)._int))/*Cipher.sk:172*/
                                                      {
                                                        Object@Object _out_s1645 = null;
                                                        equals_Object@Object(self.k, text_text_text_text.k, _out_s1645);
                                                        _pac_sc_s1643 = _out_s1645;
                                                      }
                                                      else
                                                      {
                                                        _pac_sc_s1643 = null;
                                                      }
                                                      _pac_sc_s1638 = _pac_sc_s1643;
                                                    }
                                                    _pac_sc_s1633 = _pac_sc_s1638;
                                                  }
                                                  _pac_sc_s1628 = _pac_sc_s1633;
                                                }
                                                _pac_sc_s1623 = _pac_sc_s1628;
                                              }
                                              _pac_sc_s1618 = _pac_sc_s1623;
                                            }
                                            _pac_sc_s1613 = _pac_sc_s1618;
                                          }
                                          _pac_sc_s1608 = _pac_sc_s1613;
                                        }
                                        _pac_sc_s1603 = _pac_sc_s1608;
                                      }
                                      _pac_sc_s1598 = _pac_sc_s1603;
                                    }
                                    _pac_sc_s1593 = _pac_sc_s1598;
                                  }
                                  _pac_sc_s1588 = _pac_sc_s1593;
                                }
                                _pac_sc_s1583 = _pac_sc_s1588;
                              }
                              _pac_sc_s1578 = _pac_sc_s1583;
                            }
                            _pac_sc_s1573 = _pac_sc_s1578;
                          }
                          _pac_sc_s1568 = _pac_sc_s1573;
                        }
                        _pac_sc_s1563 = _pac_sc_s1568;
                      }
                      _pac_sc_s1558 = _pac_sc_s1563;
                    }
                    _out = (_pac_sc_s1558._bit ? (((self.mode._int) == (new Object@Object(__cid=-2, _int=2)._int)) && ((text_text_text_text.mode._int) == (new Object@Object(__cid=-2, _int=1)._int)) ? text_text_text.text : null) : null);
                    return;
                  }
                  case Dofinalb_object:
                  {
                    int _out_s1647 = 0;
                    Cipher@meta(_out_s1647);
                    _out = new Object@Object(__cid=_out_s1647, _cipher=self);
                    return;
                  }
                  case Dofinal_object:
                  {
                    int _out_s1649 = 0;
                    Cipher@meta(_out_s1649);
                    _out = new Object@Object(__cid=_out_s1649, _cipher=self);
                    return;
                  }
                }
              }
              case Dofinal_object:
              {
                int _out_s1651 = 0;
                Cipher@meta(_out_s1651);
                _out = new Object@Object(__cid=_out_s1651, _cipher=self);
                return;
              }
            }
          }
          case Cipher_string:
          {
            int _out_s1653 = 0;
            Cipher@meta(_out_s1653);
            _out = new Object@Object(__cid=_out_s1653, _cipher=self);
            return;
          }
          case Init_int_object_object:
          {
            int _out_s1655 = 0;
            Cipher@meta(_out_s1655);
            _out = new Object@Object(__cid=_out_s1655, _cipher=self);
            return;
          }
          case Initb_int_object_object:
          {
            int _out_s1657 = 0;
            Cipher@meta(_out_s1657);
            _out = new Object@Object(__cid=_out_s1657, _cipher=self);
            return;
          }
          case Dofinalb_object:
          {
            int _out_s1659 = 0;
            Cipher@meta(_out_s1659);
            _out = new Object@Object(__cid=_out_s1659, _cipher=self);
            return;
          }
          case Dofinal_object:
          {
            int _out_s1661 = 0;
            Cipher@meta(_out_s1661);
            _out = new Object@Object(__cid=_out_s1661, _cipher=self);
            return;
          }
        }
      }
      case Dofinalb_object:
      {
        int _out_s1663 = 0;
        Cipher@meta(_out_s1663);
        _out = new Object@Object(__cid=_out_s1663, _cipher=self);
        return;
      }
      case Dofinal_object:
      {
        int _out_s1665 = 0;
        Cipher@meta(_out_s1665);
        _out = new Object@Object(__cid=_out_s1665, _cipher=self);
        return;
      }
    }
    _out = null;
    return;
  }
  /* END PACKAGE Cipher*/
}
/* BEGIN PACKAGE Boolean*/
package Boolean{
  /* END PACKAGE Boolean*/
}
/* BEGIN PACKAGE Key*/
package Key{
  /* END PACKAGE Key*/
}
[SKETCH] DONE
Total time = 74482
