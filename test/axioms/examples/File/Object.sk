package Object;

Object fs;
Object fs_g() { return fs; }
void fs_s(Object fs_s) { fs = fs_s; }

Object Object_Object(Object self) {
    return self;
}

bit equals_Object_Object(Object a, Object b) {
  if (a == null) {
    if (b == null) {
      return true;
    }
    return false;
  }
  return (a.__cid == File() ? equals_Object@Object(a, b) : a.__cid == FreqTable() ? equals_Object@Object(a, b) : a.__cid == Number() ? equals_Object@Object(a, b) : a.__cid == Integer() ? equals_Object@Integer(a, b) : a.__cid == FileReaderr() ? equals_Object@Object(a, b) : a.__cid == String() ? equals_Object@String(a, b) : a.__cid == Object() ? equals_Object@Object(a, b) : 0);
}

int hashCode_Object(Object o) {
  return (o != null ? (o.__cid == File() ? hashCode@Object(o) : o.__cid == FreqTable() ? hashCode@Object(o) : o.__cid == Number() ? hashCode@Object(o) : o.__cid == Integer() ? hashCode@Integer(o) : o.__cid == FileReaderr() ? hashCode@Object(o) : o.__cid == String() ? hashCode@String(o) : o.__cid == Object() ? hashCode@Object(o) : 0) : 0);
}

Object toString(Object self) {
  return String_String_char_int_int(new Object(__cid=String()), new Array_char(length=17+1, A="Object toString()"), 0, 17);
}

bit equals_Object(Object self, Object obj) {
  return self == obj;
}

int hashCode(Object self) {
  return 0;
}

struct Object {
  int         __cid;
  Array_char  _value_String;
  int         _count_String;
  Object      file_FileReaderr;
  int         value_Integer;
  Object      fname_File;
  int         size_File;
}
