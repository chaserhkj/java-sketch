SKETCH version 1.7.5
Benchmark = /Users/grumpy/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/SuffixArray/../sketch_box/sk_SuffixArrayTest/main.sk
array.sk:5: Making final Array_bit@array.length
array.sk:5: Making final Object._int
array.sk:10: Making final Array_char@array.length
array.sk:15: Making final Array_int@array.length
array.sk:20: Making final Array_float@array.length
array.sk:25: Making final Array_double@array.length
array.sk:30: Making final Array_Object@array.length
[SATBackend] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SATBackend] MAX LOOP UNROLLING = 10
[SATBackend] MAX FUNC INLINING  = 5
estimated size of main__Wrapper_SuffixArrayTest
stmt cnt: 4
callee main_SuffixArrayTest : 15

[SATBackend] After prog.accept(partialEval)
[SATBackend] OFILE = sk_SuffixArrayTest
searching for file null
searching for file /Users/grumpy/Research/sketch-from-source/sketch-frontend/target/sketch-1.7.5-noarch-launchers/cegis/src/SketchSolver/cegis
searching for file /Users/grumpy/Research/sketch-from-source/sketch-frontend/target/sketch-1.7.5-noarch-launchers/cegis
searching for file cegis/src/SketchSolver/cegis
searching for file ../sketch-backend/src/SketchSolver/cegis
searching for file ../sketch-backend/bindings/cegis
searching for file /Users/grumpy/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/SuffixArray/../sketch_box/cegis-1.7.5
searching for file /Users/grumpy/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/SuffixArray/../sketch_box/cegis
searching for file /usr/local/bin/cegis
searching for file /usr/local/bin/src/SketchSolver/cegis
searching for file /usr/local/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/local/bin/../sketch-backend/bindings/cegis
searching for file /usr/bin/cegis
searching for file /usr/bin/src/SketchSolver/cegis
searching for file /usr/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/bin/../sketch-backend/bindings/cegis
searching for file /bin/cegis
searching for file /bin/src/SketchSolver/cegis
searching for file /bin/../sketch-backend/src/SketchSolver/cegis
searching for file /bin/../sketch-backend/bindings/cegis
searching for file /usr/sbin/cegis
searching for file /usr/sbin/src/SketchSolver/cegis
searching for file /usr/sbin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/sbin/../sketch-backend/bindings/cegis
searching for file /sbin/cegis
searching for file /sbin/src/SketchSolver/cegis
searching for file /sbin/../sketch-backend/src/SketchSolver/cegis
searching for file /sbin/../sketch-backend/bindings/cegis
searching for file /Library/TeX/texbin/cegis
searching for file /Library/TeX/texbin/src/SketchSolver/cegis
searching for file /Library/TeX/texbin/../sketch-backend/src/SketchSolver/cegis
searching for file /Library/TeX/texbin/../sketch-backend/bindings/cegis
searching for file /Users/grumpy/Research/sketch-from-source/sketch-frontend/target/sketch-1.7.5-noarch-launchers/cegis
searching for file /Users/grumpy/Research/sketch-from-source/sketch-frontend/target/sketch-1.7.5-noarch-launchers/src/SketchSolver/cegis
searching for file /Users/grumpy/Research/sketch-from-source/sketch-frontend/target/sketch-1.7.5-noarch-launchers/../sketch-backend/src/SketchSolver/cegis
searching for file /Users/grumpy/Research/sketch-from-source/sketch-frontend/target/sketch-1.7.5-noarch-launchers/../sketch-backend/bindings/cegis
searching for file /Users/grumpy/School/CMSC818/llvm_prebuilt/clang+llvm-5.0.0-x86_64-apple-darwin/bin/cegis
searching for file /Users/grumpy/School/CMSC818/llvm_prebuilt/clang+llvm-5.0.0-x86_64-apple-darwin/bin/src/SketchSolver/cegis
searching for file /Users/grumpy/School/CMSC818/llvm_prebuilt/clang+llvm-5.0.0-x86_64-apple-darwin/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /Users/grumpy/School/CMSC818/llvm_prebuilt/clang+llvm-5.0.0-x86_64-apple-darwin/bin/../sketch-backend/bindings/cegis
searching for file /Users/grumpy/.cabal/bin/cegis
searching for file /Users/grumpy/.cabal/bin/src/SketchSolver/cegis
searching for file /Users/grumpy/.cabal/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /Users/grumpy/.cabal/bin/../sketch-backend/bindings/cegis
searching for file /Users/grumpy/Research/sketch-from-source/sketch-frontend/cegis
searching for file /Users/grumpy/Research/sketch-from-source/sketch-frontend/src/SketchSolver/cegis
searching for file /Users/grumpy/Research/sketch-from-source/sketch-frontend/../sketch-backend/src/SketchSolver/cegis
resolved cegis to path /Users/grumpy/Research/sketch-from-source/sketch-backend/src/SketchSolver/cegis
[SATBackend] Launching: /Users/grumpy/Research/sketch-from-source/sketch-backend/src/SketchSolver/cegis --bnd-inbits 5 --boundmode CALLNAME --verbosity 13 --print-version -simiters 4 --assumebcheck --bnd-inline-amnt 5 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /Users/grumpy/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/sketch_box/tmp/sk_SuffixArrayTest/solution0-0 /Users/grumpy/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/sketch_box/tmp/sk_SuffixArrayTest/input0.tmp 
Overriding inputs with 5
boundmode = CALLNAME
assuming  bounds checks
SOLVER RAND SEED = 1515521925
 optimization level = 6
Reading SKETCH Program in File /Users/grumpy/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/sketch_box/tmp/sk_SuffixArrayTest/input0.tmp
CREATING main__Wrapper_SuffixArrayTest
size = 4
after ba size = 4
CREATING main__WrapperNospec_SuffixArrayTest
size = 0
after ba size = 0
CREATING main_SuffixArrayTest
size = 95
after ba size = 95
CREATING Object_meta
size = 3
after ba size = 3
CREATING Object_Object_Object
size = 35
after ba size = 35
CREATING testLRS_SuffixArrayTest
size = 2408
after ba size = 2408
CREATING String_meta
size = 3
after ba size = 3
CREATING Wrap_Array_char_array
size = 45
after ba size = 45
CREATING String_String_char_int_int_String
size = 801
after ba size = 801
CREATING SuffixArray_meta
size = 3
after ba size = 3
CREATING SuffixArray_SuffixArray_String_SuffixArray
size = 124
after ba size = 124
CREATING lrs_SuffixArray
Found Cycle of size 75; Breaking.
Found Cycle of size 39; Breaking.
size = 8286
after ba size = 8286
CREATING xform_size_TreeSet_TreeSet
size = 383
after ba size = 383
CREATING xform_contains_TreeSet_Object_TreeSet
size = 1761
after ba size = 1761
CREATING Array_meta
size = 3
after ba size = 3
CREATING toIntArray_String_SuffixArray
Found Cycle of size 25; Breaking.
size = 1949
after ba size = 1949
CREATING SuffixArray_SuffixArray_int_SuffixArray
size = 176
after ba size = 176
CREATING TreeSet_TreeSet_TreeSet
size = 45
after ba size = 45
CREATING TreeSet_meta
size = 3
after ba size = 3
CREATING clear_Object_TreeSet
size = 51
after ba size = 51
CREATING clearb_Object_TreeSet
size = 51
after ba size = 51
CREATING add_Object_Object_TreeSet
size = 51
after ba size = 51
CREATING addb_Object_Object_TreeSet
size = 52
after ba size = 52
CREATING TwoDArray_meta
size = 3
after ba size = 3
CREATING equals_Object_Object
size = 43
after ba size = 43
CREATING ArrayDeque_meta
size = 3
after ba size = 3
CREATING ArrayList_meta
size = 3
after ba size = 3
CREATING HashSet_meta
size = 3
after ba size = 3
CREATING SuffixArrayTest_meta
size = 3
after ba size = 3
CREATING HashMap_meta
size = 3
after ba size = 3
CREATING Arrays_meta
size = 3
after ba size = 3
CREATING Assert_meta
size = 3
after ba size = 3
CREATING Boolean_meta
size = 3
after ba size = 3
CREATING SuffixRankTuple_meta
size = 3
after ba size = 3
CREATING Integer_meta
size = 3
after ba size = 3
CREATING equals_Object_Integer
Found Cycle of size 5; Breaking.
size = 98
after ba size = 98
CREATING Character_meta
size = 3
after ba size = 3
CREATING equals_Object_Character
Found Cycle of size 5; Breaking.
size = 98
after ba size = 98
CREATING equals_Object_String
Found Cycle of size 5; Breaking.
size = 1073
after ba size = 1073
CREATING length_String
size = 42
after ba size = 42
CREATING Wrap_Array_int_array
size = 45
after ba size = 45
CREATING charAt_int_String
size = 113
after ba size = 113
CREATING clone_int_SuffixArray
size = 641
after ba size = 641
CREATING construct_SuffixArray
Found Cycle of size 155; Breaking.
Found Cycle of size 35; Breaking.
size = 51463
after ba size = 51463
CREATING kasai_SuffixArray
size = 12314
after ba size = 12314
CREATING intValue_Integer
size = 42
after ba size = 42
CREATING charValue_Character
size = 42
after ba size = 42
CREATING TwoDArray_TwoDArray_int_int_TwoDArray
size = 103
after ba size = 103
CREATING Wrap_Array_Object_array
size = 45
after ba size = 45
CREATING set_int_int_int_TwoDArray
size = 97
after ba size = 97
CREATING SuffixRankTuple_SuffixRankTuple_SuffixRankTuple
size = 35
after ba size = 35
CREATING get_int_int_TwoDArray
size = 97
after ba size = 97
CREATING sort_SuffixRankTuple_int_Arrays
Found Cycle of size 90; Breaking.
size = 19688
after ba size = 19688
CREATING getRow_int_TwoDArray
size = 929
after ba size = 929
CREATING setRow_int_int_TwoDArray
size = 888
after ba size = 888
CREATING compareTo_SuffixRankTuple_SuffixRankTuple
size = 271
after ba size = 271
CREATING swap_SuffixRankTuple_int_int_Arrays
size = 88
after ba size = 88
CREATING compare_int_int_Integer
size = 81
after ba size = 81
* before  EVERYTHING: main__WrapperNospec_SuffixArrayTest::SPEC nodes = 0	 main__Wrapper_SuffixArrayTest::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 5
 Inlining functions in the sketch.
inlined 1 new size =9
inlined 3 new size =2239
Found Cycle of size 300; Breaking.
Found Cycle of size 304; Breaking.
Found Cycle of size 302; Breaking.
Found Cycle of size 300; Breaking.
Found Cycle of size 302; Breaking.
Found Cycle of size 304; Breaking.
Found Cycle of size 409; Breaking.
Found Cycle of size 402; Breaking.
Found Cycle of size 396; Breaking.
Found Cycle of size 34; Breaking.
Found Cycle of size 414; Breaking.
Found Cycle of size 692; Breaking.
Found Cycle of size 408; Breaking.
Found Cycle of size 702; Breaking.
Found Cycle of size 412; Breaking.
Found Cycle of size 414; Breaking.
Found Cycle of size 706; Breaking.
Found Cycle of size 418; Breaking.
Found Cycle of size 418; Breaking.
Found Cycle of size 402; Breaking.
Found Cycle of size 407; Breaking.
Found Cycle of size 36; Breaking.
Found Cycle of size 672; Breaking.
inlined 166 new size =382064
Found Cycle of size 255; Breaking.
Found Cycle of size 251; Breaking.
Found Cycle of size 861; Breaking.
Found Cycle of size 297; Breaking.
Found Cycle of size 604; Breaking.
Found Cycle of size 272; Breaking.
Found Cycle of size 271; Breaking.
Found Cycle of size 324; Breaking.
Found Cycle of size 720; Breaking.
Found Cycle of size 309; Breaking.
Found Cycle of size 695; Breaking.
Found Cycle of size 277; Breaking.
Found Cycle of size 315; Breaking.
Found Cycle of size 75; Breaking.
Found Cycle of size 598; Breaking.
Found Cycle of size 600; Breaking.
Found Cycle of size 249; Breaking.
Found Cycle of size 664; Breaking.
inlined 2361 new size =1468533
Got too big, trying harder to concretize before=0  after =0
Found Cycle of size 106; Breaking.
Found Cycle of size 348; Breaking.
Found Cycle of size 887; Breaking.
Found Cycle of size 93; Breaking.
Found Cycle of size 178; Breaking.
Found Cycle of size 895; Breaking.
Found Cycle of size 890; Breaking.
Found Cycle of size 366; Breaking.
Found Cycle of size 163; Breaking.
Found Cycle of size 73; Breaking.
Found Cycle of size 903; Breaking.
Found Cycle of size 1497; Breaking.
Found Cycle of size 1525; Breaking.
Found Cycle of size 1325; Breaking.
Found Cycle of size 1319; Breaking.
Found Cycle of size 87; Breaking.
Found Cycle of size 124; Breaking.
Found Cycle of size 184; Breaking.
Found Cycle of size 58; Breaking.
inlined 4883 new size =1981757
Got too big, trying harder to concretize before=0  after =0
Found Cycle of size 1025; Breaking.
Found Cycle of size 54; Breaking.
Found Cycle of size 1204; Breaking.
Found Cycle of size 1229; Breaking.
Found Cycle of size 105; Breaking.
Found Cycle of size 90; Breaking.
Found Cycle of size 1005; Breaking.
Found Cycle of size 1241; Breaking.
Found Cycle of size 1249; Breaking.
Found Cycle of size 988; Breaking.
Found Cycle of size 133; Breaking.
Found Cycle of size 1866; Breaking.
Found Cycle of size 1047; Breaking.
Found Cycle of size 121; Breaking.
Found Cycle of size 1001; Breaking.
Found Cycle of size 1051; Breaking.
inlined 12365 new size =1498872
Got too big, trying harder to concretize before=0  after =0
Found Cycle of size 1008; Breaking.
Found Cycle of size 137; Breaking.
Found Cycle of size 106; Breaking.
Found Cycle of size 1304; Breaking.
Found Cycle of size 2063; Breaking.
Found Cycle of size 1043; Breaking.
Found Cycle of size 2098; Breaking.
Found Cycle of size 2061; Breaking.
Found Cycle of size 1392; Breaking.
Found Cycle of size 186; Breaking.
Found Cycle of size 1292; Breaking.
Found Cycle of size 1020; Breaking.
Found Cycle of size 194; Breaking.
Found Cycle of size 108; Breaking.
Found Cycle of size 934; Breaking.
Found Cycle of size 144; Breaking.
inlined 466 new size =1538685
Got too big, trying harder to concretize before=0  after =0
Found Cycle of size 151; Breaking.
Found Cycle of size 1095; Breaking.
Found Cycle of size 960; Breaking.
Found Cycle of size 1052; Breaking.
Found Cycle of size 3276; Breaking.
Found Cycle of size 3295; Breaking.
Found Cycle of size 1003; Breaking.
Found Cycle of size 1077; Breaking.
Found Cycle of size 1064; Breaking.
Found Cycle of size 905; Breaking.
Found Cycle of size 2066; Breaking.
Found Cycle of size 3285; Breaking.
Found Cycle of size 1021; Breaking.
Found Cycle of size 1999; Breaking.
Found Cycle of size 1042; Breaking.
Found Cycle of size 1022; Breaking.
inlined 560 new size =1575188
Got too big, trying harder to concretize before=0  after =0
Found Cycle of size 954; Breaking.
Found Cycle of size 2035; Breaking.
Found Cycle of size 2038; Breaking.
Found Cycle of size 1011; Breaking.
Found Cycle of size 2071; Breaking.
Found Cycle of size 2042; Breaking.
Found Cycle of size 1033; Breaking.
Found Cycle of size 883; Breaking.
Found Cycle of size 2046; Breaking.
Found Cycle of size 2050; Breaking.
Found Cycle of size 2103; Breaking.
Found Cycle of size 2050; Breaking.
Found Cycle of size 2054; Breaking.
Found Cycle of size 976; Breaking.
Found Cycle of size 2137; Breaking.
Found Cycle of size 2135; Breaking.
Found Cycle of size 2046; Breaking.
Found Cycle of size 2042; Breaking.
Found Cycle of size 81; Breaking.
Found Cycle of size 2036; Breaking.
Found Cycle of size 79; Breaking.
Found Cycle of size 2030; Breaking.
Found Cycle of size 978; Breaking.
Found Cycle of size 843; Breaking.
Found Cycle of size 925; Breaking.
Found Cycle of size 2025; Breaking.
Found Cycle of size 2020; Breaking.
inlined 559 new size =1603962
Got too big, trying harder to concretize before=0  after =0
Found Cycle of size 3333; Breaking.
Found Cycle of size 942; Breaking.
Found Cycle of size 3347; Breaking.
Found Cycle of size 940; Breaking.
Found Cycle of size 2071; Breaking.
Found Cycle of size 864; Breaking.
Found Cycle of size 65; Breaking.
Found Cycle of size 1013; Breaking.
Found Cycle of size 875; Breaking.
Found Cycle of size 948; Breaking.
Found Cycle of size 2031; Breaking.
Found Cycle of size 3341; Breaking.
Found Cycle of size 877; Breaking.
Found Cycle of size 2021; Breaking.
Found Cycle of size 48; Breaking.
Found Cycle of size 936; Breaking.
inlined 481 new size =1625493
Got too big, trying harder to concretize before=0  after =0
Found Cycle of size 1070; Breaking.
Found Cycle of size 924; Breaking.
Found Cycle of size 878; Breaking.
Found Cycle of size 2048; Breaking.
Found Cycle of size 942; Breaking.
Found Cycle of size 896; Breaking.
Found Cycle of size 940; Breaking.
Found Cycle of size 2052; Breaking.
Found Cycle of size 892; Breaking.
Found Cycle of size 886; Breaking.
Found Cycle of size 912; Breaking.
Found Cycle of size 886; Breaking.
Found Cycle of size 92; Breaking.
Found Cycle of size 906; Breaking.
Found Cycle of size 47; Breaking.
Found Cycle of size 898; Breaking.
inlined 369 new size =1639504
Got too big, trying harder to concretize before=0  after =0
Found Cycle of size 844; Breaking.
Found Cycle of size 917; Breaking.
Found Cycle of size 848; Breaking.
Found Cycle of size 915; Breaking.
Found Cycle of size 920; Breaking.
Found Cycle of size 921; Breaking.
Found Cycle of size 923; Breaking.
Found Cycle of size 928; Breaking.
Found Cycle of size 931; Breaking.
Found Cycle of size 954; Breaking.
Found Cycle of size 944; Breaking.
Found Cycle of size 2058; Breaking.
Found Cycle of size 870; Breaking.
Found Cycle of size 862; Breaking.
Found Cycle of size 929; Breaking.
Found Cycle of size 911; Breaking.
inlined 260 new size =1646414
Got too big, trying harder to concretize before=0  after =0
inlined 155 new size =1645764
Got too big, trying harder to concretize before=0  after =0
inlined 26 new size =1645743
Got too big, trying harder to concretize before=0  after =0
inlined 0 new size =1645743
Got too big, trying harder to concretize before=0  after =0
END OF STEP 0
 Inlining functions in the spec.
inlined 0 new size =0
END OF STEP 0
Bailing out
after Creating Miter: Problem nodes = 192518
* Final Problem size: Problem nodes = 192445
  # OF CONTROLS:    4
 control_ints = 4 	 control_bits = 0
inputSize = 0	ctrlSize = 18
Random seeds = 1
!+ 100100010000100000
!+ H__0:9
H__2:1
H__3:0
H__1:2

BEG CHECK
 * After optims it became = 2 was 192445
Assert at SuffixA..ayTest.sk:22 (2)
Simulation found a cex by random testing:  0 ms 
END CHECK
********  0	ftime= 0	ctime= 999.811
!% 
!% 
BEG FIND
Level 1  intsize = 2
 * After optims it became = 192445 was 192445
 * After all optims it became = 192445
 finder  hits = 88779	 bstoreObjs=50262	 sstorePages=46
hitcount 	0	27497	5
hitcount 	1	12315	5
hitcount 	2	3560	5
hitcount 	3	1050	3
hitcount 	4	2000	3
hitcount 	5	279	4
hitcount 	6	396	6
hitcount 	7	61	5
hitcount 	8	1961	7
hitcount 	9	32	5
hitcount 	10	4	5
hitcount 	11	35	5
hitcount 	12	127	4
hitcount 	13	146	6
hitcount 	14	93	5
hitcount 	15	80	5
hitcount 	16	4	4
hitcount 	17	12	6
hitcount 	18	1	1
hitcount 	19	24	2
hitcount 	20	9	5
hitcount 	21	5	7
hitcount 	23	5	5
hitcount 	24	6	0
hitcount 	25	2	3
hitcount 	26	24	6
hitcount 	27	2	3
hitcount 	28	6	0
hitcount 	29	41	6
hitcount 	30	9	5
hitcount 	31	30	5
hitcount 	32	1	0
hitcount 	33	1	2
hitcount 	34	1	7
hitcount 	35	4	4
hitcount 	37	1	0
hitcount 	39	6	2
hitcount 	40	1	0
hitcount 	41	6	0
hitcount 	42	2	0
hitcount 	43	4	6
hitcount 	44	2	0
hitcount 	45	7	0
hitcount 	47	1	0
hitcount 	49	1	4
hitcount 	51	1	4
hitcount 	52	264	0
hitcount 	53	5	3
hitcount 	55	3	6
hitcount 	57	4	6
hitcount 	58	5	0
hitcount 	59	10	7
hitcount 	60	14	3
hitcount 	61	19	5
hitcount 	62	7	3
hitcount 	63	5	5
hitcount 	64	6	0
hitcount 	68	2	2
hitcount 	69	7	6
hitcount 	75	3	4
hitcount 	79	5	6
hitcount 	83	4	2
hitcount 	89	4	6
hitcount 	92	1	3
hitcount 	102	10	6
hitcount 	105	1	8
hitcount 	117	2	7
hitcount 	123	8	7
hitcount 	125	4	6
hitcount 	129	2	6
hitcount 	133	2	6
hitcount 	149	4	8
hitcount 	151	1	6
hitcount 	167	2	3
hitcount 	211	3	7
bucketsPerDepth 	6	1
bucketsPerDepth 	7	17
bucketsPerDepth 	8	101
bucketsPerDepth 	9	194
bucketsPerDepth 	10	232
bucketsPerDepth 	11	202
bucketsPerDepth 	12	128
bucketsPerDepth 	13	76
bucketsPerDepth 	14	44
bucketsPerDepth 	15	21
bucketsPerDepth 	16	8
* TIME TO ADD INPUT :  255000 ms 
DECISIONS START = 0
f# %assign: 99 clauses: 91 learn: 0 restart: 1 decision: 12 propagated: 50534
END FIND
!+ 100000000000000000
!+ H__0:1
H__2:0
H__3:0
H__1:0

BEG CHECK
 * After optims it became = 0 was 192445
Simulation no cex:  0 ms 
CONTROL: growing l=2 inputs to size 3
Simulation no cex:  0 ms 
CONTROL: growing l=2 inputs to size 4
Simulation no cex:  0 ms 
CONTROL: growing l=2 inputs to size 5
Simulation no cex:  0 ms 
END CHECK
********  1	ftime= 255000	ctime= 999.948
 *GOT THE CORRECT ANSWER IN 2 iterations.
 *FIND TIME 255000 CHECK TIME 1999.76 TOTAL TIME 257000
VALUES H__0: 1, H__1: 0, H__2: 0, H__3: 0, 
RESULT = 2  
**ROUND 0 : 0 Round time:  327001 ms 
RNDDEG = -1
return 0

----- Statistics -----
Total elapsed time (ms):  329001
Model building time (ms): 1999.92
Solution time (ms):       327001
Max virtual mem (bytes):  0
Max resident mem (bytes): 0
Max private mem (bytes):  0
ALL CORRECT
[SATBackend] Stats for last run:
      [solution stats]
      successful? ---------------------> true
      elapsed time (s) ----------------> 329.818
      model building time (s) ---------> 1.999
      solution time (s) ---------------> 327.001
      max memory usage (MiB) ----------> 0.0
      [SAT-specific solution stats]
      initial number of nodes ---------> -1
      number of nodes after opts ------> -1
      number of controls --------------> -1
      total number of control bits ----> -1

[SATBackend] Solver exit value: 0
[SATBackend] Not Deleting
/* BEGIN PACKAGE SuffixArrayTest*/
package SuffixArrayTest{
  /*SuffixA..ayTest.sk:7*/
  
void _main ()/*SuffixA..ayTest.sk:7*/
  {
    int self_s48 = 0;
    Object@meta(self_s48);
    Object@Object self_s50 = null;
    Object_Object@Object(new Object@Object(__cid=self_s48), self_s50);
    testLRS@SuffixArrayTest(self_s50);
  }
  /*SuffixA..ayTest.sk:7*/
  
void main__Wrapper ()  implements main__WrapperNospec/*SuffixA..ayTest.sk:7*/
  {
    _main();
  }
  /*SuffixA..ayTest.sk:7*/
  
void main__WrapperNospec ()/*SuffixA..ayTest.sk:7*/
  { }
  /*SuffixA..ayTest.sk:15*/
  
void testLRS (Object self)/*SuffixA..ayTest.sk:15*/
  {
    int s_s52 = 0;
    String@meta(s_s52);
    Object@Object s_s54 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=7), A={'a','a','b','a','a','b','\0'}), s_s54);
    Object@Object s_s56 = null;
    String_String_char_int_int@String(new Object@Object(__cid=s_s52), s_s54, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=6), s_s56);
    int sa_s58 = 0;
    SuffixArray@meta(sa_s58);
    Object@Object sa_s60 = null;
    SuffixArray_SuffixArray_String@SuffixArray(new Object@Object(__cid=sa_s58), s_s56, sa_s60);
    int lrss_s62 = 0;
    SuffixArray@meta(lrss_s62);
    Object@Object _pac_sc_s63 = null;
    if((sa_s60.__cid) == (new Object@Object(__cid=-2, _int=lrss_s62)._int))/*SuffixA..ayTest.sk:20*/
    {
      Object@Object lrss_s65 = null;
      lrs@SuffixArray(sa_s60, lrss_s65);
      _pac_sc_s63 = lrss_s65;
    }
    else
    {
      _pac_sc_s63 = null;
    }
    Object@Object size_s67 = null;
    xform_size_TreeSet@TreeSet(_pac_sc_s63._treeset, size_s67);
    int size;
    size = size_s67._int;
    assert (1 == size); //Assert at SuffixA..ayTest.sk:22 (2)
    int cont1_s69 = 0;
    String@meta(cont1_s69);
    Object@Object cont1_s71 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=4), A={'a','a','b','\0'}), cont1_s71);
    Object@Object cont1_s73 = null;
    String_String_char_int_int@String(new Object@Object(__cid=cont1_s69), cont1_s71, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=3), cont1_s73);
    Object@Object cont1_s75 = null;
    xform_contains_TreeSet_Object@TreeSet(_pac_sc_s63._treeset, cont1_s73, cont1_s75);
    assert (cont1_s75._bit); //Assert at SuffixA..ayTest.sk:26 (2)
    int s_s77 = 0;
    String@meta(s_s77);
    Object@Object s_s79 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=8), A={'a','b','c','d','e','f','g','\0'}), s_s79);
    Object@Object s_s81 = null;
    String_String_char_int_int@String(new Object@Object(__cid=s_s77), s_s79, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=7), s_s81);
    int sa_s83 = 0;
    SuffixArray@meta(sa_s83);
    Object@Object sa_s85 = null;
    SuffixArray_SuffixArray_String@SuffixArray(new Object@Object(__cid=sa_s83), s_s81, sa_s85);
    int lrss_s87 = 0;
    SuffixArray@meta(lrss_s87);
    Object@Object _pac_sc_s88 = null;
    if((sa_s85.__cid) == (new Object@Object(__cid=-2, _int=lrss_s87)._int))/*SuffixA..ayTest.sk:29*/
    {
      Object@Object lrss_s90 = null;
      lrs@SuffixArray(sa_s85, lrss_s90);
      _pac_sc_s88 = lrss_s90;
    }
    else
    {
      _pac_sc_s88 = null;
    }
    Object@Object size_s92 = null;
    xform_size_TreeSet@TreeSet(_pac_sc_s88._treeset, size_s92);
    size = size_s92._int;
    assert (0 == size); //Assert at SuffixA..ayTest.sk:31 (2)
    int s_s94 = 0;
    String@meta(s_s94);
    Object@Object s_s96 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=5), A={'a','b','c','a','\0'}), s_s96);
    Object@Object s_s98 = null;
    String_String_char_int_int@String(new Object@Object(__cid=s_s94), s_s96, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=4), s_s98);
    int sa_s100 = 0;
    SuffixArray@meta(sa_s100);
    Object@Object sa_s102 = null;
    SuffixArray_SuffixArray_String@SuffixArray(new Object@Object(__cid=sa_s100), s_s98, sa_s102);
    int lrss_s104 = 0;
    SuffixArray@meta(lrss_s104);
    Object@Object _pac_sc_s105 = null;
    if((sa_s102.__cid) == (new Object@Object(__cid=-2, _int=lrss_s104)._int))/*SuffixA..ayTest.sk:35*/
    {
      Object@Object lrss_s107 = null;
      lrs@SuffixArray(sa_s102, lrss_s107);
      _pac_sc_s105 = lrss_s107;
    }
    else
    {
      _pac_sc_s105 = null;
    }
    Object@Object size_s109 = null;
    xform_size_TreeSet@TreeSet(_pac_sc_s105._treeset, size_s109);
    size = size_s109._int;
    assert (1 == size); //Assert at SuffixA..ayTest.sk:37 (2)
    int cont1_s111 = 0;
    String@meta(cont1_s111);
    Object@Object cont1_s113 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'a','\0'}), cont1_s113);
    Object@Object cont1_s115 = null;
    String_String_char_int_int@String(new Object@Object(__cid=cont1_s111), cont1_s113, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), cont1_s115);
    Object@Object cont1_s117 = null;
    xform_contains_TreeSet_Object@TreeSet(_pac_sc_s105._treeset, cont1_s115, cont1_s117);
    assert (cont1_s117._bit); //Assert at SuffixA..ayTest.sk:41 (2)
    int s_s119 = 0;
    String@meta(s_s119);
    Object@Object s_s121 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=6), A={'a','b','c','b','a','\0'}), s_s121);
    Object@Object s_s123 = null;
    String_String_char_int_int@String(new Object@Object(__cid=s_s119), s_s121, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=5), s_s123);
    int sa_s125 = 0;
    SuffixArray@meta(sa_s125);
    Object@Object sa_s127 = null;
    SuffixArray_SuffixArray_String@SuffixArray(new Object@Object(__cid=sa_s125), s_s123, sa_s127);
    int lrss_s129 = 0;
    SuffixArray@meta(lrss_s129);
    Object@Object _pac_sc_s130 = null;
    if((sa_s127.__cid) == (new Object@Object(__cid=-2, _int=lrss_s129)._int))/*SuffixA..ayTest.sk:44*/
    {
      Object@Object lrss_s132 = null;
      lrs@SuffixArray(sa_s127, lrss_s132);
      _pac_sc_s130 = lrss_s132;
    }
    else
    {
      _pac_sc_s130 = null;
    }
    Object@Object size_s134 = null;
    xform_size_TreeSet@TreeSet(_pac_sc_s130._treeset, size_s134);
    size = size_s134._int;
    assert (2 == size); //Assert at SuffixA..ayTest.sk:46 (2)
    int cont1_s136 = 0;
    String@meta(cont1_s136);
    Object@Object cont1_s138 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'a','\0'}), cont1_s138);
    Object@Object cont1_s140 = null;
    String_String_char_int_int@String(new Object@Object(__cid=cont1_s136), cont1_s138, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), cont1_s140);
    Object@Object cont1_s142 = null;
    xform_contains_TreeSet_Object@TreeSet(_pac_sc_s130._treeset, cont1_s140, cont1_s142);
    int cont2_s144 = 0;
    String@meta(cont2_s144);
    Object@Object cont2_s146 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'b','\0'}), cont2_s146);
    Object@Object cont2_s148 = null;
    String_String_char_int_int@String(new Object@Object(__cid=cont2_s144), cont2_s146, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), cont2_s148);
    Object@Object cont2_s150 = null;
    xform_contains_TreeSet_Object@TreeSet(_pac_sc_s130._treeset, cont2_s148, cont2_s150);
    assert (cont1_s142._bit); //Assert at SuffixA..ayTest.sk:52 (2)
    assert (cont2_s150._bit); //Assert at SuffixA..ayTest.sk:53 (2)
    int s_s152 = 0;
    String@meta(s_s152);
    Object@Object s_s154 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=7), A={'a','Z','Z','b','Y','Y','\0'}), s_s154);
    Object@Object s_s156 = null;
    String_String_char_int_int@String(new Object@Object(__cid=s_s152), s_s154, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=6), s_s156);
    int sa_s158 = 0;
    SuffixArray@meta(sa_s158);
    Object@Object sa_s160 = null;
    SuffixArray_SuffixArray_String@SuffixArray(new Object@Object(__cid=sa_s158), s_s156, sa_s160);
    int lrss_s162 = 0;
    SuffixArray@meta(lrss_s162);
    Object@Object _pac_sc_s163 = null;
    if((sa_s160.__cid) == (new Object@Object(__cid=-2, _int=lrss_s162)._int))/*SuffixA..ayTest.sk:57*/
    {
      Object@Object lrss_s165 = null;
      lrs@SuffixArray(sa_s160, lrss_s165);
      _pac_sc_s163 = lrss_s165;
    }
    else
    {
      _pac_sc_s163 = null;
    }
    Object@Object size_s167 = null;
    xform_size_TreeSet@TreeSet(_pac_sc_s163._treeset, size_s167);
    size = size_s167._int;
    assert (2 == size); //Assert at SuffixA..ayTest.sk:59 (2)
    int cont1_s169 = 0;
    String@meta(cont1_s169);
    Object@Object cont1_s171 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'Z','\0'}), cont1_s171);
    Object@Object cont1_s173 = null;
    String_String_char_int_int@String(new Object@Object(__cid=cont1_s169), cont1_s171, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), cont1_s173);
    Object@Object cont1_s175 = null;
    xform_contains_TreeSet_Object@TreeSet(_pac_sc_s163._treeset, cont1_s173, cont1_s175);
    int cont2_s177 = 0;
    String@meta(cont2_s177);
    Object@Object cont2_s179 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'Y','\0'}), cont2_s179);
    Object@Object cont2_s181 = null;
    String_String_char_int_int@String(new Object@Object(__cid=cont2_s177), cont2_s179, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), cont2_s181);
    Object@Object cont2_s183 = null;
    xform_contains_TreeSet_Object@TreeSet(_pac_sc_s163._treeset, cont2_s181, cont2_s183);
    assert (cont1_s175._bit); //Assert at SuffixA..ayTest.sk:65 (2)
    assert (cont2_s183._bit); //Assert at SuffixA..ayTest.sk:66 (2)
  }
  /* END PACKAGE SuffixArrayTest*/
}
/* BEGIN PACKAGE ANONYMOUS*/
/* END PACKAGE ANONYMOUS*/
/* BEGIN PACKAGE SuffixRankTuple*/
package SuffixRankTuple{
  /*SuffixR..kTuple.sk:3*/
  
void SuffixRankTuple_SuffixRankTuple (Object self, ref Object _out)/*SuffixR..kTuple.sk:3*/
  {
    _out = self;
    return;
  }
  /*SuffixR..kTuple.sk:7*/
  
void compareTo_SuffixRankTuple (Object self, Object other, ref Object _out)/*SuffixR..kTuple.sk:7*/
  {
    Object@Object cmp_s185 = null;
    compare_int_int@Integer(self.firstHalf_SuffixRankTuple, other.firstHalf_SuffixRankTuple, cmp_s185);
    Object@Object cmp;
    cmp = cmp_s185;
    if((cmp_s185._int) == (new Object@Object(__cid=-2, _int=0)._int))/*SuffixR..kTuple.sk:9*/
    {
      Object@Object cmp_s187 = null;
      compare_int_int@Integer(self.secondHalf_SuffixRankTuple, other.secondHalf_SuffixRankTuple, cmp_s187);
      cmp = cmp_s187;
    }
    if((cmp._int) == (new Object@Object(__cid=-2, _int=0)._int))/*SuffixR..kTuple.sk:10*/
    {
      Object@Object _out_s189 = null;
      compare_int_int@Integer(self.originalIndex_SuffixRankTuple, other.originalIndex_SuffixRankTuple, _out_s189);
      _out = _out_s189;
      return;
    }
    _out = cmp;
    return;
  }
  /* END PACKAGE SuffixRankTuple*/
}
/* BEGIN PACKAGE Character*/
package Character{
  /*Character.sk:12*/
  
void charValue (Object self, ref Object _out)/*Character.sk:12*/
  {
    _out = self.value_Character;
    return;
  }
  /*Character.sk:16*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*Character.sk:16*/
  {
    int _out_s197 = 0;
    Character@meta(_out_s197);
    if((obj.__cid) == _out_s197)/*Character.sk:17*/
    {
      int _out_s199 = 0;
      Character@meta(_out_s199);
      Object@Object _pac_sc_s200 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=_out_s199)._int))/*Character.sk:18*/
      {
        Object@Object _out_s202 = null;
        charValue@Character(obj, _out_s202);
        _pac_sc_s200 = _out_s202;
      }
      else
      {
        _pac_sc_s200 = null;
      }
      _out = new Object@Object(__cid=-4, _bit=(self.value_Character._char) == (_pac_sc_s200._char));
      return;
    }
    _out = new Object@Object(__cid=-4, _bit=0);
    return;
  }
  /* END PACKAGE Character*/
}
/* BEGIN PACKAGE HashMap*/
package HashMap{
  struct HashMap {
      @Immutable()
  }
  struct Hashmap extends HashMap@HashMap {
      @Immutable()
  }
  struct Put_object_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      Object v;
      @Immutable()
  }
  struct Putb_object_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      Object v;
      @Immutable()
  }
  struct Get_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      @Immutable()
  }
  /* END PACKAGE HashMap*/
}
/* BEGIN PACKAGE TwoDArray*/
package TwoDArray{
  /*TwoDArray.sk:7*/
  
void TwoDArray_TwoDArray_int_int (Object self, Object n, Object m, ref Object _out)/*TwoDArray.sk:7*/
  {
    self.N_TwoDArray = n;
    self.M_TwoDArray = m;
    Object@Object _out_s382 = null;
    Wrap_Array_int@array(new Array_int@array(length=new Object@Object(__cid=-2, _int=(n._int) * (m._int))), _out_s382);
    self.arr_TwoDArray = _out_s382;
    _out = self;
    return;
  }
  /*TwoDArray.sk:30*/
  
void getRow_int (Object self, Object i, ref Object _out)/*TwoDArray.sk:30*/
  {
    Object@Object count = new Object@Object(__cid=-2, _int=0);
    Object@Object row_s380 = null;
    Wrap_Array_int@array(new Array_int@array(length=self.M_TwoDArray), row_s380);
    _out = row_s380;
    Object@Object j;
    j = new Object@Object(__cid=-2, _int=(i._int) * (self.M_TwoDArray._int));
    bit __sa1 = (j._int) < (((i._int) * (self.M_TwoDArray._int)) + (self.M_TwoDArray._int));
    while(__sa1)
    {
      row_s380._array_int.A[count._int] = self.arr_TwoDArray._array_int.A[j._int];
      count = new Object@Object(__cid=-2, _int=(count._int) + 1);
      j = new Object@Object(__cid=-2, _int=(j._int) + 1);
      __sa1 = (j._int) < (((i._int) * (self.M_TwoDArray._int)) + (self.M_TwoDArray._int));
    }
    return;
  }
  /*TwoDArray.sk:18*/
  
void get_int_int (Object self, Object i, Object j, ref Object _out)/*TwoDArray.sk:18*/
  {
    _out = new Object@Object(__cid=-2, _int=self.arr_TwoDArray._array_int.A[((i._int) * (self.M_TwoDArray._int)) + (j._int)]);
    return;
  }
  /*TwoDArray.sk:22*/
  
void setRow_int_int (Object self, Object i, Object row)/*TwoDArray.sk:22*/
  {
    Object@Object count = new Object@Object(__cid=-2, _int=0);
    Object@Object j;
    j = new Object@Object(__cid=-2, _int=(i._int) * (self.M_TwoDArray._int));
    bit __sa0 = (j._int) < (((i._int) * (self.M_TwoDArray._int)) + (self.M_TwoDArray._int));
    while(__sa0)
    {
      self.arr_TwoDArray._array_int.A[j._int] = row._array_int.A[count._int];
      count = new Object@Object(__cid=-2, _int=(count._int) + 1);
      j = new Object@Object(__cid=-2, _int=(j._int) + 1);
      __sa0 = (j._int) < (((i._int) * (self.M_TwoDArray._int)) + (self.M_TwoDArray._int));
    }
  }
  /*TwoDArray.sk:14*/
  
void set_int_int_int (Object self, Object i, Object j, Object val)/*TwoDArray.sk:14*/
  {
    self.arr_TwoDArray._array_int.A[((i._int) * (self.M_TwoDArray._int)) + (j._int)] = val._int;
  }
  /* END PACKAGE TwoDArray*/
}
/* BEGIN PACKAGE CharSequence*/
package CharSequence{
  /* END PACKAGE CharSequence*/
}
/* BEGIN PACKAGE ArrayList*/
package ArrayList{
  struct ArrayList {
      @Immutable()
  }
  struct Arraylist extends ArrayList@ArrayList {
      @Immutable()
  }
  struct Add_object extends ArrayList@ArrayList {
      ArrayList self;
      Object e;
      @Immutable()
  }
  struct Addb_object extends ArrayList@ArrayList {
      ArrayList self;
      Object e;
      @Immutable()
  }
  struct Getb_int extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      @Immutable()
  }
  struct Get_int extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      @Immutable()
  }
  struct Size extends ArrayList@ArrayList {
      ArrayList self;
      @Immutable()
  }
  /* END PACKAGE ArrayList*/
}
/* BEGIN PACKAGE String*/
package String{
  /*String.sk:7*/
  
void String_String_char_int_int (Object self, Object ca, Object offset, Object count, ref Object _out)/*String.sk:7*/
  {
    if(((offset._int) > (new Object@Object(__cid=-2, _int=0)._int)) && ((offset._int) < (ca._array_char.length._int)))/*String.sk:8*/
    {
      Object@Object tmp_s407 = null;
      Wrap_Array_char@array(new Array_char@array(length=count), tmp_s407);
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa2 = (i._int) < (count._int);
      while(__sa2)
      {
        tmp_s407._array_char.A[i._int] = ca._array_char.A[(i._int) + (offset._int)];
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa2 = (i._int) < (count._int);
      }
      self._value_String = tmp_s407;
    }
    else
    {
      self._value_String = ca;
    }
    self._count_String = count;
    _out = self;
    return;
  }
  /*String.sk:43*/
  
void charAt_int (Object self, Object index, ref Object _out)/*String.sk:43*/
  {
    if(((new Object@Object(__cid=-2, _int=0)._int) <= (index._int)) && ((index._int) < (self._count_String._int)))/*String.sk:44*/
    {
      _out = new Object@Object(__cid=-3, _char=self._value_String._array_char.A[index._int]);
      return;
    }
    _out = new Object@Object(__cid=-3, _char='\0');
    return;
  }
  /*String.sk:154*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*String.sk:154*/
  {
    _out = new Object@Object(__cid=-4, _bit=0);
    int _out_s409 = 0;
    String@meta(_out_s409);
    if((obj.__cid) == _out_s409)/*String.sk:156*/
    {
      _out = new Object@Object(__cid=-4, _bit=1);
      int sLen_s411 = 0;
      String@meta(sLen_s411);
      Object@Object _pac_sc_s412 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=sLen_s411)._int))/*String.sk:159*/
      {
        Object@Object sLen_s414 = null;
        length@String(obj, sLen_s414);
        _pac_sc_s412 = sLen_s414;
      }
      else
      {
        _pac_sc_s412 = null;
      }
      int tLen_s416 = 0;
      String@meta(tLen_s416);
      Object@Object _pac_sc_s417 = null;
      if((self.__cid) == (new Object@Object(__cid=-2, _int=tLen_s416)._int))/*String.sk:160*/
      {
        Object@Object tLen_s419 = null;
        length@String(self, tLen_s419);
        _pac_sc_s417 = tLen_s419;
      }
      else
      {
        _pac_sc_s417 = null;
      }
      if((_pac_sc_s412._int) != (_pac_sc_s417._int))/*String.sk:161*/
      {
        _out = new Object@Object(__cid=-4, _bit=0);
      }
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa10 = ((i._int) < (_pac_sc_s412._int)) && ((_out._bit) == (new Object@Object(__cid=-4, _bit=1)._bit));
      while(__sa10)
      {
        if((obj._value_String._array_char.A[i._int]) != (self._value_String._array_char.A[i._int]))/*String.sk:163*/
        {
          _out = new Object@Object(__cid=-4, _bit=0);
        }
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa10 = ((i._int) < (_pac_sc_s412._int)) && ((_out._bit) == (new Object@Object(__cid=-4, _bit=1)._bit));
      }
    }
    return;
  }
  /*String.sk:48*/
  
void length (Object self, ref Object _out)/*String.sk:48*/
  {
    _out = self._count_String;
    return;
  }
  /* END PACKAGE String*/
}
/* BEGIN PACKAGE ArrayDeque*/
package ArrayDeque{
  struct ArrayDeque {
      @Immutable()
  }
  struct Arraydeque extends ArrayDeque@ArrayDeque {
      @Immutable()
  }
  struct Peekfirst extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Peekfirsthelp_int_int extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      Object i;
      Object j;
      @Immutable()
  }
  struct Isempty extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Removefirst extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Removefirstb extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Peeklast extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Peeklasthelp_int_int extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      Object i;
      Object j;
      @Immutable()
  }
  struct Removelastb extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Addlastb_object extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      Object e;
      @Immutable()
  }
  struct Removelast extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Addlast_object extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      Object e;
      @Immutable()
  }
  struct Size extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  /* END PACKAGE ArrayDeque*/
}
/* BEGIN PACKAGE Integer*/
package Integer{
  /*Integer.sk:20*/
  
void compare_int_int (Object x, Object y, ref Object _out)/*Integer.sk:20*/
  {
    _out = ((x._int) < (y._int) ? new Object@Object(__cid=-2, _int=-(new Object@Object(__cid=-2, _int=1)._int)) : ((x._int) == (y._int) ? new Object@Object(__cid=-2, _int=0) : new Object@Object(__cid=-2, _int=1)));
    return;
  }
  /*Integer.sk:24*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*Integer.sk:24*/
  {
    int _out_s704 = 0;
    Integer@meta(_out_s704);
    if((obj.__cid) == _out_s704)/*Integer.sk:25*/
    {
      int _out_s706 = 0;
      Integer@meta(_out_s706);
      Object@Object _pac_sc_s707 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=_out_s706)._int))/*Integer.sk:26*/
      {
        Object@Object _out_s709 = null;
        intValue@Integer(obj, _out_s709);
        _pac_sc_s707 = _out_s709;
      }
      else
      {
        _pac_sc_s707 = null;
      }
      _out = new Object@Object(__cid=-4, _bit=(self.value_Integer._int) == (_pac_sc_s707._int));
      return;
    }
    _out = new Object@Object(__cid=-4, _bit=0);
    return;
  }
  /*Integer.sk:12*/
  
void intValue (Object self, ref Object _out)/*Integer.sk:12*/
  {
    _out = self.value_Integer;
    return;
  }
  /* END PACKAGE Integer*/
}
/* BEGIN PACKAGE Assert*/
package Assert{
  /* END PACKAGE Assert*/
}
/* BEGIN PACKAGE array*/
package array{
  struct Array_bit {
      Object length;
      bit[length._int] A;
  }
  struct Array_char {
      Object length;
      char[length._int] A;
  }
  struct Array_int {
      Object length;
      int[length._int] A;
  }
  struct Array_float {
      Object length;
      float[length._int] A;
  }
  struct Array_double {
      Object length;
      double[length._int] A;
  }
  struct Array_Object {
      Object length;
      Object[length._int] A;
  }
  /*array.sk:53*/
  
void Wrap_Array_Object (Array_Object arr, ref Object _out)/*array.sk:53*/
  {
    int _out_s904 = 0;
    Array@meta(_out_s904);
    _out = new Object@Object(__cid=_out_s904, _array_object=arr);
    return;
  }
  /*array.sk:37*/
  
void Wrap_Array_char (Array_char arr, ref Object _out)/*array.sk:37*/
  {
    int _out_s900 = 0;
    Array@meta(_out_s900);
    _out = new Object@Object(__cid=_out_s900, _array_char=arr);
    return;
  }
  /*array.sk:41*/
  
void Wrap_Array_int (Array_int arr, ref Object _out)/*array.sk:41*/
  {
    int _out_s902 = 0;
    Array@meta(_out_s902);
    _out = new Object@Object(__cid=_out_s902, _array_int=arr);
    return;
  }
  /* END PACKAGE array*/
}
/* BEGIN PACKAGE meta*/
package meta{
  /*meta.sk:21*/
  
void Array (ref int _out)/*meta.sk:21*/
  {
    _out = -1;
    return;
  }
  /*meta.sk:4*/
  
void ArrayDeque (ref int _out)/*meta.sk:4*/
  {
    _out = 10;
    return;
  }
  /*meta.sk:5*/
  
void ArrayList (ref int _out)/*meta.sk:5*/
  {
    _out = 17;
    return;
  }
  /*meta.sk:6*/
  
void Arrays (ref int _out)/*meta.sk:6*/
  {
    _out = 15;
    return;
  }
  /*meta.sk:7*/
  
void Assert (ref int _out)/*meta.sk:7*/
  {
    _out = 16;
    return;
  }
  /*meta.sk:8*/
  
void Boolean (ref int _out)/*meta.sk:8*/
  {
    _out = 5;
    return;
  }
  /*meta.sk:10*/
  
void Character (ref int _out)/*meta.sk:10*/
  {
    _out = 12;
    return;
  }
  /*meta.sk:11*/
  
void HashMap (ref int _out)/*meta.sk:11*/
  {
    _out = 13;
    return;
  }
  /*meta.sk:12*/
  
void HashSet (ref int _out)/*meta.sk:12*/
  {
    _out = 14;
    return;
  }
  /*meta.sk:13*/
  
void Integer (ref int _out)/*meta.sk:13*/
  {
    _out = 11;
    return;
  }
  /*meta.sk:14*/
  
void Object (ref int _out)/*meta.sk:14*/
  {
    _out = 1;
    return;
  }
  /*meta.sk:15*/
  
void String (ref int _out)/*meta.sk:15*/
  {
    _out = 6;
    return;
  }
  /*meta.sk:16*/
  
void SuffixArray (ref int _out)/*meta.sk:16*/
  {
    _out = 3;
    return;
  }
  /*meta.sk:17*/
  
void SuffixArrayTest (ref int _out)/*meta.sk:17*/
  {
    _out = 2;
    return;
  }
  /*meta.sk:18*/
  
void SuffixRankTuple (ref int _out)/*meta.sk:18*/
  {
    _out = 7;
    return;
  }
  /*meta.sk:19*/
  
void TreeSet (ref int _out)/*meta.sk:19*/
  {
    _out = 4;
    return;
  }
  /*meta.sk:20*/
  
void TwoDArray (ref int _out)/*meta.sk:20*/
  {
    _out = 8;
    return;
  }
  /* END PACKAGE meta*/
}
/* BEGIN PACKAGE TreeSet*/
package TreeSet{
  struct TreeSet {
      @Immutable()
  }
  struct Treeset extends TreeSet@TreeSet {
      @Immutable()
  }
  struct Add_object extends TreeSet@TreeSet {
      TreeSet self;
      Object e;
      @Immutable()
  }
  struct Addb_object extends TreeSet@TreeSet {
      TreeSet self;
      Object e;
      @Immutable()
  }
  struct Clearb extends TreeSet@TreeSet {
      TreeSet self;
      @Immutable()
  }
  struct Containsb_object extends TreeSet@TreeSet {
      TreeSet self;
      Object e;
      @Immutable()
  }
  struct Clear extends TreeSet@TreeSet {
      TreeSet self;
      @Immutable()
  }
  struct Contains_object extends TreeSet@TreeSet {
      TreeSet self;
      Object e;
      @Immutable()
  }
  struct Size extends TreeSet@TreeSet {
      TreeSet self;
      @Immutable()
  }
  /*TreeSet.sk:14*/
  
void TreeSet_TreeSet (ref Object _out)/*TreeSet.sk:14*/
  {
    int _out_s1010 = 0;
    TreeSet@meta(_out_s1010);
    _out = new Object@Object(__cid=_out_s1010, _treeset=new Treeset());
    return;
  }
  /*TreeSet.sk:18*/
  
void add_Object_Object (Object self, Object e, ref Object _out)/*TreeSet.sk:18*/
  {
    int _out_s1004 = 0;
    TreeSet@meta(_out_s1004);
    _out = new Object@Object(__cid=_out_s1004, _treeset=new Add_object(self=self._treeset, e=e));
    return;
  }
  /*TreeSet.sk:22*/
  
void addb_Object_Object (Object self, Object e, ref Object _out)/*TreeSet.sk:22*/
  {
    int _out_s1002 = 0;
    TreeSet@meta(_out_s1002);
    _out = new Object@Object(__cid=_out_s1002, _treeset=new Addb_object(self=self._treeset, e=e));
    return;
  }
  /*TreeSet.sk:34*/
  
void clear_Object (Object self, ref Object _out)/*TreeSet.sk:34*/
  {
    int _out_s1008 = 0;
    TreeSet@meta(_out_s1008);
    _out = new Object@Object(__cid=_out_s1008, _treeset=new Clear(self=self._treeset));
    return;
  }
  /*TreeSet.sk:26*/
  
void clearb_Object (Object self, ref Object _out)/*TreeSet.sk:26*/
  {
    int _out_s1006 = 0;
    TreeSet@meta(_out_s1006);
    _out = new Object@Object(__cid=_out_s1006, _treeset=new Clearb(self=self._treeset));
    return;
  }
  /*TreeSet.sk:170*/
  
void xform_contains_TreeSet_Object (TreeSet self, Object e, ref Object _out)/*TreeSet.sk:170*/
  {
    switch(self){/*TreeSet.sk:171*/
      case Treeset:
      {
        _out = new Object@Object(__cid=-4, _bit=0);
        return;
      }
      case Add_object:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:171 ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:175 Assert at TreeSet.sk:175 (1)
      case Addb_object:
      {
        int _out_s912 = 0;
        TwoDArray@meta(_out_s912);
        Object@Object _pac_sc_s913 = null;
        if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s912)._int))/*TreeSet.sk:177*/
        {
          Object@Object _out_s915 = null;
          equals_Object@Object(self.e, e, _out_s915);
          _pac_sc_s913 = _out_s915;
        }
        else
        {
          int _out_s917 = 0;
          ArrayDeque@meta(_out_s917);
          Object@Object _pac_sc_s918 = null;
          if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s917)._int))/*TreeSet.sk:177*/
          {
            Object@Object _out_s920 = null;
            equals_Object@Object(self.e, e, _out_s920);
            _pac_sc_s918 = _out_s920;
          }
          else
          {
            int _out_s922 = 0;
            TreeSet@meta(_out_s922);
            Object@Object _pac_sc_s923 = null;
            if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s922)._int))/*TreeSet.sk:177*/
            {
              Object@Object _out_s925 = null;
              equals_Object@Object(self.e, e, _out_s925);
              _pac_sc_s923 = _out_s925;
            }
            else
            {
              int _out_s927 = 0;
              ArrayList@meta(_out_s927);
              Object@Object _pac_sc_s928 = null;
              if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s927)._int))/*TreeSet.sk:177*/
              {
                Object@Object _out_s930 = null;
                equals_Object@Object(self.e, e, _out_s930);
                _pac_sc_s928 = _out_s930;
              }
              else
              {
                int _out_s932 = 0;
                HashSet@meta(_out_s932);
                Object@Object _pac_sc_s933 = null;
                if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s932)._int))/*TreeSet.sk:177*/
                {
                  Object@Object _out_s935 = null;
                  equals_Object@Object(self.e, e, _out_s935);
                  _pac_sc_s933 = _out_s935;
                }
                else
                {
                  int _out_s937 = 0;
                  SuffixArrayTest@meta(_out_s937);
                  Object@Object _pac_sc_s938 = null;
                  if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s937)._int))/*TreeSet.sk:177*/
                  {
                    Object@Object _out_s940 = null;
                    equals_Object@Object(self.e, e, _out_s940);
                    _pac_sc_s938 = _out_s940;
                  }
                  else
                  {
                    int _out_s942 = 0;
                    HashMap@meta(_out_s942);
                    Object@Object _pac_sc_s943 = null;
                    if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s942)._int))/*TreeSet.sk:177*/
                    {
                      Object@Object _out_s945 = null;
                      equals_Object@Object(self.e, e, _out_s945);
                      _pac_sc_s943 = _out_s945;
                    }
                    else
                    {
                      int _out_s947 = 0;
                      Arrays@meta(_out_s947);
                      Object@Object _pac_sc_s948 = null;
                      if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s947)._int))/*TreeSet.sk:177*/
                      {
                        Object@Object _out_s950 = null;
                        equals_Object@Object(self.e, e, _out_s950);
                        _pac_sc_s948 = _out_s950;
                      }
                      else
                      {
                        int _out_s952 = 0;
                        Assert@meta(_out_s952);
                        Object@Object _pac_sc_s953 = null;
                        if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s952)._int))/*TreeSet.sk:177*/
                        {
                          Object@Object _out_s955 = null;
                          equals_Object@Object(self.e, e, _out_s955);
                          _pac_sc_s953 = _out_s955;
                        }
                        else
                        {
                          int _out_s957 = 0;
                          Boolean@meta(_out_s957);
                          Object@Object _pac_sc_s958 = null;
                          if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s957)._int))/*TreeSet.sk:177*/
                          {
                            Object@Object _out_s960 = null;
                            equals_Object@Object(self.e, e, _out_s960);
                            _pac_sc_s958 = _out_s960;
                          }
                          else
                          {
                            int _out_s962 = 0;
                            SuffixRankTuple@meta(_out_s962);
                            Object@Object _pac_sc_s963 = null;
                            if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s962)._int))/*TreeSet.sk:177*/
                            {
                              Object@Object _out_s965 = null;
                              equals_Object@Object(self.e, e, _out_s965);
                              _pac_sc_s963 = _out_s965;
                            }
                            else
                            {
                              int _out_s967 = 0;
                              SuffixArray@meta(_out_s967);
                              Object@Object _pac_sc_s968 = null;
                              if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s967)._int))/*TreeSet.sk:177*/
                              {
                                Object@Object _out_s970 = null;
                                equals_Object@Object(self.e, e, _out_s970);
                                _pac_sc_s968 = _out_s970;
                              }
                              else
                              {
                                int _out_s972 = 0;
                                Integer@meta(_out_s972);
                                Object@Object _pac_sc_s973 = null;
                                if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s972)._int))/*TreeSet.sk:177*/
                                {
                                  Object@Object _out_s975 = null;
                                  equals_Object@Integer(self.e, e, _out_s975);
                                  _pac_sc_s973 = _out_s975;
                                }
                                else
                                {
                                  int _out_s977 = 0;
                                  Character@meta(_out_s977);
                                  Object@Object _pac_sc_s978 = null;
                                  if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s977)._int))/*TreeSet.sk:177*/
                                  {
                                    Object@Object _out_s980 = null;
                                    equals_Object@Character(self.e, e, _out_s980);
                                    _pac_sc_s978 = _out_s980;
                                  }
                                  else
                                  {
                                    int _out_s982 = 0;
                                    String@meta(_out_s982);
                                    Object@Object _pac_sc_s983 = null;
                                    if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s982)._int))/*TreeSet.sk:177*/
                                    {
                                      Object@Object _out_s985 = null;
                                      equals_Object@String(self.e, e, _out_s985);
                                      _pac_sc_s983 = _out_s985;
                                    }
                                    else
                                    {
                                      int _out_s987 = 0;
                                      Object@meta(_out_s987);
                                      Object@Object _pac_sc_s988 = null;
                                      if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s987)._int))/*TreeSet.sk:177*/
                                      {
                                        Object@Object _out_s990 = null;
                                        equals_Object@Object(self.e, e, _out_s990);
                                        _pac_sc_s988 = _out_s990;
                                      }
                                      else
                                      {
                                        _pac_sc_s988 = null;
                                      }
                                      _pac_sc_s983 = _pac_sc_s988;
                                    }
                                    _pac_sc_s978 = _pac_sc_s983;
                                  }
                                  _pac_sc_s973 = _pac_sc_s978;
                                }
                                _pac_sc_s968 = _pac_sc_s973;
                              }
                              _pac_sc_s963 = _pac_sc_s968;
                            }
                            _pac_sc_s958 = _pac_sc_s963;
                          }
                          _pac_sc_s953 = _pac_sc_s958;
                        }
                        _pac_sc_s948 = _pac_sc_s953;
                      }
                      _pac_sc_s943 = _pac_sc_s948;
                    }
                    _pac_sc_s938 = _pac_sc_s943;
                  }
                  _pac_sc_s933 = _pac_sc_s938;
                }
                _pac_sc_s928 = _pac_sc_s933;
              }
              _pac_sc_s923 = _pac_sc_s928;
            }
            _pac_sc_s918 = _pac_sc_s923;
          }
          _pac_sc_s913 = _pac_sc_s918;
        }
        Object@Object _pac_sc_s991 = null;
        if(_pac_sc_s913._bit)/*TreeSet.sk:177*/
        {
          _pac_sc_s991 = new Object@Object(__cid=-4, _bit=1);
        }
        else
        {
          Object@Object _out_s993 = null;
          xform_contains_TreeSet_Object(self.self, e, _out_s993);
          _pac_sc_s991 = _out_s993;
        }
        _out = _pac_sc_s991;
        return;
      }
      case Clearb:
      {
        _out = new Object@Object(__cid=-4, _bit=0);
        return;
      }
      case Containsb_object:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:171 ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:182 Assert at TreeSet.sk:182 (1)
      case Clear:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:171 ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:183 Assert at TreeSet.sk:183 (1)
      case Contains_object:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:171 ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:184 Assert at TreeSet.sk:184 (1)
      case Size:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:171 ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:185 Assert at TreeSet.sk:185 (1)
    }
    _out = null;
    return;
  }
  /*TreeSet.sk:111*/
  
void xform_size_TreeSet (TreeSet self, ref Object _out)/*TreeSet.sk:111*/
  {
    switch(self){/*TreeSet.sk:112*/
      case Treeset:
      {
        _out = new Object@Object(__cid=-2, _int=0);
        return;
      }
      case Add_object:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:112 ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:116 Assert at TreeSet.sk:116 (1)
      case Addb_object:
      {
        Object@Object _out_s995 = null;
        xform_contains_TreeSet_Object(self.self, self.e, _out_s995);
        Object@Object _pac_sc_s996 = null;
        if(_out_s995._bit)/*TreeSet.sk:123*/
        {
          Object@Object _out_s998 = null;
          xform_size_TreeSet(self.self, _out_s998);
          _pac_sc_s996 = _out_s998;
        }
        else
        {
          Object@Object _out_s1000 = null;
          xform_size_TreeSet(self.self, _out_s1000);
          _pac_sc_s996 = new Object@Object(__cid=-2, _int=(_out_s1000._int) + (new Object@Object(__cid=-2, _int=1)._int));
        }
        _out = _pac_sc_s996;
        return;
      }
      case Clearb:
      {
        _out = new Object@Object(__cid=-2, _int=0);
        return;
      }
      case Containsb_object:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:112 ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:128 Assert at TreeSet.sk:128 (1)
      case Clear:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:112 ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:129 Assert at TreeSet.sk:129 (1)
      case Contains_object:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:112 ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:130 Assert at TreeSet.sk:130 (1)
      case Size:
        assert (0); //ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:112 ASSERTION CAN NOT BE SATISFIED: TreeSet.sk:131 Assert at TreeSet.sk:131 (1)
    }
    _out = null;
    return;
  }
  /* END PACKAGE TreeSet*/
}
/* BEGIN PACKAGE SuffixArray*/
package SuffixArray{
  /*SuffixArray.sk:7*/
  
void SuffixArray_SuffixArray_String (Object self, Object text, ref Object _out)/*SuffixArray.sk:7*/
  {
    Object@Object _out_s1141 = null;
    toIntArray_String(text, _out_s1141);
    Object@Object _out_s1143 = null;
    SuffixArray_SuffixArray_int(self, _out_s1141, _out_s1143);
    _out = self;
    return;
  }
  /*SuffixArray.sk:12*/
  
void SuffixArray_SuffixArray_int (Object self, Object text, ref Object _out)/*SuffixArray.sk:12*/
  {
    Object@Object _out_s1167 = null;
    clone_int@SuffixArray(self, text, _out_s1167);
    self.T_SuffixArray = _out_s1167;
    self.N_SuffixArray = text._array_int.length;
    construct@SuffixArray(self);
    kasai@SuffixArray(self);
    _out = self;
    return;
  }
  /*SuffixArray.sk:20*/
  
void clone_int (Object self, Object arr, ref Object _out)/*SuffixArray.sk:20*/
  {
    Object@Object l;
    l = arr._array_int.length;
    Object@Object arr_cp_s1211 = null;
    Wrap_Array_int@array(new Array_int@array(length=l), arr_cp_s1211);
    _out = arr_cp_s1211;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa21 = (i._int) < (l._int);
    while(__sa21)
    {
      arr_cp_s1211._array_int.A[i._int] = arr._array_int.A[i._int];
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa21 = (i._int) < (l._int);
    }
    return;
  }
  /*SuffixArray.sk:43*/
  
void construct (Object self)/*SuffixArray.sk:43*/
  {
    Object@Object _out_s1173 = null;
    Wrap_Array_int@array(new Array_int@array(length=self.N_SuffixArray), _out_s1173);
    self.sa_SuffixArray = _out_s1173;
    int suffixRanks_s1175 = 0;
    TwoDArray@meta(suffixRanks_s1175);
    Object@Object suffixRanks_s1177 = null;
    TwoDArray_TwoDArray_int_int@TwoDArray(new Object@Object(__cid=suffixRanks_s1175), new Object@Object(__cid=-2, _int=2), self.N_SuffixArray, suffixRanks_s1177);
    Object@Object ranks_s1179 = null;
    Wrap_Array_Object@array(new Array_Object@array(length=self.N_SuffixArray), ranks_s1179);
    Object@Object ranks;
    ranks = ranks_s1179;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa24 = (i._int) < (self.N_SuffixArray._int);
    while(__sa24)
    {
      int _out_s1181 = 0;
      TwoDArray@meta(_out_s1181);
      if((suffixRanks_s1177.__cid) == (new Object@Object(__cid=-2, _int=_out_s1181)._int))/*SuffixArray.sk:48*/
      {
        set_int_int_int@TwoDArray(suffixRanks_s1177, new Object@Object(__cid=-2, _int=0), i, new Object@Object(__cid=-2, _int=self.T_SuffixArray._array_int.A[i._int]));
      }
      int _out_s1183 = 0;
      SuffixRankTuple@meta(_out_s1183);
      Object@Object _out_s1185 = null;
      SuffixRankTuple_SuffixRankTuple@SuffixRankTuple(new Object@Object(__cid=_out_s1183), _out_s1185);
      ranks_s1179._array_object.A[i._int] = _out_s1185;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa24 = (i._int) < (self.N_SuffixArray._int);
    }
    Object@Object pos = new Object@Object(__cid=-2, _int=1);
    bit __sa25 = (pos._int) < (self.N_SuffixArray._int);
    while(__sa25)
    {
      Object@Object i_0 = new Object@Object(__cid=-2, _int=0);
      bit __sa26 = (i_0._int) < (self.N_SuffixArray._int);
      while(__sa26)
      {
        Object@Object suffixRank = ranks._array_object.A[i_0._int];
        int _out_s1187 = 0;
        TwoDArray@meta(_out_s1187);
        Object@Object _pac_sc_s1188 = null;
        if((suffixRanks_s1177.__cid) == (new Object@Object(__cid=-2, _int=_out_s1187)._int))/*SuffixArray.sk:55*/
        {
          Object@Object _out_s1190 = null;
          get_int_int@TwoDArray(suffixRanks_s1177, new Object@Object(__cid=-2, _int=0), i_0, _out_s1190);
          _pac_sc_s1188 = _out_s1190;
        }
        else
        {
          _pac_sc_s1188 = null;
        }
        suffixRank.firstHalf_SuffixRankTuple = _pac_sc_s1188;
        Object@Object _pac_sc_s1191 = null;
        if(((i_0._int) + (pos._int)) < (self.N_SuffixArray._int))/*SuffixArray.sk:56*/
        {
          int _out_s1193 = 0;
          TwoDArray@meta(_out_s1193);
          Object@Object _pac_sc_s1194 = null;
          if((suffixRanks_s1177.__cid) == (new Object@Object(__cid=-2, _int=_out_s1193)._int))/*SuffixArray.sk:56*/
          {
            Object@Object _out_s1196 = null;
            get_int_int@TwoDArray(suffixRanks_s1177, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=(i_0._int) + (pos._int)), _out_s1196);
            _pac_sc_s1194 = _out_s1196;
          }
          else
          {
            _pac_sc_s1194 = null;
          }
          _pac_sc_s1191 = _pac_sc_s1194;
        }
        else
        {
          _pac_sc_s1191 = new Object@Object(__cid=-2, _int=-(new Object@Object(__cid=-2, _int=1)._int));
        }
        suffixRank.secondHalf_SuffixRankTuple = _pac_sc_s1191;
        suffixRank.originalIndex_SuffixRankTuple = i_0;
        i_0 = new Object@Object(__cid=-2, _int=(i_0._int) + 1);
        __sa26 = (i_0._int) < (self.N_SuffixArray._int);
      }
      Object@Object ranks_s1198 = null;
      sort_SuffixRankTuple_int@Arrays(ranks, ranks._array_object.length, ranks_s1198);
      ranks = ranks_s1198;
      Object@Object newRank = new Object@Object(__cid=-2, _int=0);
      int _out_s1200 = 0;
      TwoDArray@meta(_out_s1200);
      if((suffixRanks_s1177.__cid) == (new Object@Object(__cid=-2, _int=_out_s1200)._int))/*SuffixArray.sk:61*/
      {
        set_int_int_int@TwoDArray(suffixRanks_s1177, new Object@Object(__cid=-2, _int=1), ranks_s1198._array_object.A[new Object@Object(__cid=-2, _int=0)._int].originalIndex_SuffixRankTuple, new Object@Object(__cid=-2, _int=0));
      }
      Object@Object i_1 = new Object@Object(__cid=-2, _int=1);
      bit __sa27 = (i_1._int) < (self.N_SuffixArray._int);
      while(__sa27)
      {
        Object@Object lastSuffixRank = ranks_s1198._array_object.A[(i_1._int) - (new Object@Object(__cid=-2, _int=1)._int)];
        Object@Object currSuffixRank = ranks_s1198._array_object.A[i_1._int];
        if(((currSuffixRank.firstHalf_SuffixRankTuple._int) != (lastSuffixRank.firstHalf_SuffixRankTuple._int)) || ((currSuffixRank.secondHalf_SuffixRankTuple._int) != (lastSuffixRank.secondHalf_SuffixRankTuple._int)))/*SuffixArray.sk:66*/
        {
          newRank = new Object@Object(__cid=-2, _int=(newRank._int) + 1);
        }
        int _out_s1202 = 0;
        TwoDArray@meta(_out_s1202);
        if((suffixRanks_s1177.__cid) == (new Object@Object(__cid=-2, _int=_out_s1202)._int))/*SuffixArray.sk:67*/
        {
          set_int_int_int@TwoDArray(suffixRanks_s1177, new Object@Object(__cid=-2, _int=1), currSuffixRank.originalIndex_SuffixRankTuple, newRank);
        }
        i_1 = new Object@Object(__cid=-2, _int=(i_1._int) + 1);
        __sa27 = (i_1._int) < (self.N_SuffixArray._int);
      }
      int _out_s1204 = 0;
      TwoDArray@meta(_out_s1204);
      if((suffixRanks_s1177.__cid) == (new Object@Object(__cid=-2, _int=_out_s1204)._int))/*SuffixArray.sk:70*/
      {
        int _out_s1206 = 0;
        TwoDArray@meta(_out_s1206);
        Object@Object _pac_sc_s1207 = null;
        if((suffixRanks_s1177.__cid) == (new Object@Object(__cid=-2, _int=_out_s1206)._int))/*SuffixArray.sk:70*/
        {
          Object@Object _out_s1209 = null;
          getRow_int@TwoDArray(suffixRanks_s1177, new Object@Object(__cid=-2, _int=1), _out_s1209);
          _pac_sc_s1207 = _out_s1209;
        }
        else
        {
          _pac_sc_s1207 = null;
        }
        setRow_int_int@TwoDArray(suffixRanks_s1177, new Object@Object(__cid=-2, _int=0), _pac_sc_s1207);
      }
      if((newRank._int) == ((self.N_SuffixArray._int) - (new Object@Object(__cid=-2, _int=1)._int)))/*SuffixArray.sk:72*/
      {
        pos = self.N_SuffixArray;
      }
      pos = new Object@Object(__cid=-2, _int=(pos._int) * (new Object@Object(__cid=-2, _int=2)._int));
      __sa25 = (pos._int) < (self.N_SuffixArray._int);
    }
    Object@Object i_2 = new Object@Object(__cid=-2, _int=0);
    bit __sa28 = (i_2._int) < (self.N_SuffixArray._int);
    while(__sa28)
    {
      self.sa_SuffixArray._array_int.A[i_2._int] = ranks._array_object.A[i_2._int].originalIndex_SuffixRankTuple._int;
      ranks._array_object.A[i_2._int] = null;
      i_2 = new Object@Object(__cid=-2, _int=(i_2._int) + 1);
      __sa28 = (i_2._int) < (self.N_SuffixArray._int);
    }
  }
  /*SuffixArray.sk:83*/
  
void kasai (Object self)/*SuffixArray.sk:83*/
  {
    Object@Object _out_s1169 = null;
    Wrap_Array_int@array(new Array_int@array(length=self.N_SuffixArray), _out_s1169);
    self.lcp_SuffixArray = _out_s1169;
    Object@Object inv_s1171 = null;
    Wrap_Array_int@array(new Array_int@array(length=self.N_SuffixArray), inv_s1171);
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa29 = (i._int) < (self.N_SuffixArray._int);
    while(__sa29)
    {
      inv_s1171._array_int.A[self.sa_SuffixArray._array_int.A[i._int]] = i._int;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa29 = (i._int) < (self.N_SuffixArray._int);
    }
    Object@Object len = new Object@Object(__cid=-2, _int=0);
    Object@Object i_0 = new Object@Object(__cid=-2, _int=0);
    bit __sa30 = (i_0._int) < (self.N_SuffixArray._int);
    while(__sa30)
    {
      if((inv_s1171._array_int.A[i_0._int]) > (new Object@Object(__cid=-2, _int=0)._int))/*SuffixArray.sk:89*/
      {
        Object@Object k = new Object@Object(__cid=-2, _int=self.sa_SuffixArray._array_int.A[(inv_s1171._array_int.A[i_0._int]) - (new Object@Object(__cid=-2, _int=1)._int)]);
        bit __sa31 = ((((i_0._int) + (len._int)) < (self.N_SuffixArray._int)) && (((k._int) + (len._int)) < (self.N_SuffixArray._int))) && ((self.T_SuffixArray._array_int.A[(i_0._int) + (len._int)]) == (self.T_SuffixArray._array_int.A[(k._int) + (len._int)]));
        while(__sa31)
        {
          len = new Object@Object(__cid=-2, _int=(len._int) + 1);
          __sa31 = ((((i_0._int) + (len._int)) < (self.N_SuffixArray._int)) && (((k._int) + (len._int)) < (self.N_SuffixArray._int))) && ((self.T_SuffixArray._array_int.A[(i_0._int) + (len._int)]) == (self.T_SuffixArray._array_int.A[(k._int) + (len._int)]));
        }
        self.lcp_SuffixArray._array_int.A[(inv_s1171._array_int.A[i_0._int]) - (new Object@Object(__cid=-2, _int=1)._int)] = len._int;
        if((len._int) > (new Object@Object(__cid=-2, _int=0)._int))/*SuffixArray.sk:94*/
        {
          len = new Object@Object(__cid=-2, _int=(len._int) - 1);
        }
      }
      i_0 = new Object@Object(__cid=-2, _int=(i_0._int) + 1);
      __sa30 = (i_0._int) < (self.N_SuffixArray._int);
    }
  }
  /*SuffixArray.sk:121*/
  
void lrs (Object self, ref Object _out)/*SuffixArray.sk:121*/
  {
    Object@Object max_len = new Object@Object(__cid=-2, _int=1);
    Object@Object lrss_s1109 = null;
    TreeSet_TreeSet@TreeSet(lrss_s1109);
    _out = lrss_s1109;
    Object@Object tmp_s1111 = null;
    Wrap_Array_char@array(new Array_char@array(length=self.T_SuffixArray._array_int.length), tmp_s1111);
    Object@Object g1 = self.T_SuffixArray._array_int.length;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa32 = (i._int) < (g1._int);
    while(__sa32)
    {
      tmp_s1111._array_char.A[i._int] = new Object@Object(__cid=-3, _char=((char)self.T_SuffixArray._array_int.A[i._int]))._char;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa32 = (i._int) < (g1._int);
    }
    Object@Object g2 = self.T_SuffixArray._array_int.length;
    Object@Object i_0 = new Object@Object(__cid=-2, _int=0);
    bit __sa33 = (i_0._int) < (g2._int);
    while(__sa33)
    {
      if(((self.lcp_SuffixArray._array_int.A[i_0._int]) > (new Object@Object(__cid=-2, _int=0)._int)) && ((self.lcp_SuffixArray._array_int.A[i_0._int]) >= (max_len._int)))/*SuffixArray.sk:133*/
      {
        if((self.lcp_SuffixArray._array_int.A[i_0._int]) > (max_len._int))/*SuffixArray.sk:134*/
        {
          int _out_s1113 = 0;
          TreeSet@meta(_out_s1113);
          if((_out.__cid) == (new Object@Object(__cid=-2, _int=_out_s1113)._int))/*SuffixArray.sk:135*/
          {
            Object@Object _out_s1116 = null;
            clear_Object@TreeSet(_out, _out_s1116);
          }
          int lrss_s1118 = 0;
          TreeSet@meta(lrss_s1118);
          Object@Object _pac_sc_s1119 = null;
          if((_out.__cid) == (new Object@Object(__cid=-2, _int=lrss_s1118)._int))/*SuffixArray.sk:135*/
          {
            Object@Object lrss_s1121 = null;
            clearb_Object@TreeSet(_out, lrss_s1121);
            _pac_sc_s1119 = lrss_s1121;
          }
          else
          {
            _pac_sc_s1119 = null;
          }
          _out = _pac_sc_s1119;
        }
        max_len = new Object@Object(__cid=-2, _int=self.lcp_SuffixArray._array_int.A[i_0._int]);
        int _out_s1123 = 0;
        TreeSet@meta(_out_s1123);
        if((_out.__cid) == (new Object@Object(__cid=-2, _int=_out_s1123)._int))/*SuffixArray.sk:138*/
        {
          int _out_s1126 = 0;
          String@meta(_out_s1126);
          Object@Object _out_s1128 = null;
          String_String_char_int_int@String(new Object@Object(__cid=_out_s1126), tmp_s1111, new Object@Object(__cid=-2, _int=self.sa_SuffixArray._array_int.A[i_0._int]), max_len, _out_s1128);
          Object@Object _out_s1130 = null;
          add_Object_Object@TreeSet(_out, _out_s1128, _out_s1130);
        }
        int lrss_s1132 = 0;
        TreeSet@meta(lrss_s1132);
        Object@Object _pac_sc_s1133 = null;
        if((_out.__cid) == (new Object@Object(__cid=-2, _int=lrss_s1132)._int))/*SuffixArray.sk:138*/
        {
          int lrss_s1135 = 0;
          String@meta(lrss_s1135);
          Object@Object lrss_s1137 = null;
          String_String_char_int_int@String(new Object@Object(__cid=lrss_s1135), tmp_s1111, new Object@Object(__cid=-2, _int=self.sa_SuffixArray._array_int.A[i_0._int]), max_len, lrss_s1137);
          Object@Object lrss_s1139 = null;
          addb_Object_Object@TreeSet(_out, lrss_s1137, lrss_s1139);
          _pac_sc_s1133 = lrss_s1139;
        }
        else
        {
          _pac_sc_s1133 = null;
        }
        _out = _pac_sc_s1133;
      }
      i_0 = new Object@Object(__cid=-2, _int=(i_0._int) + 1);
      __sa33 = (i_0._int) < (g2._int);
    }
    return;
  }
  /*SuffixArray.sk:37*/
  
void toIntArray_String (Object s, ref Object _out)/*SuffixArray.sk:37*/
  {
    int text_s1145 = 0;
    String@meta(text_s1145);
    Object@Object _pac_sc_s1146 = null;
    if((s.__cid) == (new Object@Object(__cid=-2, _int=text_s1145)._int))/*SuffixArray.sk:38*/
    {
      Object@Object text_s1148 = null;
      length@String(s, text_s1148);
      _pac_sc_s1146 = text_s1148;
    }
    else
    {
      _pac_sc_s1146 = null;
    }
    Object@Object text_s1150 = null;
    Wrap_Array_int@array(new Array_int@array(length=_pac_sc_s1146), text_s1150);
    _out = text_s1150;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    int __sa23_s1152 = 0;
    String@meta(__sa23_s1152);
    Object@Object _pac_sc_s1153 = null;
    if((s.__cid) == (new Object@Object(__cid=-2, _int=__sa23_s1152)._int))/*SuffixArray.sk:39*/
    {
      Object@Object __sa23_s1155 = null;
      length@String(s, __sa23_s1155);
      _pac_sc_s1153 = __sa23_s1155;
    }
    else
    {
      _pac_sc_s1153 = null;
    }
    bit __sa23 = (i._int) < (_pac_sc_s1153._int);
    while(__sa23)
    {
      int _out_s1157 = 0;
      String@meta(_out_s1157);
      Object@Object _pac_sc_s1158 = null;
      if((s.__cid) == (new Object@Object(__cid=-2, _int=_out_s1157)._int))/*SuffixArray.sk:39*/
      {
        Object@Object _out_s1160 = null;
        charAt_int@String(s, i, _out_s1160);
        _pac_sc_s1158 = _out_s1160;
      }
      else
      {
        _pac_sc_s1158 = null;
      }
      text_s1150._array_int.A[i._int] = _pac_sc_s1158._char;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      int __sa23_s1162 = 0;
      String@meta(__sa23_s1162);
      Object@Object _pac_sc_s1163 = null;
      if((s.__cid) == (new Object@Object(__cid=-2, _int=__sa23_s1162)._int))/*SuffixArray.sk:39*/
      {
        Object@Object __sa23_s1165 = null;
        length@String(s, __sa23_s1165);
        _pac_sc_s1163 = __sa23_s1165;
      }
      else
      {
        _pac_sc_s1163 = null;
      }
      __sa23 = (i._int) < (_pac_sc_s1163._int);
    }
    return;
  }
  /* END PACKAGE SuffixArray*/
}
/* BEGIN PACKAGE Object*/
package Object{
  struct Object {
      int __cid;
      Object _value_String;
      Object _count_String;
      Object value_Character;
      Object value_Integer;
      Object N_SuffixArray;
      Object T_SuffixArray;
      Object sa_SuffixArray;
      Object lcp_SuffixArray;
      Object originalIndex_SuffixRankTuple;
      Object secondHalf_SuffixRankTuple;
      Object firstHalf_SuffixRankTuple;
      Object bool_Boolean;
      Object M_TwoDArray;
      Object arr_TwoDArray;
      Object N_TwoDArray;
      HashMap _hashmap;
      HashSet _hashset;
      ArrayList _arraylist;
      TreeSet _treeset;
      ArrayDeque _arraydeque;
      Array_bit _array_bit;
      Array_char _array_char;
      Array_int _array_int;
      Array_float _array_float;
      Array_double _array_double;
      Array_Object _array_object;
      bit _bit;
      char _char;
      int _int;
      float _float;
      double _double;
  }
  /*Object.sk:3*/
  
void Object_Object (Object self, ref Object _out)/*Object.sk:3*/
  {
    _out = self;
    return;
  }
  /*Object.sk:17*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*Object.sk:17*/
  {
    _out = new Object(__cid=-4, _bit=self == obj);
    return;
  }
  /* END PACKAGE Object*/
}
/* BEGIN PACKAGE Boolean*/
package Boolean{
  /* END PACKAGE Boolean*/
}
/* BEGIN PACKAGE Arrays*/
package Arrays{
  /*Arrays.sk:14*/
  
void sort_SuffixRankTuple_int (Object a_0, Object n, ref Object _out)/*Arrays.sk:14*/
  {
    Object@Object a = a_0;
    Object@Object j;
    j = new Object@Object(__cid=-2, _int=0);
    bit __sa43 = (j._int) < ((n._int) - (new Object@Object(__cid=-2, _int=1)._int));
    while(__sa43)
    {
      Object@Object iMin = j;
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=(j._int) + (new Object@Object(__cid=-2, _int=1)._int));
      bit __sa44 = (i._int) < (n._int);
      while(__sa44)
      {
        Object@Object a1 = a._array_object.A[i._int];
        Object@Object a2 = a._array_object.A[iMin._int];
        int cmp_s1681 = 0;
        SuffixRankTuple@meta(cmp_s1681);
        Object@Object _pac_sc_s1682 = null;
        if((a1.__cid) == (new Object@Object(__cid=-2, _int=cmp_s1681)._int))/*Arrays.sk:20*/
        {
          Object@Object cmp_s1684 = null;
          compareTo_SuffixRankTuple@SuffixRankTuple(a1, a2, cmp_s1684);
          _pac_sc_s1682 = cmp_s1684;
        }
        else
        {
          _pac_sc_s1682 = null;
        }
        if((_pac_sc_s1682._int) < (new Object@Object(__cid=-2, _int=0)._int))/*Arrays.sk:21*/
        {
          iMin = i;
        }
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa44 = (i._int) < (n._int);
      }
      if((iMin._int) != (j._int))/*Arrays.sk:25*/
      {
        Object@Object a_s1686 = null;
        swap_SuffixRankTuple_int_int(a, j, iMin, a_s1686);
        a = a_s1686;
      }
      j = new Object@Object(__cid=-2, _int=(j._int) + 1);
      __sa43 = (j._int) < ((n._int) - (new Object@Object(__cid=-2, _int=1)._int));
    }
    _out = a;
    return;
  }
  /*Arrays.sk:7*/
  
void swap_SuffixRankTuple_int_int (Object a, Object i, Object j, ref Object _out)/*Arrays.sk:7*/
  {
    Object@Object tmp = a._array_object.A[i._int];
    a._array_object.A[i._int] = a._array_object.A[j._int];
    a._array_object.A[j._int] = tmp;
    _out = a;
    return;
  }
  /* END PACKAGE Arrays*/
}
/* BEGIN PACKAGE HashSet*/
package HashSet{
  struct HashSet {
      @Immutable()
  }
  struct Hashset extends HashSet@HashSet {
      @Immutable()
  }
  struct Add_object extends HashSet@HashSet {
      HashSet self;
      Object e2;
      @Immutable()
  }
  struct Addb_object extends HashSet@HashSet {
      HashSet self;
      Object e2;
      @Immutable()
  }
  struct Removeb_object extends HashSet@HashSet {
      HashSet self;
      Object e2;
      @Immutable()
  }
  struct Remove_object extends HashSet@HashSet {
      HashSet self;
      Object e2;
      @Immutable()
  }
  struct Size extends HashSet@HashSet {
      HashSet self;
      @Immutable()
  }
  /* END PACKAGE HashSet*/
}
[SKETCH] DONE
Total time = 333692
