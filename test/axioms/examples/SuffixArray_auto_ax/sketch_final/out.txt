SKETCH version 1.7.5
Benchmark = /Users/kathymariano/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/sketch_final/sk_SuffixArrayTest/main.sk
array.sk:5: Making final Array_bit@array.length
array.sk:5: Making final Object._int
array.sk:10: Making final Array_char@array.length
array.sk:15: Making final Array_int@array.length
array.sk:20: Making final Array_float@array.length
array.sk:25: Making final Array_double@array.length
array.sk:30: Making final Array_Object@array.length
[SATBackend] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SATBackend] MAX LOOP UNROLLING = 8
[SATBackend] MAX FUNC INLINING  = 2
estimated size of main__Wrapper_SuffixArrayTest
stmt cnt: 4
callee main_SuffixArrayTest : 15

[SATBackend] After prog.accept(partialEval)
[SATBackend] OFILE = sk_SuffixArrayTest
searching for file null
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/cegis/src/SketchSolver/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/cegis
searching for file cegis/src/SketchSolver/cegis
searching for file ../sketch-backend/src/SketchSolver/cegis
searching for file ../sketch-backend/bindings/cegis
searching for file /Users/kathymariano/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/sketch_final/cegis-1.7.5
searching for file /Users/kathymariano/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/sketch_final/cegis
searching for file /usr/bin/cegis
searching for file /usr/bin/src/SketchSolver/cegis
searching for file /usr/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/bin/../sketch-backend/bindings/cegis
searching for file /bin/cegis
searching for file /bin/src/SketchSolver/cegis
searching for file /bin/../sketch-backend/src/SketchSolver/cegis
searching for file /bin/../sketch-backend/bindings/cegis
searching for file /usr/sbin/cegis
searching for file /usr/sbin/src/SketchSolver/cegis
searching for file /usr/sbin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/sbin/../sketch-backend/bindings/cegis
searching for file /sbin/cegis
searching for file /sbin/src/SketchSolver/cegis
searching for file /sbin/../sketch-backend/src/SketchSolver/cegis
searching for file /sbin/../sketch-backend/bindings/cegis
searching for file /usr/local/bin/cegis
searching for file /usr/local/bin/src/SketchSolver/cegis
searching for file /usr/local/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /usr/local/bin/../sketch-backend/bindings/cegis
searching for file /Applications/Racket v6.10/bin/cegis
searching for file /Applications/Racket v6.10/bin/src/SketchSolver/cegis
searching for file /Applications/Racket v6.10/bin/../sketch-backend/src/SketchSolver/cegis
searching for file /Applications/Racket v6.10/bin/../sketch-backend/bindings/cegis
searching for file /Library/TeX/texbin/cegis
searching for file /Library/TeX/texbin/src/SketchSolver/cegis
searching for file /Library/TeX/texbin/../sketch-backend/src/SketchSolver/cegis
searching for file /Library/TeX/texbin/../sketch-backend/bindings/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/src/SketchSolver/cegis
searching for file /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-frontend/../sketch-backend/src/SketchSolver/cegis
resolved cegis to path /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis
[SATBackend] Launching: /Users/kathymariano/Research/sketch-from-zip/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis --bnd-inbits 5 --boundmode CALLNAME --verbosity 13 --print-version -simiters 4 --assumebcheck --bnd-inline-amnt 2 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /Users/kathymariano/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/sketch_final/tmp/sk_SuffixArrayTest/solution0-0 /Users/kathymariano/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/sketch_final/tmp/sk_SuffixArrayTest/input0.tmp 
Overriding inputs with 5
boundmode = CALLNAME
assuming  bounds checks
SOLVER RAND SEED = 1523664486
 optimization level = 6
Reading SKETCH Program in File /Users/kathymariano/Research/java-sketch2/test/axioms/examples/SuffixArray_auto_ax/sketch_final/tmp/sk_SuffixArrayTest/input0.tmp
CREATING main__Wrapper_SuffixArrayTest
size = 4
after ba size = 4
CREATING main__WrapperNospec_SuffixArrayTest
size = 0
after ba size = 0
CREATING main_SuffixArrayTest
size = 95
after ba size = 95
CREATING Object_meta
size = 3
after ba size = 3
CREATING Object_Object_Object
size = 35
after ba size = 35
CREATING testLRS_SuffixArrayTest
size = 1246
after ba size = 1246
CREATING String_meta
size = 3
after ba size = 3
CREATING Wrap_Array_char_array
size = 45
after ba size = 45
CREATING String_String_char_int_int_String
size = 681
after ba size = 681
CREATING SuffixArray_meta
size = 3
after ba size = 3
CREATING SuffixArray_SuffixArray_String_SuffixArray
size = 124
after ba size = 124
CREATING lrs_SuffixArray
Found Cycle of size 39; Breaking.
Found Cycle of size 36; Breaking.
size = 5764
after ba size = 5764
CREATING xform_size_TreeSet_TreeSet
size = 340
after ba size = 340
CREATING xform_contains_TreeSet_Object_TreeSet
size = 1782
after ba size = 1782
CREATING Array_meta
size = 3
after ba size = 3
CREATING toIntArray_String_SuffixArray
Found Cycle of size 24; Breaking.
size = 1587
after ba size = 1587
CREATING SuffixArray_SuffixArray_int_SuffixArray
size = 176
after ba size = 176
CREATING TreeSet_TreeSet_TreeSet
size = 45
after ba size = 45
CREATING TreeSet_meta
size = 3
after ba size = 3
CREATING clear_Object_TreeSet
size = 51
after ba size = 51
CREATING clearb_Object_TreeSet
size = 51
after ba size = 51
CREATING add_Object_Object_TreeSet
size = 51
after ba size = 51
CREATING addb_Object_Object_TreeSet
size = 52
after ba size = 52
CREATING ArrayDeque_meta
size = 3
after ba size = 3
CREATING equals_Object_Object
size = 43
after ba size = 43
CREATING HashMap_meta
size = 3
after ba size = 3
CREATING SuffixRankTuple_meta
size = 3
after ba size = 3
CREATING ArrayList_meta
size = 3
after ba size = 3
CREATING SuffixArrayTest_meta
size = 3
after ba size = 3
CREATING TwoDArray_meta
size = 3
after ba size = 3
CREATING Integer_meta
size = 3
after ba size = 3
CREATING equals_Object_Integer
Found Cycle of size 5; Breaking.
size = 98
after ba size = 98
CREATING HashSet_meta
size = 3
after ba size = 3
CREATING Boolean_meta
size = 3
after ba size = 3
CREATING equals_Object_String
Found Cycle of size 5; Breaking.
size = 894
after ba size = 894
CREATING Arrays_meta
size = 3
after ba size = 3
CREATING Assert_meta
size = 3
after ba size = 3
CREATING Character_meta
size = 3
after ba size = 3
CREATING equals_Object_Character
Found Cycle of size 5; Breaking.
size = 98
after ba size = 98
CREATING length_String
size = 42
after ba size = 42
CREATING Wrap_Array_int_array
size = 45
after ba size = 45
CREATING charAt_int_String
size = 113
after ba size = 113
CREATING clone_int_SuffixArray
size = 537
after ba size = 537
CREATING construct_SuffixArray
Found Cycle of size 99; Breaking.
Found Cycle of size 26; Breaking.
size = 33974
after ba size = 33974
CREATING kasai_SuffixArray
size = 8464
after ba size = 8464
CREATING intValue_Integer
size = 42
after ba size = 42
CREATING charValue_Character
size = 42
after ba size = 42
CREATING TwoDArray_TwoDArray_int_int_TwoDArray
size = 103
after ba size = 103
CREATING Wrap_Array_Object_array
size = 45
after ba size = 45
CREATING set_int_int_int_TwoDArray
size = 97
after ba size = 97
CREATING SuffixRankTuple_SuffixRankTuple_SuffixRankTuple
size = 35
after ba size = 35
CREATING get_int_int_TwoDArray
size = 97
after ba size = 97
CREATING sort_SuffixRankTuple_int_Arrays
Found Cycle of size 45; Breaking.
Found Cycle of size 51; Breaking.
size = 12743
after ba size = 12743
CREATING getRow_int_TwoDArray
size = 769
after ba size = 769
CREATING setRow_int_int_TwoDArray
size = 728
after ba size = 728
CREATING compareTo_SuffixRankTuple_SuffixRankTuple
size = 271
after ba size = 271
CREATING swap_SuffixRankTuple_int_int_Arrays
size = 88
after ba size = 88
CREATING compare_int_int_Integer
size = 81
after ba size = 81
* before  EVERYTHING: main__WrapperNospec_SuffixArrayTest::SPEC nodes = 0	 main__Wrapper_SuffixArrayTest::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 0 	 input_bits = 0
 Inlining amount = 2
 Inlining functions in the sketch.
inlined 1 new size =9
inlined 3 new size =1109
Found Cycle of size 409; Breaking.
Found Cycle of size 418; Breaking.
Found Cycle of size 424; Breaking.
Found Cycle of size 429; Breaking.
Found Cycle of size 436; Breaking.
Found Cycle of size 440; Breaking.
Found Cycle of size 444; Breaking.
Found Cycle of size 436; Breaking.
Found Cycle of size 420; Breaking.
Found Cycle of size 68; Breaking.
Found Cycle of size 430; Breaking.
Found Cycle of size 423; Breaking.
Found Cycle of size 424; Breaking.
Found Cycle of size 425; Breaking.
Found Cycle of size 427; Breaking.
Found Cycle of size 76; Breaking.
Found Cycle of size 264; Breaking.
Found Cycle of size 79; Breaking.
Found Cycle of size 442; Breaking.
Found Cycle of size 428; Breaking.
Found Cycle of size 423; Breaking.
Found Cycle of size 410; Breaking.
Found Cycle of size 263; Breaking.
Found Cycle of size 261; Breaking.
Found Cycle of size 253; Breaking.
Found Cycle of size 255; Breaking.
Found Cycle of size 395; Breaking.
Found Cycle of size 240; Breaking.
Found Cycle of size 242; Breaking.
inlined 94 new size =152584
Found Cycle of size 192; Breaking.
Found Cycle of size 151; Breaking.
Found Cycle of size 211; Breaking.
Found Cycle of size 159; Breaking.
Found Cycle of size 69; Breaking.
Found Cycle of size 64; Breaking.
Found Cycle of size 67; Breaking.
Found Cycle of size 69; Breaking.
Found Cycle of size 167; Breaking.
Found Cycle of size 63; Breaking.
Found Cycle of size 61; Breaking.
Found Cycle of size 151; Breaking.
Found Cycle of size 95; Breaking.
Found Cycle of size 229; Breaking.
Found Cycle of size 83; Breaking.
Found Cycle of size 41; Breaking.
Found Cycle of size 194; Breaking.
inlined 1005 new size =495521
Got too big, trying harder to concretize before=0  after =0
Found Cycle of size 605; Breaking.
Found Cycle of size 153; Breaking.
Found Cycle of size 66; Breaking.
Found Cycle of size 576; Breaking.
Found Cycle of size 112; Breaking.
Found Cycle of size 580; Breaking.
Found Cycle of size 582; Breaking.
Found Cycle of size 140; Breaking.
Found Cycle of size 291; Breaking.
Found Cycle of size 145; Breaking.
Found Cycle of size 601; Breaking.
Found Cycle of size 590; Breaking.
Found Cycle of size 586; Breaking.
Found Cycle of size 121; Breaking.
Found Cycle of size 573; Breaking.
Found Cycle of size 562; Breaking.
Found Cycle of size 490; Breaking.
inlined 1958 new size =776035
inlined 3263 new size =415310
inlined 18 new size =415279
inlined 0 new size =415279
END OF STEP 0
 Inlining functions in the spec.
inlined 0 new size =0
END OF STEP 0
Bailing out
after Creating Miter: Problem nodes = 30909
* Final Problem size: Problem nodes = 30886
  # OF CONTROLS:    6
 control_ints = 6 	 control_bits = 0
inputSize = 0	ctrlSize = 32
Random seeds = 1
!+ 00100100010000100000000010100101
!+ H__0:36
H__5:0
H__2:33
H__3:0
H__4:2
H__1:82

BEG CHECK
 * After optims it became = 2 was 30886
Assert at SuffixA..ayTest.sk:71 (2)
Simulation found a cex by random testing:  0 ms 
END CHECK
********  0	ftime= 0	ctime= 999.056
!% 
!% 
BEG FIND
Level 1  intsize = 2
 * After optims it became = 30886 was 30886
 * After all optims it became = 30886
 finder  hits = 70981	 bstoreObjs=162289	 sstorePages=171
hitcount 	0	131923	7
hitcount 	1	23843	7
hitcount 	2	666	3
hitcount 	3	2096	7
hitcount 	4	103	6
hitcount 	5	766	8
hitcount 	6	21	8
hitcount 	7	781	8
hitcount 	8	727	5
hitcount 	9	243	7
hitcount 	10	3	8
hitcount 	11	192	8
hitcount 	12	2	10
hitcount 	13	11	8
hitcount 	14	29	8
hitcount 	15	234	9
hitcount 	16	156	8
hitcount 	17	9	6
hitcount 	18	94	8
hitcount 	19	146	7
hitcount 	20	118	4
hitcount 	24	38	6
hitcount 	26	3	0
hitcount 	27	1	4
hitcount 	28	39	4
hitcount 	29	3	1
hitcount 	30	2	6
hitcount 	32	1	4
hitcount 	33	26	4
hitcount 	35	1	4
hitcount 	37	1	4
hitcount 	39	1	6
hitcount 	48	1	3
hitcount 	55	2	0
hitcount 	57	1	2
hitcount 	66	1	2
hitcount 	425	3	9
hitcount 	439	1	6
hitcount 	728	1	6
bucketsPerDepth 	10	6
bucketsPerDepth 	11	30
bucketsPerDepth 	12	140
bucketsPerDepth 	13	243
bucketsPerDepth 	14	252
bucketsPerDepth 	15	180
bucketsPerDepth 	16	107
bucketsPerDepth 	17	38
bucketsPerDepth 	18	20
bucketsPerDepth 	19	6
bucketsPerDepth 	20	1
bucketsPerDepth 	21	1
* TIME TO ADD INPUT :  6000.57 ms 
DECISIONS START = 0
f# %assign: 37 clauses: 523003 learn: 6 restart: 1 decision: 198 propagated: 489439
END FIND
!+ 10000000000000000000000001000000
!+ H__0:1
H__5:0
H__2:0
H__3:0
H__4:0
H__1:1

BEG CHECK
 * After optims it became = 0 was 30886
Simulation no cex:  0 ms 
CONTROL: growing l=2 inputs to size 3
Simulation no cex:  0 ms 
CONTROL: growing l=2 inputs to size 4
Simulation no cex:  0 ms 
CONTROL: growing l=2 inputs to size 5
Simulation no cex:  0 ms 
END CHECK
********  1	ftime= 6000.75	ctime= 0.068
 *GOT THE CORRECT ANSWER IN 2 iterations.
 *FIND TIME 6000.75 CHECK TIME 999.124 TOTAL TIME 6999.87
VALUES H__0: 1, H__1: 1, H__2: 0, H__3: 0, H__4: 0, H__5: 0, 
RESULT = 2  
**ROUND 0 : 0 Round time:  13000.7 ms 
RNDDEG = -1
return 0

----- Statistics -----
Total elapsed time (ms):  15999.4
Model building time (ms): 1999.51
Solution time (ms):       13000.7
Max virtual mem (bytes):  0
Max resident mem (bytes): 0
Max private mem (bytes):  0
ALL CORRECT
[SATBackend] Stats for last run:
      [solution stats]
      successful? ---------------------> true
      elapsed time (s) ----------------> 15.562
      model building time (s) ---------> 1.999
      solution time (s) ---------------> 13.0
      max memory usage (MiB) ----------> 0.0
      [SAT-specific solution stats]
      initial number of nodes ---------> -1
      number of nodes after opts ------> -1
      number of controls --------------> -1
      total number of control bits ----> -1

[SATBackend] Solver exit value: 0
[SATBackend] Not Deleting
/* BEGIN PACKAGE SuffixArrayTest*/
package SuffixArrayTest{
  /*SuffixA..ayTest.sk:8*/
  
void _main ()/*SuffixA..ayTest.sk:8*/
  {
    int self_s35 = 0;
    Object@meta(self_s35);
    Object@Object self_s37 = null;
    Object_Object@Object(new Object@Object(__cid=self_s35), self_s37)//{};
    testLRS@SuffixArrayTest(self_s37);
  }
  /*SuffixA..ayTest.sk:8*/
  
void main__Wrapper ()  implements main__WrapperNospec/*SuffixA..ayTest.sk:8*/
  {
    _main();
  }
  /*SuffixA..ayTest.sk:8*/
  
void main__WrapperNospec ()/*SuffixA..ayTest.sk:8*/
  { }
  /*SuffixA..ayTest.sk:56*/
  
void testLRS (Object self)/*SuffixA..ayTest.sk:56*/
  {
    int s_s39 = 0;
    String@meta(s_s39);
    Object@Object s_s41 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=7), A={'a','a','b','a','a','b','\0'}), s_s41);
    Object@Object s_s43 = null;
    String_String_char_int_int@String(new Object@Object(__cid=s_s39), s_s41, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=6), s_s43)//{};
    int sa_s45 = 0;
    SuffixArray@meta(sa_s45);
    Object@Object sa_s47 = null;
    SuffixArray_SuffixArray_String@SuffixArray(new Object@Object(__cid=sa_s45), s_s43, sa_s47)//{};
    int lrss_s49 = 0;
    SuffixArray@meta(lrss_s49);
    Object@Object _pac_sc_s50 = null;
    if((sa_s47.__cid) == (new Object@Object(__cid=-2, _int=lrss_s49)._int))/*SuffixA..ayTest.sk:68*/
    {
      Object@Object lrss_s52 = null;
      lrs@SuffixArray(sa_s47, lrss_s52);
      _pac_sc_s50 = lrss_s52;
    }
    else
    {
      _pac_sc_s50 = null;
    }
    Object@Object sz_s54 = null;
    xform_size_TreeSet@TreeSet(_pac_sc_s50._treeset, sz_s54);
    int sz;
    sz = sz_s54._int;
    assert (sz == 1); //Assert at SuffixA..ayTest.sk:71 (2)
    int cont1_s56 = 0;
    String@meta(cont1_s56);
    Object@Object cont1_s58 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=4), A={'a','a','b','\0'}), cont1_s58);
    Object@Object cont1_s60 = null;
    String_String_char_int_int@String(new Object@Object(__cid=cont1_s56), cont1_s58, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=3), cont1_s60)//{};
    Object@Object cont1_s62 = null;
    xform_contains_TreeSet_Object@TreeSet(_pac_sc_s50._treeset, cont1_s60, cont1_s62)//{};
    assert (cont1_s62._bit); //Assert at SuffixA..ayTest.sk:75 (2)
    int s_s64 = 0;
    String@meta(s_s64);
    Object@Object s_s66 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=8), A={'a','b','c','d','e','f','g','\0'}), s_s66);
    Object@Object s_s68 = null;
    String_String_char_int_int@String(new Object@Object(__cid=s_s64), s_s66, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=7), s_s68)//{};
    int sa_s70 = 0;
    SuffixArray@meta(sa_s70);
    Object@Object sa_s72 = null;
    SuffixArray_SuffixArray_String@SuffixArray(new Object@Object(__cid=sa_s70), s_s68, sa_s72)//{};
    int lrss_s74 = 0;
    SuffixArray@meta(lrss_s74);
    Object@Object _pac_sc_s75 = null;
    if((sa_s72.__cid) == (new Object@Object(__cid=-2, _int=lrss_s74)._int))/*SuffixA..ayTest.sk:79*/
    {
      Object@Object lrss_s77 = null;
      lrs@SuffixArray(sa_s72, lrss_s77);
      _pac_sc_s75 = lrss_s77;
    }
    else
    {
      _pac_sc_s75 = null;
    }
    Object@Object sz_s79 = null;
    xform_size_TreeSet@TreeSet(_pac_sc_s75._treeset, sz_s79);
    sz = sz_s79._int;
    assert (sz == 0); //Assert at SuffixA..ayTest.sk:81 (2)
    int s_s81 = 0;
    String@meta(s_s81);
    Object@Object s_s83 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=5), A={'a','b','c','a','\0'}), s_s83);
    Object@Object s_s85 = null;
    String_String_char_int_int@String(new Object@Object(__cid=s_s81), s_s83, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=4), s_s85)//{};
    int sa_s87 = 0;
    SuffixArray@meta(sa_s87);
    Object@Object sa_s89 = null;
    SuffixArray_SuffixArray_String@SuffixArray(new Object@Object(__cid=sa_s87), s_s85, sa_s89)//{};
    int lrss_s91 = 0;
    SuffixArray@meta(lrss_s91);
    Object@Object _pac_sc_s92 = null;
    if((sa_s89.__cid) == (new Object@Object(__cid=-2, _int=lrss_s91)._int))/*SuffixA..ayTest.sk:86*/
    {
      Object@Object lrss_s94 = null;
      lrs@SuffixArray(sa_s89, lrss_s94);
      _pac_sc_s92 = lrss_s94;
    }
    else
    {
      _pac_sc_s92 = null;
    }
    Object@Object sz_s96 = null;
    xform_size_TreeSet@TreeSet(_pac_sc_s92._treeset, sz_s96);
    sz = sz_s96._int;
    assert (sz == 1); //Assert at SuffixA..ayTest.sk:88 (2)
    int cont1_s98 = 0;
    String@meta(cont1_s98);
    Object@Object cont1_s100 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=2), A={'a','\0'}), cont1_s100);
    Object@Object cont1_s102 = null;
    String_String_char_int_int@String(new Object@Object(__cid=cont1_s98), cont1_s100, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=1), cont1_s102)//{};
    Object@Object cont1_s104 = null;
    xform_contains_TreeSet_Object@TreeSet(_pac_sc_s92._treeset, cont1_s102, cont1_s104)//{};
    assert (cont1_s104._bit); //Assert at SuffixA..ayTest.sk:92 (2)
  }
  /* END PACKAGE SuffixArrayTest*/
}
/* BEGIN PACKAGE ANONYMOUS*/
/* END PACKAGE ANONYMOUS*/
/* BEGIN PACKAGE SuffixRankTuple*/
package SuffixRankTuple{
  /*SuffixR..kTuple.sk:3*/
  
void SuffixRankTuple_SuffixRankTuple (Object self, ref Object _out)/*SuffixR..kTuple.sk:3*/
  {
    _out = self;
    return;
  }
  /*SuffixR..kTuple.sk:7*/
  
void compareTo_SuffixRankTuple (Object self, Object other, ref Object _out)/*SuffixR..kTuple.sk:7*/
  {
    Object@Object cmp_s106 = null;
    compare_int_int@Integer(self.firstHalf_SuffixRankTuple, other.firstHalf_SuffixRankTuple, cmp_s106);
    Object@Object cmp;
    cmp = cmp_s106;
    if((cmp_s106._int) == (new Object@Object(__cid=-2, _int=0)._int))/*SuffixR..kTuple.sk:9*/
    {
      Object@Object cmp_s108 = null;
      compare_int_int@Integer(self.secondHalf_SuffixRankTuple, other.secondHalf_SuffixRankTuple, cmp_s108);
      cmp = cmp_s108;
    }
    if((cmp._int) == (new Object@Object(__cid=-2, _int=0)._int))/*SuffixR..kTuple.sk:10*/
    {
      Object@Object _out_s110 = null;
      compare_int_int@Integer(self.originalIndex_SuffixRankTuple, other.originalIndex_SuffixRankTuple, _out_s110);
      _out = _out_s110;
      return;
    }
    _out = cmp;
    return;
  }
  /* END PACKAGE SuffixRankTuple*/
}
/* BEGIN PACKAGE Character*/
package Character{
  /*Character.sk:12*/
  
void charValue (Object self, ref Object _out)/*Character.sk:12*/
  {
    _out = self.value_Character;
    return;
  }
  /*Character.sk:16*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*Character.sk:16*/
  {
    int _out_s118 = 0;
    Character@meta(_out_s118);
    if((obj.__cid) == _out_s118)/*Character.sk:17*/
    {
      int _out_s120 = 0;
      Character@meta(_out_s120);
      Object@Object _pac_sc_s121 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=_out_s120)._int))/*Character.sk:18*/
      {
        Object@Object _out_s123 = null;
        charValue@Character(obj, _out_s123);
        _pac_sc_s121 = _out_s123;
      }
      else
      {
        _pac_sc_s121 = null;
      }
      _out = new Object@Object(__cid=-4, _bit=(self.value_Character._char) == (_pac_sc_s121._char));
      return;
    }
    _out = new Object@Object(__cid=-4, _bit=0);
    return;
  }
  /* END PACKAGE Character*/
}
/* BEGIN PACKAGE HashMap*/
package HashMap{
  struct HashMap {
      @Immutable()
  }
  struct Hashmap extends HashMap@HashMap {
      @Immutable()
  }
  struct Put_object_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      Object v;
      @Immutable()
  }
  struct Putb_object_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      Object v;
      @Immutable()
  }
  struct Get_object extends HashMap@HashMap {
      HashMap self;
      Object k;
      @Immutable()
  }
  /* END PACKAGE HashMap*/
}
/* BEGIN PACKAGE TwoDArray*/
package TwoDArray{
  /*TwoDArray.sk:7*/
  
void TwoDArray_TwoDArray_int_int (Object self, Object n, Object m, ref Object _out)/*TwoDArray.sk:7*/
  {
    self.N_TwoDArray = n;
    self.M_TwoDArray = m;
    Object@Object _out_s333 = null;
    Wrap_Array_int@array(new Array_int@array(length=new Object@Object(__cid=-2, _int=(n._int) * (m._int))), _out_s333);
    self.arr_TwoDArray = _out_s333;
    _out = self;
    return;
  }
  /*TwoDArray.sk:30*/
  
void getRow_int (Object self, Object i, ref Object _out)/*TwoDArray.sk:30*/
  {
    Object@Object count = new Object@Object(__cid=-2, _int=0);
    Object@Object row_s331 = null;
    Wrap_Array_int@array(new Array_int@array(length=self.M_TwoDArray), row_s331);
    _out = row_s331;
    Object@Object j;
    j = new Object@Object(__cid=-2, _int=(i._int) * (self.M_TwoDArray._int));
    bit __sa1 = (j._int) < (((i._int) * (self.M_TwoDArray._int)) + (self.M_TwoDArray._int));
    while(__sa1)
    {
      row_s331._array_int.A[count._int] = self.arr_TwoDArray._array_int.A[j._int];
      count = new Object@Object(__cid=-2, _int=(count._int) + 1);
      j = new Object@Object(__cid=-2, _int=(j._int) + 1);
      __sa1 = (j._int) < (((i._int) * (self.M_TwoDArray._int)) + (self.M_TwoDArray._int));
    }
    return;
  }
  /*TwoDArray.sk:18*/
  
void get_int_int (Object self, Object i, Object j, ref Object _out)/*TwoDArray.sk:18*/
  {
    _out = new Object@Object(__cid=-2, _int=self.arr_TwoDArray._array_int.A[((i._int) * (self.M_TwoDArray._int)) + (j._int)]);
    return;
  }
  /*TwoDArray.sk:22*/
  
void setRow_int_int (Object self, Object i, Object row)/*TwoDArray.sk:22*/
  {
    Object@Object count = new Object@Object(__cid=-2, _int=0);
    Object@Object j;
    j = new Object@Object(__cid=-2, _int=(i._int) * (self.M_TwoDArray._int));
    bit __sa0 = (j._int) < (((i._int) * (self.M_TwoDArray._int)) + (self.M_TwoDArray._int));
    while(__sa0)
    {
      self.arr_TwoDArray._array_int.A[j._int] = row._array_int.A[count._int];
      count = new Object@Object(__cid=-2, _int=(count._int) + 1);
      j = new Object@Object(__cid=-2, _int=(j._int) + 1);
      __sa0 = (j._int) < (((i._int) * (self.M_TwoDArray._int)) + (self.M_TwoDArray._int));
    }
  }
  /*TwoDArray.sk:14*/
  
void set_int_int_int (Object self, Object i, Object j, Object val)/*TwoDArray.sk:14*/
  {
    self.arr_TwoDArray._array_int.A[((i._int) * (self.M_TwoDArray._int)) + (j._int)] = val._int;
  }
  /* END PACKAGE TwoDArray*/
}
/* BEGIN PACKAGE CharSequence*/
package CharSequence{
  /* END PACKAGE CharSequence*/
}
/* BEGIN PACKAGE ArrayList*/
package ArrayList{
  struct ArrayList {
      @Immutable()
  }
  struct Arraylist extends ArrayList@ArrayList {
      @Immutable()
  }
  struct Add_object extends ArrayList@ArrayList {
      ArrayList self;
      Object e;
      @Immutable()
  }
  struct Addb_object extends ArrayList@ArrayList {
      ArrayList self;
      Object e;
      @Immutable()
  }
  struct Getb_int extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      @Immutable()
  }
  struct Get_int extends ArrayList@ArrayList {
      ArrayList self;
      Object i;
      @Immutable()
  }
  struct Size extends ArrayList@ArrayList {
      ArrayList self;
      @Immutable()
  }
  /* END PACKAGE ArrayList*/
}
/* BEGIN PACKAGE String*/
package String{
  /*String.sk:7*/
  
void String_String_char_int_int (Object self, Object ca, Object offset, Object count, ref Object _out)/*String.sk:7*/
  {
    if(((offset._int) > (new Object@Object(__cid=-2, _int=0)._int)) && ((offset._int) < (ca._array_char.length._int)))/*String.sk:8*/
    {
      Object@Object tmp_s432 = null;
      Wrap_Array_char@array(new Array_char@array(length=count), tmp_s432);
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa2 = (i._int) < (count._int);
      while(__sa2)
      {
        tmp_s432._array_char.A[i._int] = ca._array_char.A[(i._int) + (offset._int)];
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa2 = (i._int) < (count._int);
      }
      self._value_String = tmp_s432;
    }
    else
    {
      self._value_String = ca;
    }
    self._count_String = count;
    _out = self;
    return;
  }
  /*String.sk:43*/
  
void charAt_int (Object self, Object index, ref Object _out)/*String.sk:43*/
  {
    if(((new Object@Object(__cid=-2, _int=0)._int) <= (index._int)) && ((index._int) < (self._count_String._int)))/*String.sk:44*/
    {
      _out = new Object@Object(__cid=-3, _char=self._value_String._array_char.A[index._int]);
      return;
    }
    _out = new Object@Object(__cid=-3, _char='\0');
    return;
  }
  /*String.sk:154*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*String.sk:154*/
  {
    _out = new Object@Object(__cid=-4, _bit=0);
    int _out_s434 = 0;
    String@meta(_out_s434);
    if((obj.__cid) == _out_s434)/*String.sk:156*/
    {
      _out = new Object@Object(__cid=-4, _bit=1);
      int sLen_s436 = 0;
      String@meta(sLen_s436);
      Object@Object _pac_sc_s437 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=sLen_s436)._int))/*String.sk:159*/
      {
        Object@Object sLen_s439 = null;
        length@String(obj, sLen_s439);
        _pac_sc_s437 = sLen_s439;
      }
      else
      {
        _pac_sc_s437 = null;
      }
      int tLen_s441 = 0;
      String@meta(tLen_s441);
      Object@Object _pac_sc_s442 = null;
      if((self.__cid) == (new Object@Object(__cid=-2, _int=tLen_s441)._int))/*String.sk:160*/
      {
        Object@Object tLen_s444 = null;
        length@String(self, tLen_s444);
        _pac_sc_s442 = tLen_s444;
      }
      else
      {
        _pac_sc_s442 = null;
      }
      if((_pac_sc_s437._int) != (_pac_sc_s442._int))/*String.sk:161*/
      {
        _out = new Object@Object(__cid=-4, _bit=0);
      }
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa10 = ((i._int) < (_pac_sc_s437._int)) && ((_out._bit) == (new Object@Object(__cid=-4, _bit=1)._bit));
      while(__sa10)
      {
        if((obj._value_String._array_char.A[i._int]) != (self._value_String._array_char.A[i._int]))/*String.sk:164*/
        {
          _out = new Object@Object(__cid=-4, _bit=0);
        }
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa10 = ((i._int) < (_pac_sc_s437._int)) && ((_out._bit) == (new Object@Object(__cid=-4, _bit=1)._bit));
      }
    }
    return;
  }
  /*String.sk:48*/
  
void length (Object self, ref Object _out)/*String.sk:48*/
  {
    _out = self._count_String;
    return;
  }
  /* END PACKAGE String*/
}
/* BEGIN PACKAGE ArrayDeque*/
package ArrayDeque{
  struct ArrayDeque {
      @Immutable()
  }
  struct Arraydeque extends ArrayDeque@ArrayDeque {
      @Immutable()
  }
  struct Peekfirst extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Peekfirsthelp_int_int extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      Object i;
      Object j;
      @Immutable()
  }
  struct Isempty extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Removefirst extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Removefirstb extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Peeklast extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Peeklasthelp_int_int extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      Object i;
      Object j;
      @Immutable()
  }
  struct Removelastb extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Addlastb_object extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      Object e;
      @Immutable()
  }
  struct Removelast extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  struct Addlast_object extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      Object e;
      @Immutable()
  }
  struct Size extends ArrayDeque@ArrayDeque {
      ArrayDeque self;
      @Immutable()
  }
  /* END PACKAGE ArrayDeque*/
}
/* BEGIN PACKAGE Integer*/
package Integer{
  /*Integer.sk:20*/
  
void compare_int_int (Object x, Object y, ref Object _out)/*Integer.sk:20*/
  {
    _out = ((x._int) < (y._int) ? new Object@Object(__cid=-2, _int=-(new Object@Object(__cid=-2, _int=1)._int)) : ((x._int) == (y._int) ? new Object@Object(__cid=-2, _int=0) : new Object@Object(__cid=-2, _int=1)));
    return;
  }
  /*Integer.sk:24*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*Integer.sk:24*/
  {
    int _out_s993 = 0;
    Integer@meta(_out_s993);
    if((obj.__cid) == _out_s993)/*Integer.sk:25*/
    {
      int _out_s995 = 0;
      Integer@meta(_out_s995);
      Object@Object _pac_sc_s996 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=_out_s995)._int))/*Integer.sk:26*/
      {
        Object@Object _out_s998 = null;
        intValue@Integer(obj, _out_s998);
        _pac_sc_s996 = _out_s998;
      }
      else
      {
        _pac_sc_s996 = null;
      }
      _out = new Object@Object(__cid=-4, _bit=(self.value_Integer._int) == (_pac_sc_s996._int));
      return;
    }
    _out = new Object@Object(__cid=-4, _bit=0);
    return;
  }
  /*Integer.sk:12*/
  
void intValue (Object self, ref Object _out)/*Integer.sk:12*/
  {
    _out = self.value_Integer;
    return;
  }
  /* END PACKAGE Integer*/
}
/* BEGIN PACKAGE Assert*/
package Assert{
  /* END PACKAGE Assert*/
}
/* BEGIN PACKAGE array*/
package array{
  struct Array_bit {
      Object length;
      bit[length._int] A;
  }
  struct Array_char {
      Object length;
      char[length._int] A;
  }
  struct Array_int {
      Object length;
      int[length._int] A;
  }
  struct Array_float {
      Object length;
      float[length._int] A;
  }
  struct Array_double {
      Object length;
      double[length._int] A;
  }
  struct Array_Object {
      Object length;
      Object[length._int] A;
  }
  /*array.sk:53*/
  
void Wrap_Array_Object (Array_Object arr, ref Object _out)/*array.sk:53*/
  {
    int _out_s1209 = 0;
    Array@meta(_out_s1209);
    _out = new Object@Object(__cid=_out_s1209, _array_object=arr);
    return;
  }
  /*array.sk:37*/
  
void Wrap_Array_char (Array_char arr, ref Object _out)/*array.sk:37*/
  {
    int _out_s1205 = 0;
    Array@meta(_out_s1205);
    _out = new Object@Object(__cid=_out_s1205, _array_char=arr);
    return;
  }
  /*array.sk:41*/
  
void Wrap_Array_int (Array_int arr, ref Object _out)/*array.sk:41*/
  {
    int _out_s1207 = 0;
    Array@meta(_out_s1207);
    _out = new Object@Object(__cid=_out_s1207, _array_int=arr);
    return;
  }
  /* END PACKAGE array*/
}
/* BEGIN PACKAGE meta*/
package meta{
  /*meta.sk:21*/
  
void Array (ref int _out)/*meta.sk:21*/
  {
    _out = -1;
    return;
  }
  /*meta.sk:4*/
  
void ArrayDeque (ref int _out)/*meta.sk:4*/
  {
    _out = 10;
    return;
  }
  /*meta.sk:5*/
  
void ArrayList (ref int _out)/*meta.sk:5*/
  {
    _out = 17;
    return;
  }
  /*meta.sk:6*/
  
void Arrays (ref int _out)/*meta.sk:6*/
  {
    _out = 15;
    return;
  }
  /*meta.sk:7*/
  
void Assert (ref int _out)/*meta.sk:7*/
  {
    _out = 16;
    return;
  }
  /*meta.sk:8*/
  
void Boolean (ref int _out)/*meta.sk:8*/
  {
    _out = 5;
    return;
  }
  /*meta.sk:10*/
  
void Character (ref int _out)/*meta.sk:10*/
  {
    _out = 12;
    return;
  }
  /*meta.sk:11*/
  
void HashMap (ref int _out)/*meta.sk:11*/
  {
    _out = 13;
    return;
  }
  /*meta.sk:12*/
  
void HashSet (ref int _out)/*meta.sk:12*/
  {
    _out = 14;
    return;
  }
  /*meta.sk:13*/
  
void Integer (ref int _out)/*meta.sk:13*/
  {
    _out = 11;
    return;
  }
  /*meta.sk:14*/
  
void Object (ref int _out)/*meta.sk:14*/
  {
    _out = 1;
    return;
  }
  /*meta.sk:15*/
  
void String (ref int _out)/*meta.sk:15*/
  {
    _out = 6;
    return;
  }
  /*meta.sk:16*/
  
void SuffixArray (ref int _out)/*meta.sk:16*/
  {
    _out = 3;
    return;
  }
  /*meta.sk:17*/
  
void SuffixArrayTest (ref int _out)/*meta.sk:17*/
  {
    _out = 2;
    return;
  }
  /*meta.sk:18*/
  
void SuffixRankTuple (ref int _out)/*meta.sk:18*/
  {
    _out = 7;
    return;
  }
  /*meta.sk:19*/
  
void TreeSet (ref int _out)/*meta.sk:19*/
  {
    _out = 4;
    return;
  }
  /*meta.sk:20*/
  
void TwoDArray (ref int _out)/*meta.sk:20*/
  {
    _out = 8;
    return;
  }
  /* END PACKAGE meta*/
}
/* BEGIN PACKAGE TreeSet*/
package TreeSet{
  struct TreeSet {
      @Immutable()
  }
  struct Treeset extends TreeSet@TreeSet {
      @Immutable()
  }
  struct Add_object extends TreeSet@TreeSet {
      TreeSet self;
      Object e;
      @Immutable()
  }
  struct Addb_object extends TreeSet@TreeSet {
      TreeSet self;
      Object e;
      @Immutable()
  }
  struct Clearb extends TreeSet@TreeSet {
      TreeSet self;
      @Immutable()
  }
  struct Containsb_object extends TreeSet@TreeSet {
      TreeSet self;
      Object e;
      @Immutable()
  }
  struct Clear extends TreeSet@TreeSet {
      TreeSet self;
      @Immutable()
  }
  struct Contains_object extends TreeSet@TreeSet {
      TreeSet self;
      Object e;
      @Immutable()
  }
  struct Size extends TreeSet@TreeSet {
      TreeSet self;
      @Immutable()
  }
  /*TreeSet.sk:14*/
  
void TreeSet_TreeSet (ref Object _out)/*TreeSet.sk:14*/
  {
    int _out_s1332 = 0;
    TreeSet@meta(_out_s1332);
    _out = new Object@Object(__cid=_out_s1332, _treeset=new Treeset());
    return;
  }
  /*TreeSet.sk:18*/
  
void add_Object_Object (Object self, Object e, ref Object _out)/*TreeSet.sk:18*/
  {
    int _out_s1326 = 0;
    TreeSet@meta(_out_s1326);
    _out = new Object@Object(__cid=_out_s1326, _treeset=new Add_object(self=self._treeset, e=e));
    return;
  }
  /*TreeSet.sk:22*/
  
void addb_Object_Object (Object self, Object e, ref Object _out)/*TreeSet.sk:22*/
  {
    int _out_s1324 = 0;
    TreeSet@meta(_out_s1324);
    _out = new Object@Object(__cid=_out_s1324, _treeset=new Addb_object(self=self._treeset, e=e));
    return;
  }
  /*TreeSet.sk:34*/
  
void clear_Object (Object self, ref Object _out)/*TreeSet.sk:34*/
  {
    int _out_s1330 = 0;
    TreeSet@meta(_out_s1330);
    _out = new Object@Object(__cid=_out_s1330, _treeset=new Clear(self=self._treeset));
    return;
  }
  /*TreeSet.sk:26*/
  
void clearb_Object (Object self, ref Object _out)/*TreeSet.sk:26*/
  {
    int _out_s1328 = 0;
    TreeSet@meta(_out_s1328);
    _out = new Object@Object(__cid=_out_s1328, _treeset=new Clearb(self=self._treeset));
    return;
  }
  /*TreeSet.sk:181*/
  
void xform_contains_TreeSet_Object (TreeSet self, Object e, ref Object _out)/*TreeSet.sk:181*/
  {
    switch(self){/*TreeSet.sk:182*/
      case Treeset:
      {
        _out = new Object@Object(__cid=-4, _bit=0);
        return;
      }
      case Add_object:
      {
        int _out_s1217 = 0;
        TreeSet@meta(_out_s1217);
        _out = new Object@Object(__cid=_out_s1217, _treeset=self);
        return;
      }
      case Addb_object:
      {
        int _out_s1219 = 0;
        ArrayDeque@meta(_out_s1219);
        Object@Object _pac_sc_s1220 = null;
        if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1219)._int))/*TreeSet.sk:188*/
        {
          Object@Object _out_s1222 = null;
          equals_Object@Object(self.e, e, _out_s1222);
          _pac_sc_s1220 = _out_s1222;
        }
        else
        {
          int _out_s1224 = 0;
          HashMap@meta(_out_s1224);
          Object@Object _pac_sc_s1225 = null;
          if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1224)._int))/*TreeSet.sk:188*/
          {
            Object@Object _out_s1227 = null;
            equals_Object@Object(self.e, e, _out_s1227);
            _pac_sc_s1225 = _out_s1227;
          }
          else
          {
            int _out_s1229 = 0;
            SuffixRankTuple@meta(_out_s1229);
            Object@Object _pac_sc_s1230 = null;
            if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1229)._int))/*TreeSet.sk:188*/
            {
              Object@Object _out_s1232 = null;
              equals_Object@Object(self.e, e, _out_s1232);
              _pac_sc_s1230 = _out_s1232;
            }
            else
            {
              int _out_s1234 = 0;
              ArrayList@meta(_out_s1234);
              Object@Object _pac_sc_s1235 = null;
              if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1234)._int))/*TreeSet.sk:188*/
              {
                Object@Object _out_s1237 = null;
                equals_Object@Object(self.e, e, _out_s1237);
                _pac_sc_s1235 = _out_s1237;
              }
              else
              {
                int _out_s1239 = 0;
                SuffixArrayTest@meta(_out_s1239);
                Object@Object _pac_sc_s1240 = null;
                if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1239)._int))/*TreeSet.sk:188*/
                {
                  Object@Object _out_s1242 = null;
                  equals_Object@Object(self.e, e, _out_s1242);
                  _pac_sc_s1240 = _out_s1242;
                }
                else
                {
                  int _out_s1244 = 0;
                  SuffixArray@meta(_out_s1244);
                  Object@Object _pac_sc_s1245 = null;
                  if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1244)._int))/*TreeSet.sk:188*/
                  {
                    Object@Object _out_s1247 = null;
                    equals_Object@Object(self.e, e, _out_s1247);
                    _pac_sc_s1245 = _out_s1247;
                  }
                  else
                  {
                    int _out_s1249 = 0;
                    TwoDArray@meta(_out_s1249);
                    Object@Object _pac_sc_s1250 = null;
                    if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1249)._int))/*TreeSet.sk:188*/
                    {
                      Object@Object _out_s1252 = null;
                      equals_Object@Object(self.e, e, _out_s1252);
                      _pac_sc_s1250 = _out_s1252;
                    }
                    else
                    {
                      int _out_s1254 = 0;
                      Integer@meta(_out_s1254);
                      Object@Object _pac_sc_s1255 = null;
                      if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1254)._int))/*TreeSet.sk:188*/
                      {
                        Object@Object _out_s1257 = null;
                        equals_Object@Integer(self.e, e, _out_s1257);
                        _pac_sc_s1255 = _out_s1257;
                      }
                      else
                      {
                        int _out_s1259 = 0;
                        HashSet@meta(_out_s1259);
                        Object@Object _pac_sc_s1260 = null;
                        if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1259)._int))/*TreeSet.sk:188*/
                        {
                          Object@Object _out_s1262 = null;
                          equals_Object@Object(self.e, e, _out_s1262);
                          _pac_sc_s1260 = _out_s1262;
                        }
                        else
                        {
                          int _out_s1264 = 0;
                          Boolean@meta(_out_s1264);
                          Object@Object _pac_sc_s1265 = null;
                          if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1264)._int))/*TreeSet.sk:188*/
                          {
                            Object@Object _out_s1267 = null;
                            equals_Object@Object(self.e, e, _out_s1267);
                            _pac_sc_s1265 = _out_s1267;
                          }
                          else
                          {
                            int _out_s1269 = 0;
                            TreeSet@meta(_out_s1269);
                            Object@Object _pac_sc_s1270 = null;
                            if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1269)._int))/*TreeSet.sk:188*/
                            {
                              Object@Object _out_s1272 = null;
                              equals_Object@Object(self.e, e, _out_s1272);
                              _pac_sc_s1270 = _out_s1272;
                            }
                            else
                            {
                              int _out_s1274 = 0;
                              String@meta(_out_s1274);
                              Object@Object _pac_sc_s1275 = null;
                              if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1274)._int))/*TreeSet.sk:188*/
                              {
                                Object@Object _out_s1277 = null;
                                equals_Object@String(self.e, e, _out_s1277);
                                _pac_sc_s1275 = _out_s1277;
                              }
                              else
                              {
                                int _out_s1279 = 0;
                                Arrays@meta(_out_s1279);
                                Object@Object _pac_sc_s1280 = null;
                                if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1279)._int))/*TreeSet.sk:188*/
                                {
                                  Object@Object _out_s1282 = null;
                                  equals_Object@Object(self.e, e, _out_s1282);
                                  _pac_sc_s1280 = _out_s1282;
                                }
                                else
                                {
                                  int _out_s1284 = 0;
                                  Assert@meta(_out_s1284);
                                  Object@Object _pac_sc_s1285 = null;
                                  if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1284)._int))/*TreeSet.sk:188*/
                                  {
                                    Object@Object _out_s1287 = null;
                                    equals_Object@Object(self.e, e, _out_s1287);
                                    _pac_sc_s1285 = _out_s1287;
                                  }
                                  else
                                  {
                                    int _out_s1289 = 0;
                                    Character@meta(_out_s1289);
                                    Object@Object _pac_sc_s1290 = null;
                                    if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1289)._int))/*TreeSet.sk:188*/
                                    {
                                      Object@Object _out_s1292 = null;
                                      equals_Object@Character(self.e, e, _out_s1292);
                                      _pac_sc_s1290 = _out_s1292;
                                    }
                                    else
                                    {
                                      int _out_s1294 = 0;
                                      Object@meta(_out_s1294);
                                      Object@Object _pac_sc_s1295 = null;
                                      if((self.e.__cid) == (new Object@Object(__cid=-2, _int=_out_s1294)._int))/*TreeSet.sk:188*/
                                      {
                                        Object@Object _out_s1297 = null;
                                        equals_Object@Object(self.e, e, _out_s1297);
                                        _pac_sc_s1295 = _out_s1297;
                                      }
                                      else
                                      {
                                        _pac_sc_s1295 = null;
                                      }
                                      _pac_sc_s1290 = _pac_sc_s1295;
                                    }
                                    _pac_sc_s1285 = _pac_sc_s1290;
                                  }
                                  _pac_sc_s1280 = _pac_sc_s1285;
                                }
                                _pac_sc_s1275 = _pac_sc_s1280;
                              }
                              _pac_sc_s1270 = _pac_sc_s1275;
                            }
                            _pac_sc_s1265 = _pac_sc_s1270;
                          }
                          _pac_sc_s1260 = _pac_sc_s1265;
                        }
                        _pac_sc_s1255 = _pac_sc_s1260;
                      }
                      _pac_sc_s1250 = _pac_sc_s1255;
                    }
                    _pac_sc_s1245 = _pac_sc_s1250;
                  }
                  _pac_sc_s1240 = _pac_sc_s1245;
                }
                _pac_sc_s1235 = _pac_sc_s1240;
              }
              _pac_sc_s1230 = _pac_sc_s1235;
            }
            _pac_sc_s1225 = _pac_sc_s1230;
          }
          _pac_sc_s1220 = _pac_sc_s1225;
        }
        Object@Object _pac_sc_s1298 = null;
        if(_pac_sc_s1220._bit)/*TreeSet.sk:188*/
        {
          _pac_sc_s1298 = new Object@Object(__cid=-4, _bit=1);
        }
        else
        {
          Object@Object _out_s1300 = null;
          xform_contains_TreeSet_Object(self.self, e, _out_s1300);
          _pac_sc_s1298 = _out_s1300;
        }
        _out = _pac_sc_s1298;
        return;
      }
      case Clearb:
      {
        _out = new Object@Object(__cid=-4, _bit=0);
        return;
      }
      case Containsb_object:
      {
        int _out_s1302 = 0;
        TreeSet@meta(_out_s1302);
        _out = new Object@Object(__cid=_out_s1302, _treeset=self);
        return;
      }
      case Clear:
      {
        int _out_s1304 = 0;
        TreeSet@meta(_out_s1304);
        _out = new Object@Object(__cid=_out_s1304, _treeset=self);
        return;
      }
      case Contains_object:
      {
        int _out_s1306 = 0;
        TreeSet@meta(_out_s1306);
        _out = new Object@Object(__cid=_out_s1306, _treeset=self);
        return;
      }
      case Size:
      {
        int _out_s1308 = 0;
        TreeSet@meta(_out_s1308);
        _out = new Object@Object(__cid=_out_s1308, _treeset=self);
        return;
      }
    }
    _out = null;
    return;
  }
  /*TreeSet.sk:118*/
  
void xform_size_TreeSet (TreeSet self, ref Object _out)/*TreeSet.sk:118*/
  {
    switch(self){/*TreeSet.sk:119*/
      case Treeset:
      {
        _out = new Object@Object(__cid=-2, _int=0);
        return;
      }
      case Add_object:
      {
        int _out_s1310 = 0;
        TreeSet@meta(_out_s1310);
        _out = new Object@Object(__cid=_out_s1310, _treeset=self);
        return;
      }
      case Addb_object:
      {
        Object@Object b_s1312 = null;
        xform_contains_TreeSet_Object(self.self, self.e, b_s1312);
        Object@Object sz_s1314 = null;
        xform_size_TreeSet(self.self, sz_s1314);
        if(b_s1312._bit)/*TreeSet.sk:127*/
        {
          _out = sz_s1314;
          return;
        }
        else
        {
          _out = new Object@Object(__cid=-2, _int=(sz_s1314._int) + (new Object@Object(__cid=-2, _int=1)._int));
          return;
        }
      }
      case Clearb:
      {
        _out = new Object@Object(__cid=-2, _int=0);
        return;
      }
      case Containsb_object:
      {
        int _out_s1316 = 0;
        TreeSet@meta(_out_s1316);
        _out = new Object@Object(__cid=_out_s1316, _treeset=self);
        return;
      }
      case Clear:
      {
        int _out_s1318 = 0;
        TreeSet@meta(_out_s1318);
        _out = new Object@Object(__cid=_out_s1318, _treeset=self);
        return;
      }
      case Contains_object:
      {
        int _out_s1320 = 0;
        TreeSet@meta(_out_s1320);
        _out = new Object@Object(__cid=_out_s1320, _treeset=self);
        return;
      }
      case Size:
      {
        int _out_s1322 = 0;
        TreeSet@meta(_out_s1322);
        _out = new Object@Object(__cid=_out_s1322, _treeset=self);
        return;
      }
    }
    _out = null;
    return;
  }
  /* END PACKAGE TreeSet*/
}
/* BEGIN PACKAGE SuffixArray*/
package SuffixArray{
  /*SuffixArray.sk:7*/
  
void SuffixArray_SuffixArray_String (Object self, Object text, ref Object _out)/*SuffixArray.sk:7*/
  {
    Object@Object _out_s1561 = null;
    toIntArray_String(text, _out_s1561);
    Object@Object _out_s1563 = null;
    SuffixArray_SuffixArray_int(self, _out_s1561, _out_s1563)//{};
    _out = self;
    return;
  }
  /*SuffixArray.sk:12*/
  
void SuffixArray_SuffixArray_int (Object self, Object text, ref Object _out)/*SuffixArray.sk:12*/
  {
    Object@Object _out_s1587 = null;
    clone_int@SuffixArray(self, text, _out_s1587);
    self.T_SuffixArray = _out_s1587;
    self.N_SuffixArray = text._array_int.length;
    construct@SuffixArray(self);
    kasai@SuffixArray(self);
    _out = self;
    return;
  }
  /*SuffixArray.sk:20*/
  
void clone_int (Object self, Object arr, ref Object _out)/*SuffixArray.sk:20*/
  {
    Object@Object l;
    l = arr._array_int.length;
    Object@Object arr_cp_s1631 = null;
    Wrap_Array_int@array(new Array_int@array(length=l), arr_cp_s1631);
    _out = arr_cp_s1631;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa19 = (i._int) < (l._int);
    while(__sa19)
    {
      arr_cp_s1631._array_int.A[i._int] = arr._array_int.A[i._int];
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa19 = (i._int) < (l._int);
    }
    return;
  }
  /*SuffixArray.sk:43*/
  
void construct (Object self)/*SuffixArray.sk:43*/
  {
    Object@Object _out_s1593 = null;
    Wrap_Array_int@array(new Array_int@array(length=self.N_SuffixArray), _out_s1593);
    self.sa_SuffixArray = _out_s1593;
    int suffixRanks_s1595 = 0;
    TwoDArray@meta(suffixRanks_s1595);
    Object@Object suffixRanks_s1597 = null;
    TwoDArray_TwoDArray_int_int@TwoDArray(new Object@Object(__cid=suffixRanks_s1595), new Object@Object(__cid=-2, _int=2), self.N_SuffixArray, suffixRanks_s1597)//{};
    Object@Object ranks_s1599 = null;
    Wrap_Array_Object@array(new Array_Object@array(length=self.N_SuffixArray), ranks_s1599);
    Object@Object ranks;
    ranks = ranks_s1599;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa22 = (i._int) < (self.N_SuffixArray._int);
    while(__sa22)
    {
      int _out_s1601 = 0;
      TwoDArray@meta(_out_s1601);
      if((suffixRanks_s1597.__cid) == (new Object@Object(__cid=-2, _int=_out_s1601)._int))/*SuffixArray.sk:48*/
      {
        set_int_int_int@TwoDArray(suffixRanks_s1597, new Object@Object(__cid=-2, _int=0), i, new Object@Object(__cid=-2, _int=self.T_SuffixArray._array_int.A[i._int]));
      }
      int _out_s1603 = 0;
      SuffixRankTuple@meta(_out_s1603);
      Object@Object _out_s1605 = null;
      SuffixRankTuple_SuffixRankTuple@SuffixRankTuple(new Object@Object(__cid=_out_s1603), _out_s1605)//{};
      ranks_s1599._array_object.A[i._int] = _out_s1605;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa22 = (i._int) < (self.N_SuffixArray._int);
    }
    Object@Object pos = new Object@Object(__cid=-2, _int=1);
    bit __sa23 = (pos._int) < (self.N_SuffixArray._int);
    while(__sa23)
    {
      Object@Object i_0 = new Object@Object(__cid=-2, _int=0);
      bit __sa24 = (i_0._int) < (self.N_SuffixArray._int);
      while(__sa24)
      {
        Object@Object suffixRank = ranks._array_object.A[i_0._int];
        int _out_s1607 = 0;
        TwoDArray@meta(_out_s1607);
        Object@Object _pac_sc_s1608 = null;
        if((suffixRanks_s1597.__cid) == (new Object@Object(__cid=-2, _int=_out_s1607)._int))/*SuffixArray.sk:55*/
        {
          Object@Object _out_s1610 = null;
          get_int_int@TwoDArray(suffixRanks_s1597, new Object@Object(__cid=-2, _int=0), i_0, _out_s1610);
          _pac_sc_s1608 = _out_s1610;
        }
        else
        {
          _pac_sc_s1608 = null;
        }
        suffixRank.firstHalf_SuffixRankTuple = _pac_sc_s1608;
        Object@Object _pac_sc_s1611 = null;
        if(((i_0._int) + (pos._int)) < (self.N_SuffixArray._int))/*SuffixArray.sk:56*/
        {
          int _out_s1613 = 0;
          TwoDArray@meta(_out_s1613);
          Object@Object _pac_sc_s1614 = null;
          if((suffixRanks_s1597.__cid) == (new Object@Object(__cid=-2, _int=_out_s1613)._int))/*SuffixArray.sk:56*/
          {
            Object@Object _out_s1616 = null;
            get_int_int@TwoDArray(suffixRanks_s1597, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=(i_0._int) + (pos._int)), _out_s1616);
            _pac_sc_s1614 = _out_s1616;
          }
          else
          {
            _pac_sc_s1614 = null;
          }
          _pac_sc_s1611 = _pac_sc_s1614;
        }
        else
        {
          _pac_sc_s1611 = new Object@Object(__cid=-2, _int=-(new Object@Object(__cid=-2, _int=1)._int));
        }
        suffixRank.secondHalf_SuffixRankTuple = _pac_sc_s1611;
        suffixRank.originalIndex_SuffixRankTuple = i_0;
        i_0 = new Object@Object(__cid=-2, _int=(i_0._int) + 1);
        __sa24 = (i_0._int) < (self.N_SuffixArray._int);
      }
      Object@Object ranks_s1618 = null;
      sort_SuffixRankTuple_int@Arrays(ranks, ranks._array_object.length, ranks_s1618);
      ranks = ranks_s1618;
      Object@Object newRank = new Object@Object(__cid=-2, _int=0);
      int _out_s1620 = 0;
      TwoDArray@meta(_out_s1620);
      if((suffixRanks_s1597.__cid) == (new Object@Object(__cid=-2, _int=_out_s1620)._int))/*SuffixArray.sk:61*/
      {
        set_int_int_int@TwoDArray(suffixRanks_s1597, new Object@Object(__cid=-2, _int=1), ranks_s1618._array_object.A[new Object@Object(__cid=-2, _int=0)._int].originalIndex_SuffixRankTuple, new Object@Object(__cid=-2, _int=0));
      }
      Object@Object i_1 = new Object@Object(__cid=-2, _int=1);
      bit __sa25 = (i_1._int) < (self.N_SuffixArray._int);
      while(__sa25)
      {
        Object@Object lastSuffixRank = ranks_s1618._array_object.A[(i_1._int) - (new Object@Object(__cid=-2, _int=1)._int)];
        Object@Object currSuffixRank = ranks_s1618._array_object.A[i_1._int];
        if(((currSuffixRank.firstHalf_SuffixRankTuple._int) != (lastSuffixRank.firstHalf_SuffixRankTuple._int)) || ((currSuffixRank.secondHalf_SuffixRankTuple._int) != (lastSuffixRank.secondHalf_SuffixRankTuple._int)))/*SuffixArray.sk:66*/
        {
          newRank = new Object@Object(__cid=-2, _int=(newRank._int) + 1);
        }
        int _out_s1622 = 0;
        TwoDArray@meta(_out_s1622);
        if((suffixRanks_s1597.__cid) == (new Object@Object(__cid=-2, _int=_out_s1622)._int))/*SuffixArray.sk:67*/
        {
          set_int_int_int@TwoDArray(suffixRanks_s1597, new Object@Object(__cid=-2, _int=1), currSuffixRank.originalIndex_SuffixRankTuple, newRank);
        }
        i_1 = new Object@Object(__cid=-2, _int=(i_1._int) + 1);
        __sa25 = (i_1._int) < (self.N_SuffixArray._int);
      }
      int _out_s1624 = 0;
      TwoDArray@meta(_out_s1624);
      if((suffixRanks_s1597.__cid) == (new Object@Object(__cid=-2, _int=_out_s1624)._int))/*SuffixArray.sk:70*/
      {
        int _out_s1626 = 0;
        TwoDArray@meta(_out_s1626);
        Object@Object _pac_sc_s1627 = null;
        if((suffixRanks_s1597.__cid) == (new Object@Object(__cid=-2, _int=_out_s1626)._int))/*SuffixArray.sk:70*/
        {
          Object@Object _out_s1629 = null;
          getRow_int@TwoDArray(suffixRanks_s1597, new Object@Object(__cid=-2, _int=1), _out_s1629);
          _pac_sc_s1627 = _out_s1629;
        }
        else
        {
          _pac_sc_s1627 = null;
        }
        setRow_int_int@TwoDArray(suffixRanks_s1597, new Object@Object(__cid=-2, _int=0), _pac_sc_s1627)//{};
      }
      if((newRank._int) == ((self.N_SuffixArray._int) - (new Object@Object(__cid=-2, _int=1)._int)))/*SuffixArray.sk:72*/
      {
        pos = self.N_SuffixArray;
      }
      pos = new Object@Object(__cid=-2, _int=(pos._int) * (new Object@Object(__cid=-2, _int=2)._int));
      __sa23 = (pos._int) < (self.N_SuffixArray._int);
    }
    Object@Object i_2 = new Object@Object(__cid=-2, _int=0);
    bit __sa26 = (i_2._int) < (self.N_SuffixArray._int);
    while(__sa26)
    {
      self.sa_SuffixArray._array_int.A[i_2._int] = ranks._array_object.A[i_2._int].originalIndex_SuffixRankTuple._int;
      ranks._array_object.A[i_2._int] = null;
      i_2 = new Object@Object(__cid=-2, _int=(i_2._int) + 1);
      __sa26 = (i_2._int) < (self.N_SuffixArray._int);
    }
  }
  /*SuffixArray.sk:83*/
  
void kasai (Object self)/*SuffixArray.sk:83*/
  {
    Object@Object _out_s1589 = null;
    Wrap_Array_int@array(new Array_int@array(length=self.N_SuffixArray), _out_s1589);
    self.lcp_SuffixArray = _out_s1589;
    Object@Object inv_s1591 = null;
    Wrap_Array_int@array(new Array_int@array(length=self.N_SuffixArray), inv_s1591);
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa27 = (i._int) < (self.N_SuffixArray._int);
    while(__sa27)
    {
      inv_s1591._array_int.A[self.sa_SuffixArray._array_int.A[i._int]] = i._int;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa27 = (i._int) < (self.N_SuffixArray._int);
    }
    Object@Object len = new Object@Object(__cid=-2, _int=0);
    Object@Object i_0 = new Object@Object(__cid=-2, _int=0);
    bit __sa28 = (i_0._int) < (self.N_SuffixArray._int);
    while(__sa28)
    {
      if((inv_s1591._array_int.A[i_0._int]) > (new Object@Object(__cid=-2, _int=0)._int))/*SuffixArray.sk:89*/
      {
        Object@Object k = new Object@Object(__cid=-2, _int=self.sa_SuffixArray._array_int.A[(inv_s1591._array_int.A[i_0._int]) - (new Object@Object(__cid=-2, _int=1)._int)]);
        bit __sa29 = ((((i_0._int) + (len._int)) < (self.N_SuffixArray._int)) && (((k._int) + (len._int)) < (self.N_SuffixArray._int))) && ((self.T_SuffixArray._array_int.A[(i_0._int) + (len._int)]) == (self.T_SuffixArray._array_int.A[(k._int) + (len._int)]));
        while(__sa29)
        {
          len = new Object@Object(__cid=-2, _int=(len._int) + 1);
          __sa29 = ((((i_0._int) + (len._int)) < (self.N_SuffixArray._int)) && (((k._int) + (len._int)) < (self.N_SuffixArray._int))) && ((self.T_SuffixArray._array_int.A[(i_0._int) + (len._int)]) == (self.T_SuffixArray._array_int.A[(k._int) + (len._int)]));
        }
        self.lcp_SuffixArray._array_int.A[(inv_s1591._array_int.A[i_0._int]) - (new Object@Object(__cid=-2, _int=1)._int)] = len._int;
        if((len._int) > (new Object@Object(__cid=-2, _int=0)._int))/*SuffixArray.sk:93*/
        {
          len = new Object@Object(__cid=-2, _int=(len._int) - 1);
        }
      }
      i_0 = new Object@Object(__cid=-2, _int=(i_0._int) + 1);
      __sa28 = (i_0._int) < (self.N_SuffixArray._int);
    }
  }
  /*SuffixArray.sk:98*/
  
void lrs (Object self, ref Object _out)/*SuffixArray.sk:98*/
  {
    Object@Object max_len = new Object@Object(__cid=-2, _int=1);
    Object@Object lrss_s1529 = null;
    TreeSet_TreeSet@TreeSet(lrss_s1529);
    _out = lrss_s1529;
    Object@Object tmp_s1531 = null;
    Wrap_Array_char@array(new Array_char@array(length=self.T_SuffixArray._array_int.length), tmp_s1531);
    Object@Object g1_o = self.T_SuffixArray._array_int.length;
    int g1;
    g1 = g1_o._int;
    for(int i = 1; i < g1; i = i + 1)/*Canonical*/
    {
      tmp_s1531._array_char.A[i] = new Object@Object(__cid=-3, _char=((char)self.T_SuffixArray._array_int.A[i]))._char;
    }
    Object@Object g2_o = self.T_SuffixArray._array_int.length;
    int g2;
    g2 = g2_o._int;
    for(int i_0 = 0; i_0 < g2; i_0 = i_0 + 1)/*Canonical*/
    {
      if(((self.lcp_SuffixArray._array_int.A[i_0]) > (new Object@Object(__cid=-2, _int=0)._int)) && ((self.lcp_SuffixArray._array_int.A[i_0]) >= (max_len._int)))/*SuffixArray.sk:121*/
      {
        if((self.lcp_SuffixArray._array_int.A[i_0]) > (max_len._int))/*SuffixArray.sk:124*/
        {
          int _out_s1533 = 0;
          TreeSet@meta(_out_s1533);
          if((_out.__cid) == (new Object@Object(__cid=-2, _int=_out_s1533)._int))/*SuffixArray.sk:125*/
          {
            Object@Object _out_s1536 = null;
            clear_Object@TreeSet(_out, _out_s1536);
          }
          int lrss_s1538 = 0;
          TreeSet@meta(lrss_s1538);
          Object@Object _pac_sc_s1539 = null;
          if((_out.__cid) == (new Object@Object(__cid=-2, _int=lrss_s1538)._int))/*SuffixArray.sk:125*/
          {
            Object@Object lrss_s1541 = null;
            clearb_Object@TreeSet(_out, lrss_s1541);
            _pac_sc_s1539 = lrss_s1541;
          }
          else
          {
            _pac_sc_s1539 = null;
          }
          _out = _pac_sc_s1539;
        }
        max_len = new Object@Object(__cid=-2, _int=self.lcp_SuffixArray._array_int.A[i_0]);
        int _out_s1543 = 0;
        TreeSet@meta(_out_s1543);
        if((_out.__cid) == (new Object@Object(__cid=-2, _int=_out_s1543)._int))/*SuffixArray.sk:130*/
        {
          int _out_s1546 = 0;
          String@meta(_out_s1546);
          Object@Object _out_s1548 = null;
          String_String_char_int_int@String(new Object@Object(__cid=_out_s1546), tmp_s1531, new Object@Object(__cid=-2, _int=self.sa_SuffixArray._array_int.A[i_0]), max_len, _out_s1548)//{};
          Object@Object _out_s1550 = null;
          add_Object_Object@TreeSet(_out, _out_s1548, _out_s1550)//{};
        }
        int lrss_s1552 = 0;
        TreeSet@meta(lrss_s1552);
        Object@Object _pac_sc_s1553 = null;
        if((_out.__cid) == (new Object@Object(__cid=-2, _int=lrss_s1552)._int))/*SuffixArray.sk:130*/
        {
          int lrss_s1555 = 0;
          String@meta(lrss_s1555);
          Object@Object lrss_s1557 = null;
          String_String_char_int_int@String(new Object@Object(__cid=lrss_s1555), tmp_s1531, new Object@Object(__cid=-2, _int=self.sa_SuffixArray._array_int.A[i_0]), max_len, lrss_s1557)//{};
          Object@Object lrss_s1559 = null;
          addb_Object_Object@TreeSet(_out, lrss_s1557, lrss_s1559)//{};
          _pac_sc_s1553 = lrss_s1559;
        }
        else
        {
          _pac_sc_s1553 = null;
        }
        _out = _pac_sc_s1553;
      }
    }
    return;
  }
  /*SuffixArray.sk:37*/
  
void toIntArray_String (Object s, ref Object _out)/*SuffixArray.sk:37*/
  {
    int text_s1565 = 0;
    String@meta(text_s1565);
    Object@Object _pac_sc_s1566 = null;
    if((s.__cid) == (new Object@Object(__cid=-2, _int=text_s1565)._int))/*SuffixArray.sk:38*/
    {
      Object@Object text_s1568 = null;
      length@String(s, text_s1568);
      _pac_sc_s1566 = text_s1568;
    }
    else
    {
      _pac_sc_s1566 = null;
    }
    Object@Object text_s1570 = null;
    Wrap_Array_int@array(new Array_int@array(length=_pac_sc_s1566), text_s1570)//{};
    _out = text_s1570;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    int __sa21_s1572 = 0;
    String@meta(__sa21_s1572);
    Object@Object _pac_sc_s1573 = null;
    if((s.__cid) == (new Object@Object(__cid=-2, _int=__sa21_s1572)._int))/*SuffixArray.sk:39*/
    {
      Object@Object __sa21_s1575 = null;
      length@String(s, __sa21_s1575);
      _pac_sc_s1573 = __sa21_s1575;
    }
    else
    {
      _pac_sc_s1573 = null;
    }
    bit __sa21 = (i._int) < (_pac_sc_s1573._int);
    while(__sa21)
    {
      int _out_s1577 = 0;
      String@meta(_out_s1577);
      Object@Object _pac_sc_s1578 = null;
      if((s.__cid) == (new Object@Object(__cid=-2, _int=_out_s1577)._int))/*SuffixArray.sk:39*/
      {
        Object@Object _out_s1580 = null;
        charAt_int@String(s, i, _out_s1580);
        _pac_sc_s1578 = _out_s1580;
      }
      else
      {
        _pac_sc_s1578 = null;
      }
      text_s1570._array_int.A[i._int] = _pac_sc_s1578._char;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      int __sa21_s1582 = 0;
      String@meta(__sa21_s1582);
      Object@Object _pac_sc_s1583 = null;
      if((s.__cid) == (new Object@Object(__cid=-2, _int=__sa21_s1582)._int))/*SuffixArray.sk:39*/
      {
        Object@Object __sa21_s1585 = null;
        length@String(s, __sa21_s1585);
        _pac_sc_s1583 = __sa21_s1585;
      }
      else
      {
        _pac_sc_s1583 = null;
      }
      __sa21 = (i._int) < (_pac_sc_s1583._int);
    }
    return;
  }
  /* END PACKAGE SuffixArray*/
}
/* BEGIN PACKAGE Object*/
package Object{
  struct Object {
      int __cid;
      Object value_Character;
      Object _value_String;
      Object _count_String;
      Object bool_Boolean;
      Object value_Integer;
      Object M_TwoDArray;
      Object arr_TwoDArray;
      Object N_TwoDArray;
      Object N_SuffixArray;
      Object T_SuffixArray;
      Object sa_SuffixArray;
      Object lcp_SuffixArray;
      Object originalIndex_SuffixRankTuple;
      Object secondHalf_SuffixRankTuple;
      Object firstHalf_SuffixRankTuple;
      TreeSet _treeset;
      HashSet _hashset;
      ArrayList _arraylist;
      HashMap _hashmap;
      ArrayDeque _arraydeque;
      Array_bit _array_bit;
      Array_char _array_char;
      Array_int _array_int;
      Array_float _array_float;
      Array_double _array_double;
      Array_Object _array_object;
      bit _bit;
      char _char;
      int _int;
      float _float;
      double _double;
  }
  /*Object.sk:3*/
  
void Object_Object (Object self, ref Object _out)/*Object.sk:3*/
  {
    _out = self;
    return;
  }
  /*Object.sk:17*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*Object.sk:17*/
  {
    _out = new Object(__cid=-4, _bit=self == obj);
    return;
  }
  /* END PACKAGE Object*/
}
/* BEGIN PACKAGE Boolean*/
package Boolean{
  /* END PACKAGE Boolean*/
}
/* BEGIN PACKAGE Arrays*/
package Arrays{
  /*Arrays.sk:14*/
  
void sort_SuffixRankTuple_int (Object a_0, Object n, ref Object _out)/*Arrays.sk:14*/
  {
    Object@Object a = a_0;
    Object@Object j;
    j = new Object@Object(__cid=-2, _int=0);
    bit __sa30 = (j._int) < ((n._int) - (new Object@Object(__cid=-2, _int=1)._int));
    while(__sa30)
    {
      Object@Object iMin = j;
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=(j._int) + (new Object@Object(__cid=-2, _int=1)._int));
      bit __sa31 = (i._int) < (n._int);
      while(__sa31)
      {
        Object@Object a1 = a._array_object.A[i._int];
        Object@Object a2 = a._array_object.A[iMin._int];
        int cmp_s1719 = 0;
        SuffixRankTuple@meta(cmp_s1719);
        Object@Object _pac_sc_s1720 = null;
        if((a1.__cid) == (new Object@Object(__cid=-2, _int=cmp_s1719)._int))/*Arrays.sk:20*/
        {
          Object@Object cmp_s1722 = null;
          compareTo_SuffixRankTuple@SuffixRankTuple(a1, a2, cmp_s1722);
          _pac_sc_s1720 = cmp_s1722;
        }
        else
        {
          _pac_sc_s1720 = null;
        }
        if((_pac_sc_s1720._int) < (new Object@Object(__cid=-2, _int=0)._int))/*Arrays.sk:21*/
        {
          iMin = i;
        }
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa31 = (i._int) < (n._int);
      }
      if((iMin._int) != (j._int))/*Arrays.sk:25*/
      {
        Object@Object a_s1724 = null;
        swap_SuffixRankTuple_int_int(a, j, iMin, a_s1724);
        a = a_s1724;
      }
      j = new Object@Object(__cid=-2, _int=(j._int) + 1);
      __sa30 = (j._int) < ((n._int) - (new Object@Object(__cid=-2, _int=1)._int));
    }
    _out = a;
    return;
  }
  /*Arrays.sk:7*/
  
void swap_SuffixRankTuple_int_int (Object a, Object i, Object j, ref Object _out)/*Arrays.sk:7*/
  {
    Object@Object tmp = a._array_object.A[i._int];
    a._array_object.A[i._int] = a._array_object.A[j._int];
    a._array_object.A[j._int] = tmp;
    _out = a;
    return;
  }
  /* END PACKAGE Arrays*/
}
/* BEGIN PACKAGE HashSet*/
package HashSet{
  struct HashSet {
      @Immutable()
  }
  struct Hashset extends HashSet@HashSet {
      @Immutable()
  }
  struct Add_object extends HashSet@HashSet {
      HashSet self;
      Object e2;
      @Immutable()
  }
  struct Addb_object extends HashSet@HashSet {
      HashSet self;
      Object e2;
      @Immutable()
  }
  struct Removeb_object extends HashSet@HashSet {
      HashSet self;
      Object e2;
      @Immutable()
  }
  struct Remove_object extends HashSet@HashSet {
      HashSet self;
      Object e2;
      @Immutable()
  }
  struct Size extends HashSet@HashSet {
      HashSet self;
      @Immutable()
  }
  /* END PACKAGE HashSet*/
}
[SKETCH] DONE
Total time = 19306
