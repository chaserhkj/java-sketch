package ArrayList;

adt AList {
  List          { }
  Obj           { Object o; }
  Get		{ AList l; int i; }
  Set		{ AList l; int i; AList v; }
  Add		{ AList l; AList v; }
  Null		{ }
  Error         { int code; }
}

int List_err()  { return 0; }
int Obj_err()   { return 1; }
int Get_err()   { return 2; }
int Set_err()   { return 3; }
int Add_err()   { return 4; }
int Null_err()  { return 5; }
int Error_err() { return 6; }

Object arrayList(Object o) {
  o.alist = new List();
  return o;
}

Object object(Object o) {
  return new Object(__cid = Object(), alist=new Obj(o=o));
}

Object get(AList l, int i) {
   return new Object(__cid = ArrayList(), alist=new Get(l=l, i=i));
}

Object set(AList l, int i, Object v) {
  return new Object(__cid = ArrayList(), alist=new Set(l=l, i=i, v=new Obj(o=v)));
}

Object add(AList l, Object v) {
  return new Object(__cid = ArrayList(), alist=new Set(l=l, v=new Obj(o=v)));
}

AList get_xform(AList a, int index) {
  switch (a) {
  case List: { return new Error(code=List_err()); }
  case Obj:  { return new Error(code=Obj_err()); }
  case Get:  { return new Error(code=Get_err()); }
  case Set:  {
    if (a.i == index) { return a.v; }
    else if (a.i < 0) { return new Error(); }
    else { return get_xform(a.l, index); }
    }
  case Add:   { return a; }
  case Null:  { return a; }
  case Error: { return a; }
  }
}

AList xform(AList a) {
  switch (a) {
     case List:         return a; 
     case Obj:          return a; 
     case Get:		return get_xform(a.l, a.i); 
     case Set:		return a; 
     case Add:		return a; 
     case Null:		return a; 
     case Error:       	return a; 
  }
}

Object get_obj(AList alist) {
  Object current;
  AList current_alist = new List();
  alist = xform(alist);
  switch (alist) {
  case List:  { current = null; }
  case Obj:   { current = alist.o; }
  case Get:   { current = null; }
  case Set:   { current = null; }
  case Add:   { current = null; }
  case Null:  { current = null; }
  case Error: { current = null; }
  }
  return current;
}
