SKETCH version 1.7.5
Benchmark = /Users/grumpy/Research/java-sketch2/test/axioms/examples/simplePrivateExample/PrivateExample/../result_noax/sk_PrivateExample/main.sk
/* BEGIN PACKAGE ANONYMOUS*/
/* END PACKAGE ANONYMOUS*/
/* BEGIN PACKAGE Character*/
package Character{
  /* END PACKAGE Character*/
}
/* BEGIN PACKAGE ArrayList*/
package ArrayList{
  /*ArrayList.sk:7*/
  
void glblInit_MAX_ARRAY_SIZE__ArrayList_s915 (ref Object@Object MAX_ARRAY_SIZE__ArrayList_s914)/*ArrayList.sk:7*/
  {
    MAX_ARRAY_SIZE__ArrayList_s914 = new Object@Object(__cid=-2, _int=1000000);
  }
  /* END PACKAGE ArrayList*/
}
/* BEGIN PACKAGE String*/
package String{
  /*String.sk:22*/
  
void String_String_byte (Object self, Object bytes, ref Object _out)/*String.sk:22*/
  {
    Object@Object len;
    len = bytes._array_char.length;
    Object@Object _out_s235 = null;
    Wrap_Array_char@array(new Array_char@array(length=len), _out_s235);
    self._value_String = _out_s235;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa12 = (i._int) < (len._int);
    while(__sa12)
    {
      self._value_String._array_char.A[i._int] = new Object@Object(__cid=-3, _char=bytes._array_char.A[i._int])._char;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa12 = (i._int) < (len._int);
    }
    self._count_String = len;
    _out = self;
    return;
  }
  /*String.sk:7*/
  
void String_String_char_int_int (Object self, Object ca, Object offset, Object count, ref Object _out)/*String.sk:7*/
  {
    if(((offset._int) > (new Object@Object(__cid=-2, _int=0)._int)) && ((offset._int) < (ca._array_char.length._int)))/*String.sk:8*/
    {
      Object@Object tmp_s237 = null;
      Wrap_Array_char@array(new Array_char@array(length=count), tmp_s237);
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa11 = (i._int) < (count._int);
      while(__sa11)
      {
        tmp_s237._array_char.A[i._int] = ca._array_char.A[(i._int) + (offset._int)];
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa11 = (i._int) < (count._int);
      }
      self._value_String = tmp_s237;
    }
    else
    {
      self._value_String = ca;
    }
    self._count_String = count;
    _out = self;
    return;
  }
  /*String.sk:43*/
  
void charAt_int (Object self, Object index, ref Object _out)/*String.sk:43*/
  {
    if(((new Object@Object(__cid=-2, _int=0)._int) <= (index._int)) && ((index._int) < (self._count_String._int)))/*String.sk:44*/
    {
      _out = new Object@Object(__cid=-3, _char=self._value_String._array_char.A[index._int]);
      return;
    }
    _out = new Object@Object(__cid=-3, _char='\0');
    return;
  }
  /*String.sk:154*/
  
void equals_Object (Object self, Object obj, ref Object _out)/*String.sk:154*/
  {
    _out = new Object@Object(__cid=-4, _bit=0);
    int _out_s223 = 0;
    String@meta(_out_s223);
    if((obj.__cid) == _out_s223)/*String.sk:156*/
    {
      _out = new Object@Object(__cid=-4, _bit=1);
      int sLen_s225 = 0;
      String@meta(sLen_s225);
      Object@Object _pac_sc_s226 = null;
      if((obj.__cid) == (new Object@Object(__cid=-2, _int=sLen_s225)._int))/*String.sk:159*/
      {
        Object@Object sLen_s228 = null;
        length@String(obj, sLen_s228);
        _pac_sc_s226 = sLen_s228;
      }
      else
      {
        _pac_sc_s226 = null;
      }
      int tLen_s230 = 0;
      String@meta(tLen_s230);
      Object@Object _pac_sc_s231 = null;
      if((self.__cid) == (new Object@Object(__cid=-2, _int=tLen_s230)._int))/*String.sk:160*/
      {
        Object@Object tLen_s233 = null;
        length@String(self, tLen_s233);
        _pac_sc_s231 = tLen_s233;
      }
      else
      {
        _pac_sc_s231 = null;
      }
      if((_pac_sc_s226._int) != (_pac_sc_s231._int))/*String.sk:161*/
      {
        _out = new Object@Object(__cid=-4, _bit=0);
      }
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa19 = ((i._int) < (_pac_sc_s226._int)) && ((_out._bit) == (new Object@Object(__cid=-4, _bit=1)._bit));
      while(__sa19)
      {
        if((obj._value_String._array_char.A[i._int]) != (self._value_String._array_char.A[i._int]))/*String.sk:163*/
        {
          _out = new Object@Object(__cid=-4, _bit=0);
        }
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa19 = ((i._int) < (_pac_sc_s226._int)) && ((_out._bit) == (new Object@Object(__cid=-4, _bit=1)._bit));
      }
    }
    return;
  }
  /*String.sk:214*/
  
void getBytes (Object self, ref Object _out)/*String.sk:214*/
  {
    int _out_s239 = 0;
    String@meta(_out_s239);
    Object@Object _pac_sc_s240 = null;
    if((self.__cid) == (new Object@Object(__cid=-2, _int=_out_s239)._int))/*String.sk:215*/
    {
      Object@Object _out_s242 = null;
      toString@String(self, _out_s242);
      _pac_sc_s240 = _out_s242;
    }
    else
    {
      _pac_sc_s240 = null;
    }
    Object@Object _out_s244 = null;
    getBytes_String(_pac_sc_s240, _out_s244);
    _out = _out_s244;
    return;
  }
  /*String.sk:218*/
  
void getBytes_String (Object str, ref Object _out)/*String.sk:218*/
  {
    int len_s246 = 0;
    String@meta(len_s246);
    Object@Object _pac_sc_s247 = null;
    if((str.__cid) == (new Object@Object(__cid=-2, _int=len_s246)._int))/*String.sk:219*/
    {
      Object@Object len_s249 = null;
      length@String(str, len_s249);
      _pac_sc_s247 = len_s249;
    }
    else
    {
      _pac_sc_s247 = null;
    }
    Object@Object bytes_s251 = null;
    Wrap_Array_char@array(new Array_char@array(length=_pac_sc_s247), bytes_s251);
    _out = bytes_s251;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa25 = (i._int) < (_pac_sc_s247._int);
    while(__sa25)
    {
      int _out_s253 = 0;
      String@meta(_out_s253);
      Object@Object _pac_sc_s254 = null;
      if((str.__cid) == (new Object@Object(__cid=-2, _int=_out_s253)._int))/*String.sk:222*/
      {
        Object@Object _out_s256 = null;
        charAt_int@String(str, i, _out_s256);
        _pac_sc_s254 = _out_s256;
      }
      else
      {
        _pac_sc_s254 = null;
      }
      bytes_s251._array_char.A[i._int] = _pac_sc_s254._char;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa25 = (i._int) < (_pac_sc_s247._int);
    }
    return;
  }
  /*String.sk:48*/
  
void length (Object self, ref Object _out)/*String.sk:48*/
  {
    _out = self._count_String;
    return;
  }
  /*String.sk:52*/
  
void toString (Object self, ref Object _out)/*String.sk:52*/
  {
    _out = self;
    return;
  }
  /* END PACKAGE String*/
}
/* BEGIN PACKAGE Mac*/
package Mac{
  /* END PACKAGE Mac*/
}
/* BEGIN PACKAGE Integer*/
package Integer{
  /* END PACKAGE Integer*/
}
/* BEGIN PACKAGE SecretKey*/
package SecretKey{
  /* END PACKAGE SecretKey*/
}
/* BEGIN PACKAGE KerberosKey*/
package KerberosKey{
  /*KerberosKey.sk:3*/
  
void KerberosKey_KerberosKey (Object self, ref Object _out)/*KerberosKey.sk:3*/
  {
    self.KEYSIZE_KerberosKey = new Object@Object(__cid=-2, _int=32);
    Object@Object _out_s485 = null;
    Wrap_Array_char@array(new Array_char@array(length=self.KEYSIZE_KerberosKey), _out_s485);
    self.key_KerberosKey = _out_s485;
    Object@Object i;
    i = new Object@Object(__cid=-2, _int=0);
    bit __sa34 = (i._int) < (self.KEYSIZE_KerberosKey._int);
    while(__sa34)
    {
      self.key_KerberosKey._array_char.A[i._int] = new Object@Object(__cid=-2, _int=1)._int;
      i = new Object@Object(__cid=-2, _int=(i._int) + 1);
      __sa34 = (i._int) < (self.KEYSIZE_KerberosKey._int);
    }
    _out = self;
    return;
  }
  /*KerberosKey.sk:12*/
  
void getEncoded (Object self, ref Object _out)/*KerberosKey.sk:12*/
  {
    _out = self.key_KerberosKey;
    return;
  }
  /* END PACKAGE KerberosKey*/
}
/* BEGIN PACKAGE Assert*/
package Assert{
  /* END PACKAGE Assert*/
}
/* BEGIN PACKAGE Number*/
package Number{
  /* END PACKAGE Number*/
}
/* BEGIN PACKAGE array*/
package array{
  struct Array_bit {
      Object length;
      bit[length._int] A;
  }
  struct Array_char {
      Object length;
      char[length._int] A;
  }
  struct Array_int {
      Object length;
      int[length._int] A;
  }
  struct Array_float {
      Object length;
      float[length._int] A;
  }
  struct Array_double {
      Object length;
      double[length._int] A;
  }
  struct Array_Object {
      Object length;
      Object[length._int] A;
  }
  /*array.sk:37*/
  
void Wrap_Array_char (Array_char arr, ref Object _out)/*array.sk:37*/
  {
    int _out_s649 = 0;
    Array@meta(_out_s649);
    _out = new Object@Object(__cid=_out_s649, _array_char=arr);
    return;
  }
  /* END PACKAGE array*/
}
/* BEGIN PACKAGE meta*/
package meta{
  /*meta.sk:21*/
  
void Array (ref int _out)/*meta.sk:21*/
  {
    _out = -1;
    return;
  }
  /*meta.sk:7*/
  
void Cipher (ref int _out)/*meta.sk:7*/
  {
    _out = 8;
    return;
  }
  /*meta.sk:10*/
  
void KerberosKey (ref int _out)/*meta.sk:10*/
  {
    _out = 9;
    return;
  }
  /*meta.sk:12*/
  
void KeyGenerator (ref int _out)/*meta.sk:12*/
  {
    _out = 10;
    return;
  }
  /*meta.sk:16*/
  
void Object (ref int _out)/*meta.sk:16*/
  {
    _out = 1;
    return;
  }
  /*meta.sk:19*/
  
void SecretKeySpec (ref int _out)/*meta.sk:19*/
  {
    _out = 7;
    return;
  }
  /*meta.sk:20*/
  
void String (ref int _out)/*meta.sk:20*/
  {
    _out = 14;
    return;
  }
  /* END PACKAGE meta*/
}
/* BEGIN PACKAGE SecretKeySpec*/
package SecretKeySpec{
  /*SecretKeySpec.sk:12*/
  
void getEncoded (Object self, ref Object _out)/*SecretKeySpec.sk:12*/
  {
    _out = self.key_SecretKeySpec;
    return;
  }
  /* END PACKAGE SecretKeySpec*/
}
/* BEGIN PACKAGE Object*/
package Object{
  struct Object {
      int __cid;
      Object elementData_ArrayList;
      Object DEFAULT_CAPACITY_ArrayList;
      Object capacity_ArrayList;
      Object size_ArrayList;
      Object mode_KeyGenerator;
      Object key_SecretKeySpec;
      Object key_KerberosKey;
      Object KEYSIZE_KerberosKey;
      Object value_Character;
      Object _value_String;
      Object _count_String;
      Object type_Cipher;
      Object key_Cipher;
      Object mode_Cipher;
      Object ENCRYPT_MODE_Cipher;
      Object DECRYPT_MODE_Cipher;
      Object value_Integer;
      Array_bit _array_bit;
      Array_char _array_char;
      Array_int _array_int;
      Array_float _array_float;
      Array_double _array_double;
      Array_Object _array_object;
      bit _bit;
      char _char;
      int _int;
      float _float;
      double _double;
  }
  /*Object.sk:7*/
  
void Object_Object (Object self, ref Object _out)/*Object.sk:7*/
  {
    _out = self;
    return;
  }
  /* END PACKAGE Object*/
}
/* BEGIN PACKAGE IvParameterSpec*/
package IvParameterSpec{
  /* END PACKAGE IvParameterSpec*/
}
/* BEGIN PACKAGE List*/
package List{
  /* END PACKAGE List*/
}
/* BEGIN PACKAGE Cipher*/
package Cipher{
  /*Cipher.sk:7*/
  
void Cipher_Cipher_String (Object self, Object type, ref Object _out)/*Cipher.sk:7*/
  {
    self.type_Cipher = type;
    self.ENCRYPT_MODE_Cipher = new Object@Object(__cid=-2, _int=1);
    self.DECRYPT_MODE_Cipher = new Object@Object(__cid=-2, _int=2);
    _out = self;
    return;
  }
  /*Cipher.sk:32*/
  
void doFinal_byte (Object self, Object text, ref Object _out)/*Cipher.sk:32*/
  {
    int k_s802 = 0;
    KerberosKey@meta(k_s802);
    Object@Object _pac_sc_s803 = null;
    if((self.key_Cipher.__cid) == (new Object@Object(__cid=-2, _int=k_s802)._int))/*Cipher.sk:33*/
    {
      Object@Object k_s805 = null;
      getEncoded@KerberosKey(self.key_Cipher, k_s805);
      _pac_sc_s803 = k_s805;
    }
    else
    {
      int k_s807 = 0;
      SecretKeySpec@meta(k_s807);
      Object@Object _pac_sc_s808 = null;
      if((self.key_Cipher.__cid) == (new Object@Object(__cid=-2, _int=k_s807)._int))/*Cipher.sk:33*/
      {
        Object@Object k_s810 = null;
        getEncoded@SecretKeySpec(self.key_Cipher, k_s810);
        _pac_sc_s808 = k_s810;
      }
      else
      {
        _pac_sc_s808 = null;
      }
      _pac_sc_s803 = _pac_sc_s808;
    }
    Object@Object result_s812 = null;
    Wrap_Array_char@array(new Array_char@array(length=text._array_char.length), result_s812);
    _out = result_s812;
    if((_pac_sc_s803._array_char.length._int) == (new Object@Object(__cid=-2, _int=0)._int))/*Cipher.sk:35*/
    {
      return;
    }
    if((self.mode_Cipher._int) == (self.ENCRYPT_MODE_Cipher._int))/*Cipher.sk:38*/
    {
      Object@Object i;
      i = new Object@Object(__cid=-2, _int=0);
      bit __sa36 = (i._int) < (text._array_char.length._int);
      while(__sa36)
      {
        result_s812._array_char.A[i._int] = (text._array_char.A[i._int]) + (_pac_sc_s803._array_char.A[(i._int) % (_pac_sc_s803._array_char.length._int)]);
        i = new Object@Object(__cid=-2, _int=(i._int) + 1);
        __sa36 = (i._int) < (text._array_char.length._int);
      }
    }
    else
    {
      if((self.mode_Cipher._int) == (self.DECRYPT_MODE_Cipher._int))/*Cipher.sk:43*/
      {
        Object@Object i_0 = new Object@Object(__cid=-2, _int=0);
        bit __sa37 = (i_0._int) < (text._array_char.length._int);
        while(__sa37)
        {
          result_s812._array_char.A[i_0._int] = (text._array_char.A[i_0._int]) - (_pac_sc_s803._array_char.A[(i_0._int) % (_pac_sc_s803._array_char.length._int)]);
          i_0 = new Object@Object(__cid=-2, _int=(i_0._int) + 1);
          __sa37 = (i_0._int) < (text._array_char.length._int);
        }
      }
    }
    return;
  }
  /*Cipher.sk:14*/
  
void getInstance_String (Object type, ref Object _out)/*Cipher.sk:14*/
  {
    int _out_s814 = 0;
    Cipher@meta(_out_s814);
    Object@Object _out_s816 = null;
    Cipher_Cipher_String(new Object@Object(__cid=_out_s814), type, _out_s816);
    _out = _out_s816;
    return;
  }
  /*Cipher.sk:22*/
  
void init_int_Key (Object self, Object opmode, Object key)/*Cipher.sk:22*/
  {
    self.key_Cipher = key;
    self.mode_Cipher = opmode;
  }
  /* END PACKAGE Cipher*/
}
/* BEGIN PACKAGE KeyGenerator*/
package KeyGenerator{
  /*KeyGenerator.sk:7*/
  
void KeyGenerator_KeyGenerator_String (Object self, Object mode, ref Object _out)/*KeyGenerator.sk:7*/
  {
    self.mode_KeyGenerator = mode;
    _out = self;
    return;
  }
  /*KeyGenerator.sk:12*/
  
void generateKey (Object self, ref Object _out)/*KeyGenerator.sk:12*/
  {
    int _out_s824 = 0;
    KerberosKey@meta(_out_s824);
    Object@Object _out_s826 = null;
    KerberosKey_KerberosKey@KerberosKey(new Object@Object(__cid=_out_s824), _out_s826);
    _out = _out_s826;
    return;
  }
  /*KeyGenerator.sk:19*/
  
void getInstance_String (Object mode, ref Object _out)/*KeyGenerator.sk:19*/
  {
    int _out_s828 = 0;
    KeyGenerator@meta(_out_s828);
    Object@Object _out_s830 = null;
    KeyGenerator_KeyGenerator_String(new Object@Object(__cid=_out_s828), mode, _out_s830);
    _out = _out_s830;
    return;
  }
  /*KeyGenerator.sk:16*/
  
void init_int (Object self, Object keysize)/*KeyGenerator.sk:16*/
  { }
  /* END PACKAGE KeyGenerator*/
}
/* BEGIN PACKAGE PrivateExample*/
package PrivateExample{
  /*PrivateExample.sk:15*/
  
void privateExample_String (Object plainTextString, ref Object _out)/*PrivateExample.sk:15*/
  {
    int plainText_s853 = 0;
    String@meta(plainText_s853);
    Object@Object _pac_sc_s854 = null;
    if((plainTextString.__cid) == (new Object@Object(__cid=-2, _int=plainText_s853)._int))/*PrivateExample.sk:16*/
    {
      Object@Object plainText_s856 = null;
      getBytes@String(plainTextString, plainText_s856);
      _pac_sc_s854 = plainText_s856;
    }
    else
    {
      _pac_sc_s854 = null;
    }
    int keyGen_s858 = 0;
    String@meta(keyGen_s858);
    Object@Object keyGen_s860 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=4), A={'D','E','S','\0'}), keyGen_s860);
    Object@Object keyGen_s862 = null;
    String_String_char_int_int@String(new Object@Object(__cid=keyGen_s858), keyGen_s860, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=3), keyGen_s862);
    Object@Object keyGen_s864 = null;
    getInstance_String@KeyGenerator(keyGen_s862, keyGen_s864);
    int _out_s866 = 0;
    KeyGenerator@meta(_out_s866);
    if((keyGen_s864.__cid) == (new Object@Object(__cid=-2, _int=_out_s866)._int))/*PrivateExample.sk:18*/
    {
      init_int@KeyGenerator(keyGen_s864, new Object@Object(__cid=-2, _int=56));
    }
    int key_s868 = 0;
    KeyGenerator@meta(key_s868);
    Object@Object _pac_sc_s869 = null;
    if((keyGen_s864.__cid) == (new Object@Object(__cid=-2, _int=key_s868)._int))/*PrivateExample.sk:20*/
    {
      Object@Object key_s871 = null;
      generateKey@KeyGenerator(keyGen_s864, key_s871);
      _pac_sc_s869 = key_s871;
    }
    else
    {
      _pac_sc_s869 = null;
    }
    int cipher_s873 = 0;
    String@meta(cipher_s873);
    Object@Object cipher_s875 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=21), A={'D','E','S','/','E','C','B','/','P','K','C','S','5','P','a','d','d','i','n','g','\0'}), cipher_s875);
    Object@Object cipher_s877 = null;
    String_String_char_int_int@String(new Object@Object(__cid=cipher_s873), cipher_s875, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=20), cipher_s877);
    Object@Object cipher_s879 = null;
    getInstance_String@Cipher(cipher_s877, cipher_s879);
    int _out_s881 = 0;
    Cipher@meta(_out_s881);
    if((cipher_s879.__cid) == (new Object@Object(__cid=-2, _int=_out_s881)._int))/*PrivateExample.sk:22*/
    {
      init_int_Key@Cipher(cipher_s879, new Object@Object(__cid=-2, _int=1), _pac_sc_s869);
    }
    int cipherText_s883 = 0;
    Cipher@meta(cipherText_s883);
    Object@Object _pac_sc_s884 = null;
    if((cipher_s879.__cid) == (new Object@Object(__cid=-2, _int=cipherText_s883)._int))/*PrivateExample.sk:24*/
    {
      Object@Object cipherText_s886 = null;
      doFinal_byte@Cipher(cipher_s879, _pac_sc_s854, cipherText_s886);
      _pac_sc_s884 = cipherText_s886;
    }
    else
    {
      _pac_sc_s884 = null;
    }
    int _out_s888 = 0;
    Cipher@meta(_out_s888);
    if((cipher_s879.__cid) == (new Object@Object(__cid=-2, _int=_out_s888)._int))/*PrivateExample.sk:25*/
    {
      init_int_Key@Cipher(cipher_s879, new Object@Object(__cid=-2, _int=2), _pac_sc_s869);
    }
    int newPlainText_s890 = 0;
    Cipher@meta(newPlainText_s890);
    Object@Object _pac_sc_s891 = null;
    if((cipher_s879.__cid) == (new Object@Object(__cid=-2, _int=newPlainText_s890)._int))/*PrivateExample.sk:27*/
    {
      Object@Object newPlainText_s893 = null;
      doFinal_byte@Cipher(cipher_s879, _pac_sc_s884, newPlainText_s893);
      _pac_sc_s891 = newPlainText_s893;
    }
    else
    {
      _pac_sc_s891 = null;
    }
    _out = _pac_sc_s891;
    return;
  }
  /*PrivateExample.sk:7*/
  
void test_privateExample ()/*PrivateExample.sk:7*/
  {
    int self_s832 = 0;
    Object@meta(self_s832);
    Object@Object self_s834 = null;
    Object_Object@Object(new Object@Object(__cid=self_s832), self_s834);
    int plainText_s836 = 0;
    String@meta(plainText_s836);
    Object@Object plainText_s838 = null;
    Wrap_Array_char@array(new Array_char@array(length=new Object@Object(__cid=-2, _int=16), A={'S','e','c','r','e','t',' ','M','e','s','s','a','g','e','!','\0'}), plainText_s838);
    Object@Object plainText_s840 = null;
    String_String_char_int_int@String(new Object@Object(__cid=plainText_s836), plainText_s838, new Object@Object(__cid=-2, _int=0), new Object@Object(__cid=-2, _int=15), plainText_s840);
    Object@Object newPlainText_s842 = null;
    privateExample_String(plainText_s840, newPlainText_s842);
    int plainText2_s844 = 0;
    String@meta(plainText2_s844);
    Object@Object plainText2_s846 = null;
    String_String_byte@String(new Object@Object(__cid=plainText2_s844), newPlainText_s842, plainText2_s846);
    int _out_s848 = 0;
    String@meta(_out_s848);
    Object@Object _pac_sc_s849 = null;
    if((plainText_s840.__cid) == (new Object@Object(__cid=-2, _int=_out_s848)._int))/*PrivateExample.sk:12*/
    {
      Object@Object _out_s851 = null;
      equals_Object@String(plainText_s840, plainText2_s846, _out_s851);
      _pac_sc_s849 = _out_s851;
    }
    else
    {
      _pac_sc_s849 = null;
    }
    assert (_pac_sc_s849._bit); //Assert at PrivateExample.sk:12 (0)
  }
  /*PrivateExample.sk:7*/
  
void test_privateExample__Wrapper ()  implements test_privateExample__WrapperNospec/*PrivateExample.sk:7*/
  {
    test_privateExample();
  }
  /*PrivateExample.sk:7*/
  
void test_privateExample__WrapperNospec ()/*PrivateExample.sk:7*/
  { }
  /* END PACKAGE PrivateExample*/
}
/* BEGIN PACKAGE Key*/
package Key{
  /* END PACKAGE Key*/
}
[SKETCH] DONE
Total time = 2818
