package Stack;

Object Stack_Stack(Object self) {
  self.elementData_Stack = Wrap_Array_Object(new Array_Object(length=(new Object(__cid=-2, _int=10))));
  self.size_Stack = (new Object(__cid=-2, _int=0));
  self.capacity_Stack = (new Object(__cid=-2, _int=10));
  return self;
}

void resize(Object self) {
  if (self.size_Stack._int >= self.capacity_Stack._int) {
    self.capacity_Stack = (new Object(__cid=-2, _int=self.capacity_Stack._int * (new Object(__cid=-2, _int=2))._int));
    Object newElementData = Wrap_Array_Object(new Array_Object(length=self.capacity_Stack));
    for (Object i = (new Object(__cid=-2, _int=0)); i._int < self.size_Stack._int; i = new Object(__cid=-2, _int=i._int + 1)) {
      newElementData._array_object.A[i._int] = self.elementData_Stack._array_object.A[i._int];
      self.elementData_Stack._array_object.A[i._int] = null;
    }
    self.elementData_Stack = newElementData;
  }
}

Object empty(Object self) {
  return (new Object(__cid=-4, _bit=self.size_Stack._int == (new Object(__cid=-2, _int=0))._int));
}

Object peek(Object self) {
  if (self.size_Stack._int <= (new Object(__cid=-2, _int=0))._int) {
    return null;
  }
  return self.elementData_Stack._array_object.A[self.size_Stack._int - (new Object(__cid=-2, _int=1))._int];
}

Object push_E(Object self, Object e) {
  resize@Stack(self);
  self.size_Stack = new Object(__cid=-2, _int=self.size_Stack._int + 1);
  self.elementData_Stack._array_object.A[self.size_Stack._int - (new Object(__cid=-2, _int=1))._int] = e;
  return e;
}

Object pop(Object self) {
  if (self.size_Stack._int <= (new Object(__cid=-2, _int=0))._int) {
    return null;
  }
  Object e = self.elementData_Stack._array_object.A[self.size_Stack._int - (new Object(__cid=-2, _int=1))._int];
  self.elementData_Stack._array_object.A[self.size_Stack._int] = null;
  self.size_Stack = (new Object(__cid=-2, _int=self.size_Stack._int - (new Object(__cid=-2, _int=1))._int));
  return e;
}

Object search_Object(Object self, Object o) {
  for (Object i = (new Object(__cid=-2, _int=0)); i._int < self.size_Stack._int; i = new Object(__cid=-2, _int=i._int + 1)) {
    if ((self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=CryptoCipherFactory()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Utils()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Stack()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=TreeSet()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=StringBuilder()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=SecureRandom()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Mac()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=FileReaderr()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=IvParameterSpec()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Float()))._int ? equals_Object@Float(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Properties()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Boolean()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=FileWriterr()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=TreeMap()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=PrintStream()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=System()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=CryptoCipherFactory_CipherProvider()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=KerberosKey()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=OpenSSLCipher()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=HashMap()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=LinkedList()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=SecretKeySpec()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=HashSet()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=JCECipher()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=StringBuffer()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Collections()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Cipher()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=File()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=FileOutputStream()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=KeyGenerator()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Number()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=AbstractQueue()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Arrays()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=ArrayDeque()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Character()))._int ? equals_Object@Character(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Assert()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Scanner()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=ArrayDeque_DequeNode()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=CipherFactory()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Tester()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=BufferedReader()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=KeyStore()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=HashMap_Node()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=BufferedWriter()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Integer()))._int ? equals_Object@Integer(self.elementData_Stack._array_object.A[i._int], o) : self.elementData_Stack._array_object.A[i._int].__cid == (new Object(__cid=-2, _int=Object()))._int ? equals_Object@Object(self.elementData_Stack._array_object.A[i._int], o) : null)._bit) {
      return i;
    }
  }
  return (new Object(__cid=-2, _int=-(new Object(__cid=-2, _int=1))._int));
}

