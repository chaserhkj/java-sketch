package Object;

Object fs;
Object fs_g() { return fs; }
void fs_s(Object fs_s) { fs = fs_s; }

Object Object_Object(Object self) {
    return self;
}

Object equals_Object_Object(Object a, Object b) {
  if (a == null) {
    if (b == null) {
      return (new Object(__cid=-4, _bit=true));
    }
    return (new Object(__cid=-4, _bit=false));
  }
  return (a.__cid == (new Object(__cid=-2, _int=Character()))._int ? equals_Object@Character(a, b) : a.__cid == (new Object(__cid=-2, _int=Bucketing()))._int ? equals_Object@Object(a, b) : a.__cid == (new Object(__cid=-2, _int=BucketingTest()))._int ? equals_Object@Object(a, b) : a.__cid == (new Object(__cid=-2, _int=Assert()))._int ? equals_Object@Object(a, b) : a.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? equals_Object@Object(a, b) : a.__cid == (new Object(__cid=-2, _int=Number()))._int ? equals_Object@Object(a, b) : a.__cid == (new Object(__cid=-2, _int=Integer()))._int ? equals_Object@Integer(a, b) : a.__cid == (new Object(__cid=-2, _int=String()))._int ? equals_Object@String(a, b) : a.__cid == (new Object(__cid=-2, _int=Pair()))._int ? equals_Object@Object(a, b) : a.__cid == (new Object(__cid=-2, _int=Object()))._int ? equals_Object@Object(a, b) : null);
}

Object hashCode_Object(Object o) {
  return (o != null ? (o.__cid == (new Object(__cid=-2, _int=Character()))._int ? hashCode@Object(o) : o.__cid == (new Object(__cid=-2, _int=Bucketing()))._int ? hashCode@Object(o) : o.__cid == (new Object(__cid=-2, _int=BucketingTest()))._int ? hashCode@Object(o) : o.__cid == (new Object(__cid=-2, _int=Assert()))._int ? hashCode@Object(o) : o.__cid == (new Object(__cid=-2, _int=ArrayList()))._int ? hashCode@Object(o) : o.__cid == (new Object(__cid=-2, _int=Number()))._int ? hashCode@Object(o) : o.__cid == (new Object(__cid=-2, _int=Integer()))._int ? hashCode@Integer(o) : o.__cid == (new Object(__cid=-2, _int=String()))._int ? hashCode@String(o) : o.__cid == (new Object(__cid=-2, _int=Pair()))._int ? hashCode@Object(o) : o.__cid == (new Object(__cid=-2, _int=Object()))._int ? hashCode@Object(o) : null) : (new Object(__cid=-2, _int=0)));
}

Object equals_Object(Object self, Object obj) {
  return (new Object(__cid=-4, _bit=self == obj));
}

Object hashCode(Object self) {
  return (new Object(__cid=-2, _int=0));
}

struct Object {
  int           __cid;
  Object        key_Pair;
  Object        value_Pair;
  Object        _value_String;
  Object        _count_String;
  Object        value_Integer;
  Object        elementData_ArrayList;
  Object        DEFAULT_CAPACITY_ArrayList;
  Object        capacity_ArrayList;
  Object        size_ArrayList;
  Object        classUnderTest_BucketingTest;
  Object        integerKey_Bucketing;
  Object        numberOfSlots_Bucketing;
  Object        bucketHash_Bucketing;
  Object        overflow_Bucketing;
  Object        sizeBucket_Bucketing;
  Object        numberOfElements_Bucketing;
  Object        index_Bucketing;
  Object        size_Bucketing;
  Object        mod_Bucketing;
  Object        ilterator_Bucketing;
  Object        rehash_Bucketing;
  Object        value_Character;
  Array_bit     _array_bit;
  Array_char    _array_char;
  Array_int     _array_int;
  Array_float   _array_float;
  Array_double  _array_double;
  Array_Object  _array_object;
  bit           _bit;
  char          _char;
  int           _int;
  float         _float;
  double        _double;
}
