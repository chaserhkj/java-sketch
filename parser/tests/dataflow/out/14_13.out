node: <class 'ast.compilationunit.CompilationUnit'> name: None 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.classorinterfacedeclaration.ClassOrInterfaceDeclaration'> name: C 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.methoddeclaration.MethodDeclaration'> name: m 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.type.primitivetype.PrimitiveType'> name: int 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.parameter.Parameter'> name: a 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.variabledeclaratorid.VariableDeclaratorId'> name: a 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.type.primitivetype.PrimitiveType'> name: int 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.variabledeclarator.VariableDeclarator'> name: a 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.stmt.blockstmt.BlockStmt'> name: None 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.stmt.expressionstmt.ExpressionStmt'> name: None 
	in: set([(u'a', 32)]) 
	out: set([(u'a', 32)]) 
	inputs: [] 
	outputs: []

node: <class 'ast.expr.variabledeclarationexpr.VariableDeclarationExpr'> name: None 
	in: set([(u'a', 32)]) 
	out: set([(u'a', 32)]) 
	inputs: [] 
	outputs: []

node: <class 'ast.type.primitivetype.PrimitiveType'> name: int 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.variabledeclarator.VariableDeclarator'> name: x 
	in: set([(u'a', 32)]) 
	out: set([(u'a', 32)]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.variabledeclaratorid.VariableDeclaratorId'> name: x 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.variabledeclarator.VariableDeclarator'> name: y 
	in: set([(u'a', 32)]) 
	out: set([(u'a', 32)]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.variabledeclaratorid.VariableDeclaratorId'> name: y 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.variabledeclarator.VariableDeclarator'> name: z 
	in: set([(u'a', 32)]) 
	out: set([(u'a', 32)]) 
	inputs: [] 
	outputs: []

node: <class 'ast.body.variabledeclaratorid.VariableDeclaratorId'> name: z 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.stmt.expressionstmt.ExpressionStmt'> name: None 
	in: set([(u'a', 32)]) 
	out: set([(u'x', 21), (u'a', 32)]) 
	inputs: [u'int'] 
	outputs: []

node: <class 'ast.expr.assignexpr.AssignExpr'> name: None 
	in: set([(u'a', 32)]) 
	out: set([(u'x', 21), (u'a', 32)]) 
	inputs: [u'int'] 
	outputs: []

node: <class 'ast.expr.nameexpr.NameExpr'> name: x 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.expr.nameexpr.NameExpr'> name: a 
	in: set([(u'a', 32)]) 
	out: set([]) 
	inputs: [u'int'] 
	outputs: []

node: <class 'ast.stmt.expressionstmt.ExpressionStmt'> name: None 
	in: set([(u'x', 21), (u'a', 32)]) 
	out: set([(u'y', 17), (u'x', 21), (u'a', 32)]) 
	inputs: [u'int'] 
	outputs: []

node: <class 'ast.expr.assignexpr.AssignExpr'> name: None 
	in: set([(u'x', 21), (u'a', 32)]) 
	out: set([(u'y', 17), (u'x', 21), (u'a', 32)]) 
	inputs: [u'int'] 
	outputs: []

node: <class 'ast.expr.nameexpr.NameExpr'> name: y 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.expr.nameexpr.NameExpr'> name: a 
	in: set([(u'x', 21), (u'a', 32)]) 
	out: set([]) 
	inputs: [u'int'] 
	outputs: []

node: <class 'ast.stmt.expressionstmt.ExpressionStmt'> name: None 
	in: set([(u'y', 17), (u'x', 21), (u'a', 32)]) 
	out: set([(u'a', 32), (u'y', 17), (u'x', 21), (u'z', 13)]) 
	inputs: [] 
	outputs: [u'int']

node: <class 'ast.expr.assignexpr.AssignExpr'> name: None 
	in: set([(u'y', 17), (u'x', 21), (u'a', 32)]) 
	out: set([(u'y', 17), (u'x', 21), (u'a', 32), (u'z', 13)]) 
	inputs: [] 
	outputs: []

node: <class 'ast.expr.nameexpr.NameExpr'> name: z 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.expr.binaryexpr.BinaryExpr'> name: None 
	in: set([(u'y', 17), (u'x', 21), (u'a', 32)]) 
	out: set([(u'y', 17), (u'x', 21), (u'a', 32)]) 
	inputs: [] 
	outputs: []

node: <class 'ast.expr.nameexpr.NameExpr'> name: x 
	in: set([(u'y', 17), (u'x', 21), (u'a', 32)]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.expr.nameexpr.NameExpr'> name: y 
	in: set([(u'y', 17), (u'x', 21), (u'a', 32)]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.stmt.expressionstmt.ExpressionStmt'> name: None 
	in: set([(u'a', 32), (u'y', 17), (u'x', 21), (u'z', 13)]) 
	out: set([(u'a', 32), (u'y', 7), (u'x', 21), (u'z', 13)]) 
	inputs: [(u'x', 21)] 
	outputs: []

node: <class 'ast.expr.assignexpr.AssignExpr'> name: None 
	in: set([(u'a', 32), (u'y', 17), (u'x', 21), (u'z', 13)]) 
	out: set([(u'x', 21), (u'a', 32), (u'y', 7), (u'z', 13)]) 
	inputs: [(u'x', 21)] 
	outputs: []

node: <class 'ast.expr.nameexpr.NameExpr'> name: y 
	in: set([]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.expr.nameexpr.NameExpr'> name: x 
	in: set([(u'a', 32), (u'y', 17), (u'x', 21), (u'z', 13)]) 
	out: set([]) 
	inputs: [(u'x', 21)] 
	outputs: []

node: <class 'ast.stmt.returnstmt.ReturnStmt'> name: None 
	in: set([(u'a', 32), (u'y', 7), (u'x', 21), (u'z', 13)]) 
	out: set([]) 
	inputs: [] 
	outputs: []

node: <class 'ast.expr.nameexpr.NameExpr'> name: y 
	in: set([(u'a', 32), (u'y', 7), (u'x', 21), (u'z', 13)]) 
	out: set([]) 
	inputs: [] 
	outputs: []

[u'int'] [u'int']
