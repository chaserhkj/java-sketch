package ArrayList;

adt AList {
  List            { }
  Get             { AList l; int i; }
  Set	  	  { AList l; int i; Object v; }
  Add		  { AList l; Object v; }
  Size		  { AList l; int sz; }
  EnsureCapacity  { AList l; int m; }
}

Object xform_get(AList a, int index) {
  AList alist = null;
  switch (a) {
  case List:             { assert false; }
  case Get:              { assert false; }
  case Set: {
    if (a.i == index) { return a.v; }
    else { alist = a.l; }
  }
  case Add: {
    if ((xform_size(a, 0) - 1) == index) { return a.v; }
    else { alist = a.l; }
  }
  case Size:             { assert false; }
  case EnsureCapacity:   { assert false; }
  }
  return xform_get(alist, index); 
}

int xform_size(AList a, int sz) {
  AList alist = null;
  switch (a) {
  case List:             { return sz; }
  case Get:              { assert false; }
  case Set:              { alist = a.l; }
  case Add:              { alist = a.l; sz++; }
  case Size:             { assert false; }
  case EnsureCapacity:   { assert false; }
  }
  return xform_size(alist, sz);
}

/* AList ensureCapacity_xform(AList a) { */
/*   AList alist = null; */
/*   switch (a) { */
/*   case List:             { return new Size(sz=0); } */
/*   case Obj:              { return new Error(code=Obj_err()); } */
/*   case Get:              { alist = a.l; } */
/*   case Set:              { alist = a.l; } */
/*   case Add:              { alist = a.l; } */
/*   case Size:             { alist = a.l; } */
/*   case EnsureCapacity:   { return a; } */
/*   case Error:            { return a ; } */
/*   } */
/*   return xform(alist); */
/* } */

/* AList xform(AList a) { */
/*   switch (a) { */
/*   case List:            return a;  */
/*   case Obj:             return a;  */
/*   case Get:             return get_xform(a.l, a.i);  */
/*   case Set:   	        return a;  */
/*   case Add:   	        return a;  */
/*   case Size:	        return size_xform(a.l, a.sz);  */
/*   case EnsureCapacity:  return ensureCapacity_xform(a.l);  */
/*   case Error:           return a;  */
/*   } */
/* } */

/* Object get_obj(AList a) { */
/*   if (a == null) return null; */
/*   Object current; */
/*   a = xform(a); */
/*   switch (a) { */
/*   case List:            { assert false; } */
/*   case Obj:             { current = a.o; } */
/*   case Get:             { assert false; } */
/*   case Set:             { assert false; } */
/*   case Add:             { assert false; } */
/*   case Size:            { assert false; } */
/*   case EnsureCapacity:  { assert false; } */
/*   case Error:           { assert false; } */
/*   } */
/*   return current; */
/* } */

/* int size_int(AList a) { */
/*   assert a != null; */
/*   int sz = 0; */
/*   a = xform(a); */
/*   switch (a) { */
/*   case List:            { assert false; } */
/*   case Obj:             { assert false; } */
/*   case Get:             { assert false; } */
/*   case Set:             { assert false; } */
/*   case Add:             { assert false; } */
/*   case Size:            { sz = a.sz; } */
/*   case EnsureCapacity:  { assert false; } */
/*   case Error:           { assert false; } */
/*   } */
/*   return sz; */
/* } */
