adt S {
  Stack { S s; }
  Pop   { S s; }
  Push  { S s; int v; }
}
S pop(S s)         { return new Pop(s=s); }
S push(S s, int v) { return new Push(s=s,v=v); }

S xform(S s) {
  switch(s) {
  case Stack: return s;
  case Pop:   return xform_pop(s.s);
  case Push:  return push(xform(s.s),s.v);
  }
}
S xform_pop(S s) {
  switch(s) {
  case Stack: return s;
  case Pop:   return xform(pop(xform_pop(s.s)));
  case Push:  return xform(s.s);
  }
}

harness void mn(int w, int x, int y, int z) {
  S empty = new Stack();
  
  // pop(push(s,x)) == ()
  assert xform(pop(push(new Stack(), x))) == empty;

  // pop(push(push(s,x),y)) == push(s,x)
  assert xform(pop(push(push(new Stack(),x),y))) == push(new Stack(), x);

  // pop(push(push(push(s,x),y),z)) == push(s,x)
  assert xform(pop(push(push(push(new Stack(),x),y),z))) == push(push(new Stack(), x), y);

  // pop(pop(push(push(s,x),y))) == ()
  assert xform(pop(pop(push(push(new Stack(),x),y)))) == empty;

  // push(pop(push(s,x)),y) == push(s,y)
  assert xform(push(pop(push(new Stack(),x)),y)) == push(new Stack(), y);

  // pop(push(pop(push(s,x)),y)) == ()
  assert xform(pop(push(pop(push(new Stack(),x)),y))) == empty;

  // pop(pop(pop(push(push(push(s,x),y),z)))) == ()
  assert xform(pop(pop(pop(push(push(push(new Stack(),x),y),z))))) == empty;
}
